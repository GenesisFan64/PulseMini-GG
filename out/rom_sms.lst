 AS V1.42 Beta [Bld 118] - source file main.asm - page 1 - 8/16/2019 1:31:15


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; SEGA MASTER SYSTEM GAME TEMPLATE
       4/       0 :                     ; +-----------------------------------------------------------------+
       5/       0 :                     
       6/       0 :                     		!org 0				; [AS] Start at 0
       7/       0 :                     		listing purecode		; [AS] Want listing file, but only the final code in expanded macros
       8/       0 :                     		supmode on 			; [AS] Supervisor mode
       9/       0 :                     		page 0				; [AS] Listing page 0
      10/       0 :                     		cpu Z80				; [AS] Current CPU is Z80
      11/       0 :                     		
      12/       0 :                     ; ====================================================================
      13/       0 :                     ; ----------------------------------------------------------------
      14/       0 :                     ; Include variables
      15/       0 :                     ; ----------------------------------------------------------------
      16/       0 :                     
      17/       0 :                     		include "system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; ---------------------------------------------
(1)    8/       0 :                     ; Functions
(1)    9/       0 :                     ; ---------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; example of function
(1)   12/       0 :                     locate		function b,c,(c&0FFh)|(b<<8&0FF00h)		; Layer,X pos,Y pos for some video routines
(1)   13/       0 :                     
(1)   14/       0 :                     ; ====================================================================
(1)   15/       0 :                     ; ---------------------------------------------
(1)   16/       0 :                     ; Macros
(1)   17/       0 :                     ; ---------------------------------------------
(1)   18/       0 :                     
(1)   19/       0 :                     ; -------------------------------------
(1)   20/       0 :                     ; Reserve memory space
(1)   21/       0 :                     ; -------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   24/       0 :                     GLBL_LASTPC	eval $
(1)   25/       0 :                     GLBL_LASTORG	eval $
(1)   26/       0 :                     		dephase
(1)   27/       0 :                     		phase thisinput
(1)   28/       0 :                     		endm
(1)   29/       0 :                     		
(1)   30/       0 :                     ; -------------------------------------
(1)   31/       0 :                     ; Finish reserve
(1)   32/       0 :                     ; -------------------------------------
(1)   33/       0 :                     
(1)   34/       0 :                     finish		macro				; Then finish
(1)   35/       0 :                     		!org GLBL_LASTORG
(1)   36/       0 :                     		phase GLBL_LASTPC
(1)   37/       0 :                     		endm
(1)   38/       0 :                     
(1)   39/       0 :                     ; -------------------------------------
(1)   40/       0 :                     ; ZERO Fill padding
(1)   41/       0 :                     ; 
(1)   42/       0 :                     ; if AS align doesn't work
(1)   43/       0 :                     ; -------------------------------------
(1)   44/       0 :                     
(1)   45/       0 :                     rompad		macro address			; Zero fill
(1)   46/       0 :                     diff := address - *
(1)   47/       0 :                     		if diff < 0
(1)   48/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   49/       0 :                     		else
(1)   50/       0 :                     			while diff > 1024
(1)   51/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   52/       0 :                     				dc.b [1024]0
(1)   53/       0 :                     diff := diff - 1024
(1)   54/       0 :                     			endm
(1)   55/       0 :                     			dc.b [diff]0
(1)   56/       0 :                     		endif
(1)   57/       0 :                     	endm
(1)   58/       0 :                     
(1)   59/       0 :                     ; ====================================================================
(1)   60/       0 :                     
      18/       0 :                     		include "system/const.asm"	; Variables and constants
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =C000H              MSRAM_START	equ	0C000h		; MS RAM Start
(1)    7/       0 : =1000H              MAX_MSERAM	equ	1000h		; Maximum temporal RAM for screen modes
(1)    8/       0 : =10H                MAX_PRNTLIST	equ	16		; Max print values
(1)    9/       0 :                     
(1)   10/       0 : =1FFH               varNullVram	equ	1FFh
(1)   11/       0 :                     
(1)   12/       0 :                     ; ====================================================================
(1)   13/       0 :                     ; ----------------------------------------------------------------
(1)   14/       0 :                     ; Variables
(1)   15/       0 :                     ; ----------------------------------------------------------------
(1)   16/       0 :                     
(1)   17/       0 :                     ; --------------------------------------------------------
(1)   18/       0 :                     ; System
(1)   19/       0 :                     ; --------------------------------------------------------
(1)   20/       0 :                     
(1)   21/       0 :                     ; ------------------------------------------------
(1)   22/       0 :                     ; Controller buttons
(1)   23/       0 :                     ; ------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 : =7H                 bitJoyStart	equ 7
(1)   26/       0 : =4H                 bitJoy1		equ 4
(1)   27/       0 : =5H                 bitJoy2		equ 5
(1)   28/       0 : =3H                 bitJoyRight	equ 3
(1)   29/       0 : =2H                 bitJoyLeft	equ 2
(1)   30/       0 : =1H                 bitJoyDown	equ 1
(1)   31/       0 : =0H                 bitJoyUp	equ 0
(1)   32/       0 :                     
(1)   33/       0 : =1H                 JoyUp		equ 01h
(1)   34/       0 : =2H                 JoyDown 	equ 02h
(1)   35/       0 : =4H                 JoyLeft		equ 04h
(1)   36/       0 : =8H                 JoyRight	equ 08h
(1)   37/       0 : =10H                Joy1		equ 10h
(1)   38/       0 : =20H                Joy2		equ 20h
(1)   39/       0 :                     
(1)   40/       0 :                     ; --------------------------------------------------------
(1)   41/       0 :                     ; Sound
(1)   42/       0 :                     ; --------------------------------------------------------
(1)   43/       0 :                     
(1)   44/       0 :                     ; settings
(1)   45/       0 : =4H                 MAX_CHNLS	equ 4
(1)   46/       0 : =2H                 MAX_TRACKS	equ 2
(1)   47/       0 :                     
(1)   48/       0 :                     ; Track structure
(1)   49/       0 : =0H                 trck_ReqBlk	equ 00h		; word
(1)   50/       0 : =2H                 trck_ReqPatt	equ 02h		; word
(1)   51/       0 : =4H                 trck_ReqIns	equ 04h		; word
(1)   52/       0 : =6H                 trck_ReqTicks	equ 06h
(1)   53/       0 : =7H                 trck_ReqTempo	equ 07h
(1)   54/       0 : =8H                 trck_ReqCurrBlk	equ 08h
(1)   55/       0 : =9H                 trck_ReqSndBnk	equ 09h
(1)   56/       0 : =AH                 trck_ReqFlag	equ 0Ah
(1)   57/       0 : =BH                 trck_ReqChnls	equ 0Bh
(1)   58/       0 : =CH                 trck_PsgNoise	equ 0Ch
(1)   59/       0 : =DH                 trck_TicksRead	equ 0Dh
(1)   60/       0 : =EH                 trck_BlockCurr	equ 0Eh
(1)   61/       0 : =FH                 trck_MasterVol	equ 0Fh
(1)   62/       0 : =10H                trck_Priority	equ 10h
(1)   63/       0 : =11H                trck_Active	equ 11h
(1)   64/       0 : =12H                trck_Blocks	equ 12h		; word
(1)   65/       0 : =14H                trck_PattBase	equ 14h		; word
(1)   66/       0 : =16H                trck_Instr	equ 16h		; word
(1)   67/       0 : =18H                trck_PattRead	equ 18h		; word
(1)   68/       0 : =1AH                trck_RowSteps	equ 1Ah		; word
(1)   69/       0 : =1CH                trck_TicksMain 	equ 1Ch
(1)   70/       0 : =1DH                trck_TempoBits	equ 1Dh
(1)   71/       0 : =1EH                trck_RowWait	equ 1Eh
(1)   72/       0 : =1FH                trck_TicksCurr	equ 1Fh
(1)   73/       0 : =20H                trck_PsgStereo	equ 20h
(1)   74/       0 :                     
(1)   75/       0 :                     ; channel buffers
(1)   76/       0 : =0H                 chnl_Chip	equ 0
(1)   77/       0 : =1H                 chnl_Type	equ 1
(1)   78/       0 : =2H                 chnl_Note	equ 2
(1)   79/       0 : =3H                 chnl_Ins	equ 3
(1)   80/       0 : =4H                 chnl_Vol	equ 4
(1)   81/       0 : =5H                 chnl_EffId	equ 5
(1)   82/       0 : =6H                 chnl_EffArg	equ 6
(1)   83/       0 : =7H                 chnl_InsAddr	equ 7		; word
(1)   84/       0 : =9H                 chnl_Freq	equ 09h		; word
(1)   85/       0 : =BH                 chnl_InsType	equ 0Bh
(1)   86/       0 : =CH                 chnl_InsOpt	equ 0Ch
(1)   87/       0 : =DH                 chnl_PsgPan	equ 0Dh
(1)   88/       0 : =EH                 chnl_PsgVolBase	equ 0Eh
(1)   89/       0 : =FH                 chnl_PsgVolEnv	equ 0Fh
(1)   90/       0 : =10H                chnl_PsgIndx	equ 10h
(1)   91/       0 : =11H                chnl_EfVolSlide	equ 11h
(1)   92/       0 : =12H                chnl_EfNewVol	equ 12h
(1)   93/       0 : =13H                chnl_EfPortam	equ 13h		; word
(1)   94/       0 : =15H                chnl_EfNewFreq	equ 15h		; word
(1)   95/       0 : =17H                chnl_PsgOutFreq	equ 17h		; word
(1)   96/       0 :                     
(1)   97/       0 :                     ; ====================================================================
(1)   98/       0 :                     ; ----------------------------------------------------------------
(1)   99/       0 :                     ; Alias
(1)  100/       0 :                     ; ----------------------------------------------------------------
(1)  101/       0 :                     
(1)  102/       0 : =C24DH              Controller_1	equ RAM_InputData
(1)  103/       0 : =C24FH              Controller_2	equ RAM_InputData+sizeof_input
(1)  104/       0 :                     
(1)  105/       0 : =C000H              VDP_PALETTE	equ 0C000h				; Palette
(1)  106/       0 :                     
(1)  107/       0 :                     ; ====================================================================
(1)  108/       0 :                     ; ----------------------------------------------------------------
(1)  109/       0 :                     ; Structures
(1)  110/       0 :                     ; ----------------------------------------------------------------
(1)  111/       0 :                     
(1)  112/       0 :                     ; Controller
(1)  113/       0 : (MACRO)             		struct 0
(1)  113/       0 : =0H                 GLBL_LASTPC     eval $
(1)  113/       0 : =0H                 GLBL_LASTORG    eval $
(1)  113/       0 :                                     dephase
(1)  113/       0 :                                     phase 0
(1)  114/       0 :                     on_hold		ds 1
(1)  115/       1 :                     on_press	ds 1
(1)  116/       2 :                     sizeof_input	ds 1
(1)  117/       3 : (MACRO)             		finish
(1)  117/       0 :                                     !org GLBL_LASTORG
(1)  117/       0 :                                     phase GLBL_LASTPC
(1)  118/       0 :                     
(1)  119/       0 :                     ; ====================================================================
(1)  120/       0 :                     ; ----------------------------------------------------------------
(1)  121/       0 :                     ; Master System RAM
(1)  122/       0 :                     ;
(1)  123/       0 :                     ; Note: 0DFFCh-0DFFFh (0FFFCh-0FFFFh)
(1)  124/       0 :                     ; is reserved for bankswitch
(1)  125/       0 :                     ; ----------------------------------------------------------------
(1)  126/       0 :                     
(1)  127/       0 :                     ; This looks bad but it works as intended
(1)  128/       0 :                     
(1)  129/       0 :                     	; First pass, empty sizes
(1)  130/       0 : (MACRO)             		struct MSRAM_START		; Set struct at start of our base RAM
(1)  130/       0 : =0H                 GLBL_LASTPC     eval $
(1)  130/       0 : =0H                 GLBL_LASTORG    eval $
(1)  130/       0 :                                     dephase
(1)  130/    C000 :                                     phase MSRAM_START
(1)  139/    C000 :                     	
(1)  140/    C000 :                     	; Second pass, sizes are set
(1)  141/    C000 :                     RAM_MsSound	ds sizeof_mssnd-RAM_MsSound
(1)  142/    C14C :                     RAM_MsVideo	ds sizeof_msvid-RAM_MsVideo
(1)  143/    C24D :                     RAM_MsSystem	ds sizeof_mssys-RAM_MsSystem
(1)  144/    C257 :                     RAM_Local	ds MAX_MSERAM
(1)  145/    D257 :                     RAM_Global	ds sizeof_global-RAM_Global
(1)  146/    D258 :                     sizeof_msram	ds 1
(1)  148/    D259 :                     	
(1)  149/    D259 :                     	; --------------------------------
(1)  150/    D259 :                     	; Report RAM usage
(1)  151/    D259 :                     	; on pass 7
(1)  155/    D259 : (MACRO)             		finish
(1)  155/    C000 :                                     !org GLBL_LASTORG
(1)  155/       0 :                                     phase GLBL_LASTPC
(1)  156/       0 :                     
(1)  157/       0 :                     ; ====================================================================
(1)  158/       0 :                     ; ----------------------------------------------------------------
(1)  159/       0 :                     ; System RAM
(1)  160/       0 :                     ; ----------------------------------------------------------------
(1)  161/       0 :                     
(1)  162/       0 : (MACRO)             		struct RAM_MsSystem
(1)  162/       0 : =0H                 GLBL_LASTPC     eval $
(1)  162/       0 : =0H                 GLBL_LASTORG    eval $
(1)  162/       0 :                                     dephase
(1)  162/    C24D :                                     phase RAM_MSSYSTEM
(1)  163/    C24D :                     RAM_InputData	ds sizeof_input*2		; 2 controller buffers
(1)  164/    C251 :                     RAM_VBlank	ds 3
(1)  165/    C254 :                     RAM_HBlank	ds 3
(1)  166/    C257 :                     sizeof_mssys	ds 1
(1)  167/    C258 : (MACRO)             		finish
(1)  167/    C24D :                                     !org GLBL_LASTORG
(1)  167/       0 :                                     phase GLBL_LASTPC
(1)  168/       0 :                     
(1)  169/       0 :                     ; ====================================================================
(1)  170/       0 :                     ; ----------------------------------------------------------------
(1)  171/       0 :                     ; Video cache RAM
(1)  172/       0 :                     ; ----------------------------------------------------------------
(1)  173/       0 :                     
(1)  174/       0 : (MACRO)             		struct RAM_MsVideo
(1)  174/       0 : =0H                 GLBL_LASTPC     eval $
(1)  174/       0 : =0H                 GLBL_LASTORG    eval $
(1)  174/       0 :                                     dephase
(1)  174/    C14C :                                     phase RAM_MSVIDEO
(1)  175/    C14C :                     RAM_VidPrntList	ds MAX_PRNTLIST*3		; VDP address (WORD), type (BYTE)
(1)  176/    C17C :                     RAM_VidPrntVram	ds 2				; Current VRAM address for the Print routines
(1)  177/    C17E :                     RAM_VdpCache	ds 11
(1)  178/    C189 :                     RAM_SprtY	ds 64				; Y list
(1)  179/    C1C9 :                     RAM_SprtX	ds 64*2				; X list + char
(1)  180/    C249 :                     RAM_CurrSprY	ds 2
(1)  181/    C24B :                     RAM_CurrSprX	ds 2
(1)  182/    C24D :                     sizeof_msvid	ds 1
(1)  183/    C24E : (MACRO)             		finish
(1)  183/    C14C :                                     !org GLBL_LASTORG
(1)  183/       0 :                                     phase GLBL_LASTPC
(1)  184/       0 :                     		
(1)  185/       0 :                     ; ====================================================================
(1)  186/       0 :                     ; ----------------------------------------------------------------
(1)  187/       0 :                     ; Sound buffer RAM
(1)  188/       0 :                     ; ----------------------------------------------------------------
(1)  189/       0 :                     
(1)  190/       0 : (MACRO)             			struct RAM_MsSound
(1)  190/       0 : =0H                 GLBL_LASTPC     eval $
(1)  190/       0 : =0H                 GLBL_LASTORG    eval $
(1)  190/       0 :                                     dephase
(1)  190/    C000 :                                     phase RAM_MSSOUND
(1)  191/    C000 :                     SndBuff_Track_1		ds 20h
(1)  192/    C020 :                     SndBuff_Track_2		ds 20h
(1)  193/    C040 :                     SndBuff_ChnlBuff_1	ds 20h*MAX_CHNLS
(1)  194/    C0C0 :                     SndBuff_ChnlBuff_2	ds 20h*MAX_CHNLS
(1)  195/    C140 :                     SndBuff_UsedChnls	ds MAX_CHNLS
(1)  196/    C144 :                     SndBuff_UsedChnls_2	ds MAX_CHNLS
(1)  197/    C148 :                     curr_NoiseMode		ds 1
(1)  198/    C149 :                     curr_SndBank		ds 1
(1)  199/    C14A : 01 00               curr_PsgStereo		dw 1			; Game gear only: current and past values
(1)  200/    C14C :                     sizeof_mssnd		ds 1
(1)  201/    C14D : (MACRO)             			finish
(1)  201/    C000 :                                     !org GLBL_LASTORG
(1)  201/       0 :                                     phase GLBL_LASTPC
(1)  202/       0 :                     
      19/       0 :                     		include "system/map.asm"	; Memory map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Memory map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; Banks are 4000h bytes long
(1)    7/       0 : =FFFCH              bank_ctrl	equ	0FFFCh
(1)    8/       0 : =FFFDH              bank_0		equ	0FFFDh		; First 1Kbytes (0000h-0400h) are locked to protect interrupts
(1)    9/       0 : =FFFEH              bank_1		equ	0FFFEh		;
(1)   10/       0 : =FFFFH              bank_2		equ	0FFFFh		; If bit 3 is set, Cartridge RAM will be mapped here instead.
(1)   11/       0 :                     
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     ; Ports
(1)   14/       0 :                     ; 
(1)   15/       0 :                     ; Remainder: only use these with IN and OUT
(1)   16/       0 :                     ; R - Read
(1)   17/       0 :                     ; W - Write
(1)   18/       0 :                     ; ----------------------------------------------------------------
(1)   19/       0 :                     
(1)   20/       0 : =3EH                memory_ctrl	equ	03Eh		; 
(1)   21/       0 : =3FH                joypad_ctrl	equ	03Fh		; R  | 
(1)   22/       0 : =7EH                v_counter	equ	07Eh
(1)   23/       0 : =7FH                psg_ctrl	equ	07Fh		; RW | if WRITE: psg register | if READ: h_counter
(1)   24/       0 : =BEH                vdp_data	equ	0BEh
(1)   25/       0 : =BFH                vdp_ctrl	equ	0BFh
(1)   26/       0 : =DCH                joypad_1	equ	0DCh
(1)   27/       0 : =DDH                joypad_2	equ	0DDh
(1)   28/       0 :                     
(1)   29/       0 :                     ; ------------------------------------------------
(1)   30/       0 :                     ; GAME GEAR ONLY
(1)   31/       0 :                     ; on Master System they probably just return -1
(1)   32/       0 :                     ; ------------------------------------------------
(1)   33/       0 :                     
(1)   34/       0 : =0H                 gg_info		equ	00h		; R  | SRN00000b (S-GG Start button | R-Region | N-NTSC/PAL)
(1)   35/       0 : =1H                 gg_ext_comm	equ	01h		; RW | EXT data if 7-bit mode is set
(1)   36/       0 : =2H                 gg_ext_bitdir	equ	02h		; RW | EXT data directions
(1)   37/       0 : =3H                 gg_serial_out	equ	03h		; RW | Serial data SEND port
(1)   38/       0 : =4H                 gg_serial_in	equ	04h		; R  | Serial data RECIEVE port
(1)   39/       0 : =5H                 gg_serial	equ	05h		; RW | Serial settings
(1)   40/       0 : =6H                 gg_stereo	equ	06h		;  W | PSG Stereo bits, set 0FFh if using Game Gear
(1)   41/       0 :                     
      20/       0 :                     		include "game/global.asm"	; Global variables and RAM
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Put your global structs/values here
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; --------------------------------------------------------
(1)    8/       0 :                     ; Structures
(1)    9/       0 :                     ; --------------------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; ====================================================================
(1)   12/       0 :                     ; --------------------------------------------------------
(1)   13/       0 :                     ; RAM
(1)   14/       0 :                     ; --------------------------------------------------------
(1)   15/       0 :                     
(1)   16/       0 : (MACRO)             		struct RAM_Global
(1)   16/       0 : =0H                 GLBL_LASTPC     eval $
(1)   16/       0 : =0H                 GLBL_LASTORG    eval $
(1)   16/       0 :                                     dephase
(1)   16/    D257 :                                     phase RAM_GLOBAL
(1)   17/    D257 :                     RAM_Glbl_Null	ds 1
(1)   18/    D258 :                     sizeof_global	ds 1
(1)   19/    D259 : (MACRO)             		finish
(1)   19/    D257 :                                     !org GLBL_LASTORG
(1)   19/       0 :                                     phase GLBL_LASTPC
(1)   20/       0 :                     		
(1)   21/       0 :                     
      21/       0 :                     
      22/       0 :                     ; ====================================================================
      23/       0 :                     ; DEFAULT BANK 0
      24/       0 :                     ; 0000-3FFFh
      25/       0 :                     ; 
      26/       0 :                     ; (0000-0400h is unaffected)
      27/       0 :                     ; ====================================================================
      28/       0 :                     
      29/       0 : F3                  		di				; Disable interrupts
      30/       1 : ED 56               		im	1			; Interrput mode 1 (standard)
      31/       3 : C3 00 18            		jp	MS_Init			; Go to MS_Init
      32/       6 :                     
      33/       6 :                     ; ====================================================================
      34/       6 :                     ; ----------------------------------------------------------------
      35/       6 :                     ; RST routines will go here (starting at 0008h)
      36/       6 :                     ; 
      37/       6 :                     ; aligned by 8
      38/       6 :                     ; ----------------------------------------------------------------
      39/       6 :                     
      40/       6 :                     		align 8
      41/       8 :                     
      42/       8 :                     ; ====================================================================
      43/       8 :                     ; ----------------------------------------------------------------
      44/       8 :                     ; VBlank and HBlank
      45/       8 :                     ; 
      46/       8 :                     ; located at 38h
      47/       8 :                     ; ----------------------------------------------------------------
      48/       8 :                     
      49/       8 :                     		align 38h
      50/      38 : F3                  		di
      51/      39 : F5                  		push	af
      52/      3A : DB BF               		in	a,(vdp_ctrl)
      53/      3C : 07                  		rlca
      54/      3D : DA 48 00            		jp	c,.vint
      55/      40 : F6 80               		or	80h
      56/      42 : C2 48 00            		jp	nz,.vint
      57/      45 : C3 54 C2            		jp	(RAM_HBlank)
      58/      48 :                     .vint:
      59/      48 : C3 51 C2            		jp	(RAM_VBlank)
      60/      4B :                     Int_Exit:
      61/      4B : F1                  		pop	af
      62/      4C : FB                  		ei
      63/      4D : C9                  		ret
      64/      4E :                     
      65/      4E :                     ; ====================================================================
      66/      4E :                     ; ----------------------------------------------------------------
      67/      4E :                     ; Master System PAUSE Button interrupt
      68/      4E :                     ; 
      69/      4E :                     ; at address 0066h
      70/      4E :                     ; ----------------------------------------------------------------
      71/      4E :                     
      72/      4E :                     		align 66h
      73/      66 : C9                  		ret
      74/      67 :                     
      75/      67 :                     ; ====================================================================
      76/      67 :                     ; ----------------------------------------------------------------
      77/      67 :                     ; Default VBlank
      78/      67 :                     ; ----------------------------------------------------------------
      79/      67 :                     
      80/      67 :                     MS_VInt:
      81/      67 : DD E5               		push	ix
      82/      69 : FD E5               		push	iy
      83/      6B : C5                  		push	bc
      84/      6C : D5                  		push	de
      85/      6D : E5                  		push	hl
      86/      6E : D9                  		exx
      87/      6F : C5                  		push	bc
      88/      70 : D5                  		push	de
      89/      71 : E5                  		push	hl
      90/      72 :                     		
      91/      72 : CD 96 17            		call	System_Input
      92/      75 : CD C1 00            		call	Sound_Run
      93/      78 :                     
      94/      78 : E1                  		pop	hl
      95/      79 : D1                  		pop	de
      96/      7A : C1                  		pop	bc
      97/      7B : D9                  		exx
      98/      7C : E1                  		pop	hl
      99/      7D : D1                  		pop	de
     100/      7E : C1                  		pop	bc
     101/      7F : FD E1               		pop	iy
     102/      81 : DD E1               		pop	ix
     103/      83 : C3 4B 00            		jp	Int_Exit
     104/      86 :                     		
     105/      86 :                     ; ====================================================================
     106/      86 :                     ; ----------------------------------------------------------------
     107/      86 :                     ; Default HBlank
     108/      86 :                     ; ----------------------------------------------------------------
     109/      86 :                     
     110/      86 :                     MS_HInt:
     111/      86 : C3 4B 00            		jp	Int_Exit
     112/      89 :                     
     113/      89 :                     ; ====================================================================
     114/      89 :                     ; ----------------------------------------------------------------
     115/      89 :                     ; System functions
     116/      89 :                     ; ----------------------------------------------------------------
     117/      89 :                     
     118/      89 :                     		include "system/sound.asm"	; Sound
(1)    1/      89 :                     ; ====================================================================
(1)    2/      89 :                     ; ----------------------------------------------------------------
(1)    3/      89 :                     ; Sound
(1)    4/      89 :                     ; ----------------------------------------------------------------
(1)    5/      89 :                     
(1)    6/      89 :                     ; ============================================================
(1)    7/      89 :                     ; --------------------------------------------------------
(1)    8/      89 :                     ; Init Sound
(1)    9/      89 :                     ; --------------------------------------------------------
(1)   10/      89 :                     
(1)   11/      89 :                     Sound_Init:
(1)   12/      89 : 3E 9F               		ld	a,09Fh
(1)   13/      8B : D3 7F               		out	(psg_ctrl),a			; Set PSG1 Volume to OFF
(1)   14/      8D : 3E BF               		ld	a,0BFh
(1)   15/      8F : D3 7F               		out	(psg_ctrl),a			; Set PSG2 Volume to OFF
(1)   16/      91 : 3E DF               		ld	a,0DFh
(1)   17/      93 : D3 7F               		out	(psg_ctrl),a			; Set PSG3 Volume to OFF
(1)   18/      95 : 3E FF               		ld	a,0FFh
(1)   19/      97 : D3 7F               		out	(psg_ctrl),a			; Set NOISE Volume to OFF
(1)   20/      99 :                     		; YM silence goes here
(1)   21/      99 :                     	
(1)   22/      99 :                     	; Set priority to the BGM track buffer
(1)   23/      99 : 21 30 C0            		ld	hl,SndBuff_Track_2+trck_Priority
(1)   24/      9C : 36 01               		ld	(hl),1
(1)   25/      9E :                     		
(1)   26/      9E :                     	; Init the first 4 channels as PSG
(1)   27/      9E : DD 21 40 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   28/      A2 : FD 21 C0 C0         		ld	iy,SndBuff_ChnlBuff_2
(1)   29/      A6 : 06 04               		ld	b,4
(1)   30/      A8 : 11 20 00            		ld	de,20h
(1)   31/      AB : 3E 80               		ld	a,80h
(1)   32/      AD :                     .nxtchnl:
(1)   33/      AD : DD 77 00            		ld	(ix+chnl_Chip),a
(1)   34/      B0 : FD 77 00            		ld	(iy+chnl_Chip),a
(1)   35/      B3 : C6 20               		add 	a,20h
(1)   36/      B5 : DD 19               		add 	ix,de
(1)   37/      B7 : FD 19               		add 	iy,de
(1)   38/      B9 : 10 F2               		djnz	.nxtchnl
(1)   39/      BB : 3E FF               		ld	a,-1
(1)   40/      BD : 32 4A C1            		ld	(curr_PsgStereo),a
(1)   41/      C0 :                     
(1)   42/      C0 :                     	; FM regs go here
(1)   43/      C0 : C9                  		ret
(1)   44/      C1 :                     
(1)   45/      C1 :                     ; ============================================================
(1)   46/      C1 :                     ; --------------------------------------------------------
(1)   47/      C1 :                     ; Init Sound
(1)   48/      C1 :                     ; --------------------------------------------------------
(1)   49/      C1 :                     
(1)   50/      C1 :                     Sound_Run:
(1)   51/      C1 :                     ; 		ld	a,(curr_SndBank)		; TODO: set bankswitch
(1)   52/      C1 :                     ; 		rst 	8
(1)   53/      C1 : FD 21 00 C0         		ld	iy,SndBuff_Track_1
(1)   54/      C5 : DD 21 40 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   55/      C9 : CD 1F 01            		call	SndDrv_ReadTrack
(1)   56/      CC : FD 21 20 C0         		ld	iy,SndBuff_Track_2
(1)   57/      D0 : DD 21 C0 C0         		ld	ix,SndBuff_ChnlBuff_2
(1)   58/      D4 : C3 1F 01            		jp	SndDrv_ReadTrack
(1)   59/      D7 :                     ; 		ld	a,(curr_SndBank)		; TODO: return bankswitch
(1)   60/      D7 :                     ; 		rst 	8
(1)   61/      D7 : C9                  		ret
(1)   62/      D8 :                     
(1)   63/      D8 :                     ; ===================================================================
(1)   64/      D8 :                     ; ----------------------------------------------------
(1)   65/      D8 :                     ; Subs
(1)   66/      D8 :                     ; ----------------------------------------------------
(1)   67/      D8 :                     
(1)   68/      D8 :                     ; --------------------------------------------------------
(1)   69/      D8 :                     ; Sound_SetTrack
(1)   70/      D8 :                     ; 
(1)   71/      D8 :                     ; Input:
(1)   72/      D8 :                     ; hl | Track data array:
(1)   73/      D8 :                     ; 		dw blocks
(1)   74/      D8 :                     ;		dw pattern
(1)   75/      D8 :                     ;		dw instruments
(1)   76/      D8 :                     ;		
(1)   77/      D8 :                     ;  a | Track slot
(1)   78/      D8 :                     ;  b | Music bank
(1)   79/      D8 :                     ;  c | Block start
(1)   80/      D8 :                     ;  d | Tempo bits
(1)   81/      D8 :                     ;  e | Ticks
(1)   82/      D8 :                     ; --------------------------------------------------------
(1)   83/      D8 :                     
(1)   84/      D8 :                     Sound_SetTrack:
(1)   85/      D8 : FD 21 00 C0         		ld	iy,SndBuff_Track_1
(1)   86/      DC : B7                  		or	a
(1)   87/      DD : CA E4 00            		jp	z,.sfx_prio
(1)   88/      E0 : FD 21 20 C0         		ld	iy,SndBuff_Track_2
(1)   89/      E4 :                     .sfx_prio:
(1)   90/      E4 : FD 70 09            		ld	(iy+trck_ReqSndBnk),b
(1)   91/      E7 : FD 71 08            		ld	(iy+trck_ReqCurrBlk),c
(1)   92/      EA : FD 72 07            		ld	(iy+trck_ReqTempo),d
(1)   93/      ED : FD 73 06            		ld	(iy+trck_ReqTicks),e
(1)   94/      F0 :                     
(1)   95/      F0 : 7E                  		ld	a,(hl)
(1)   96/      F1 : FD 77 00            		ld	(iy+trck_ReqBlk),a
(1)   97/      F4 : 23                  		inc 	hl
(1)   98/      F5 : 7E                  		ld	a,(hl)
(1)   99/      F6 : FD 77 01            		ld	(iy+(trck_ReqBlk+1)),a
(1)  100/      F9 : 23                  		inc 	hl
(1)  101/      FA :                     
(1)  102/      FA : 7E                  		ld	a,(hl)
(1)  103/      FB : FD 77 02            		ld	(iy+trck_ReqPatt),a
(1)  104/      FE : 23                  		inc 	hl
(1)  105/      FF : 7E                  		ld	a,(hl)
(1)  106/     100 : FD 77 03            		ld	(iy+(trck_ReqPatt+1)),a
(1)  107/     103 : 23                  		inc 	hl
(1)  108/     104 :                     		
(1)  109/     104 : 7E                  		ld	a,(hl)
(1)  110/     105 : FD 77 04            		ld	(iy+trck_ReqIns),a
(1)  111/     108 : 23                  		inc 	hl
(1)  112/     109 : 7E                  		ld	a,(hl)
(1)  113/     10A : FD 77 05            		ld	(iy+(trck_ReqIns+1)),a
(1)  114/     10D :                     
(1)  115/     10D : FD 36 0A 01         		ld	(iy+trck_ReqFlag),1		; Request $01, set and play song
(1)  116/     111 : C9                  		ret
(1)  117/     112 :                     		
(1)  118/     112 :                     ; --------------------------------------------------------
(1)  119/     112 :                     ; Sound_Stop
(1)  120/     112 :                     ; 
(1)  121/     112 :                     ; Input:
(1)  122/     112 :                     ;  a | Track slot
(1)  123/     112 :                     ; --------------------------------------------------------
(1)  124/     112 :                     
(1)  125/     112 :                     Sound_StopTrack:
(1)  126/     112 : 21 0A C0            		ld	hl,SndBuff_Track_1+trck_ReqFlag
(1)  127/     115 : B7                  		or	a
(1)  128/     116 : CA 1C 01            		jp	z,.sfx_prio
(1)  129/     119 : 21 2A C0            		ld	hl,SndBuff_Track_2+trck_ReqFlag
(1)  130/     11C :                     .sfx_prio:
(1)  131/     11C : 36 02               		ld	(hl),2		; Request $02
(1)  132/     11E : C9                  		ret
(1)  133/     11F :                     
(1)  134/     11F :                     ; ===================================================================
(1)  135/     11F :                     ; ------------------------------------
(1)  136/     11F :                     ; Read track
(1)  137/     11F :                     ; 
(1)  138/     11F :                     ; iy - Pattern buffer
(1)  139/     11F :                     ; ix - Channel list
(1)  140/     11F :                     ; ------------------------------------
(1)  141/     11F :                     
(1)  142/     11F :                     SndDrv_ReadTrack:
(1)  143/     11F : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1)  144/     122 : B7                  		or	a
(1)  145/     123 : C4 FC 06            		call	nz,SndDrv_ReqTrack
(1)  146/     126 : FD 7E 11            		ld	a,(iy+trck_Active)
(1)  147/     129 : B7                  		or	a
(1)  148/     12A : C8                  		ret	z
(1)  149/     12B :                     
(1)  150/     12B : FD 7E 1D            		ld	a,(iy+trck_TempoBits)
(1)  151/     12E : 0F                  		rrca
(1)  152/     12F : FD 77 1D            		ld	(iy+trck_TempoBits),a
(1)  153/     132 : DA 43 01            		jp	c,.force_on
(1)  154/     135 : FD 7E 0D            		ld	a,(iy+trck_TicksRead)
(1)  155/     138 : 3D                  		dec	a
(1)  156/     139 : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  157/     13C : F0                  		ret	p
(1)  158/     13D : FD 7E 1F            		ld	a,(iy+trck_TicksCurr)		; save Ticks
(1)  159/     140 : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  160/     143 :                     .force_on:
(1)  161/     143 : FD 7E 1E            		ld	a,(iy+trck_RowWait)		; row countdown
(1)  162/     146 : 3D                  		dec	a
(1)  163/     147 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  164/     14A : F2 1E 02            		jp	p,.row_countdwn
(1)  165/     14D : FD 36 1E 00         		ld	(iy+trck_RowWait),0
(1)  166/     151 :                     		
(1)  167/     151 :                     ; ------------------------------
(1)  168/     151 :                     ; check for new track data
(1)  169/     151 :                     ; ------------------------------
(1)  170/     151 :                     
(1)  171/     151 : FD 5E 1A            		ld	e,(iy+trck_RowSteps)		; Row finished?
(1)  172/     154 : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  173/     157 : 7B                  		ld	a,e
(1)  174/     158 : B2                  		or	d
(1)  175/     159 : C2 A1 01            		jp	nz,.dontupd_trck
(1)  176/     15C :                     .trck_restart:
(1)  177/     15C : 11 00 00            		ld	de,0
(1)  178/     15F : FD 5E 0E            		ld	e,(iy+trck_BlockCurr)
(1)  179/     162 : FD 6E 12            		ld	l,(iy+trck_Blocks)
(1)  180/     165 : FD 66 13            		ld	h,(iy+(trck_Blocks+1))
(1)  181/     168 : 4D                  		ld	c,l				; bc - copy of hl
(1)  182/     169 : 44                  		ld	b,h
(1)  183/     16A : 19                  		add 	hl,de
(1)  184/     16B : 7E                  		ld	a,(hl)
(1)  185/     16C : FE FE               		cp	0FEh
(1)  186/     16E : CC 08 02            		call	z,.skip_block
(1)  187/     171 : FE FF               		cp	0FFh				; End of song marker? 0FFh
(1)  188/     173 : CA 0C 02            		jp	z,.stop_track
(1)  189/     176 : 87                  		add 	a,a
(1)  190/     177 : 87                  		add 	a,a
(1)  191/     178 : 23                  		inc 	hl
(1)  192/     179 : FD 34 0E            		inc 	(iy+trck_BlockCurr)
(1)  193/     17C : 11 00 00            		ld	de,0
(1)  194/     17F : 5F                  		ld	e,a
(1)  195/     180 : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  196/     183 : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  197/     186 : 19                  		add 	hl,de
(1)  198/     187 : 4E                  		ld	c,(hl)
(1)  199/     188 : 23                  		inc 	hl
(1)  200/     189 : 46                  		ld	b,(hl)
(1)  201/     18A : 23                  		inc 	hl
(1)  202/     18B : 5E                  		ld	e,(hl)
(1)  203/     18C : 23                  		inc 	hl
(1)  204/     18D : 56                  		ld	d,(hl)
(1)  205/     18E : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  206/     191 : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  207/     194 : 09                  		add 	hl,bc
(1)  208/     195 : FD 75 18            		ld	(iy+trck_PattRead),l
(1)  209/     198 : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  210/     19B : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  211/     19E : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  212/     1A1 :                     .dontupd_trck:
(1)  213/     1A1 : FD 6E 18            		ld	l,(iy+trck_PattRead)		; Set last read point
(1)  214/     1A4 : FD 66 19            		ld	h,(iy+(trck_PattRead+1))
(1)  215/     1A7 :                     
(1)  216/     1A7 :                     ; ------------------------------
(1)  217/     1A7 :                     ; Check timer or note data
(1)  218/     1A7 :                     ; ------------------------------
(1)  219/     1A7 : 7E                  		ld	a,(hl)
(1)  220/     1A8 : B7                  		or	a
(1)  221/     1A9 : F2 14 02            		jp	p,.set_timer
(1)  222/     1AC :                     .loop_me:
(1)  223/     1AC : 23                  		inc	hl
(1)  224/     1AD : 4F                  		ld	c,a
(1)  225/     1AE : E6 3F               		and	00111111b
(1)  226/     1B0 : 11 00 00            		ld	de,0			; size 20h
(1)  227/     1B3 : 5F                  		ld	e,a
(1)  228/     1B4 : E6 18               		and	00011000b
(1)  229/     1B6 : 0F                  		rrca
(1)  230/     1B7 : 0F                  		rrca
(1)  231/     1B8 : 0F                  		rrca
(1)  232/     1B9 : 57                  		ld	d,a
(1)  233/     1BA : 7B                  		ld	a,e
(1)  234/     1BB : E6 07               		and	00000111b
(1)  235/     1BD : 0F                  		rrca
(1)  236/     1BE : 0F                  		rrca
(1)  237/     1BF : 0F                  		rrca
(1)  238/     1C0 : 5F                  		ld	e,a
(1)  239/     1C1 : DD E5               		push	ix			; Save channel buffer
(1)  240/     1C3 : DD 19               		add	ix,de
(1)  241/     1C5 : CB 71               		bit 	6,c
(1)  242/     1C7 : CA CF 01            		jp	z,.keep_ctrl
(1)  243/     1CA : 7E                  		ld	a,(hl)
(1)  244/     1CB : 23                  		inc	hl
(1)  245/     1CC : DD 77 01            		ld	(ix+chnl_Type),a
(1)  246/     1CF :                     .keep_ctrl:
(1)  247/     1CF : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  248/     1D2 : 0F                  		rrca
(1)  249/     1D3 : D2 DB 01            		jp	nc,.no_note
(1)  250/     1D6 : 4E                  		ld	c,(hl)			; Note
(1)  251/     1D7 : 23                  		inc 	hl
(1)  252/     1D8 : DD 71 02            		ld	(ix+chnl_Note),c
(1)  253/     1DB :                     .no_note:
(1)  254/     1DB : 0F                  		rrca				; Instrument
(1)  255/     1DC : D2 E4 01            		jp	nc,.no_inst
(1)  256/     1DF : 4E                  		ld	c,(hl)
(1)  257/     1E0 : 23                  		inc 	hl
(1)  258/     1E1 : DD 71 03            		ld	(ix+chnl_Ins),c
(1)  259/     1E4 :                     .no_inst:
(1)  260/     1E4 : 0F                  		rrca				; Volume
(1)  261/     1E5 : D2 ED 01            		jp	nc,.no_vol
(1)  262/     1E8 : 4E                  		ld	c,(hl)
(1)  263/     1E9 : 23                  		inc 	hl
(1)  264/     1EA : DD 71 04            		ld	(ix+chnl_Vol),c
(1)  265/     1ED :                     .no_vol:
(1)  266/     1ED : 0F                  		rrca				; Effect
(1)  267/     1EE : D2 FB 01            		jp	nc,.no_eff
(1)  268/     1F1 : 4E                  		ld	c,(hl)
(1)  269/     1F2 : 23                  		inc 	hl
(1)  270/     1F3 : DD 71 05            		ld	(ix+chnl_EffId),c
(1)  271/     1F6 : 4E                  		ld	c,(hl)
(1)  272/     1F7 : 23                  		inc 	hl
(1)  273/     1F8 : DD 71 06            		ld	(ix+chnl_EffArg),c
(1)  274/     1FB :                     .no_eff:
(1)  275/     1FB : CD 10 03            		call	.chip_setup
(1)  276/     1FE : DD E1               		pop	ix			; Restore channel buffer
(1)  277/     200 : 7E                  		ld	a,(hl)
(1)  278/     201 : B7                  		or	a
(1)  279/     202 : CA 17 02            		jp	z,.exit_notes
(1)  280/     205 : C3 AC 01            		jp	.loop_me
(1)  281/     208 :                     		
(1)  282/     208 :                     ; ------------------------------
(1)  283/     208 :                     ; block 0FEh
(1)  284/     208 :                     ; skip block
(1)  285/     208 :                     ; ------------------------------
(1)  286/     208 :                     
(1)  287/     208 :                     ; TODO ver que es esto
(1)  288/     208 :                     ; en OpenMPT
(1)  289/     208 :                     .skip_block:
(1)  290/     208 : FD 34 0E            		inc	(iy+trck_BlockCurr)
(1)  291/     20B : C9                  		ret
(1)  292/     20C :                     		
(1)  293/     20C :                     ; ------------------------------
(1)  294/     20C :                     ; block 0FFh
(1)  295/     20C :                     ; end of tracks
(1)  296/     20C :                     ; ------------------------------
(1)  297/     20C :                     
(1)  298/     20C :                     .stop_track:
(1)  299/     20C : CD 7A 07            		call	SndDrv_ResetChan
(1)  300/     20F : FD 36 11 00         		ld	(iy+trck_Active),0
(1)  301/     213 : C9                  		ret
(1)  302/     214 :                     
(1)  303/     214 :                     ; ------------------------------
(1)  304/     214 :                     ; Set ROW wait timer
(1)  305/     214 :                     ; 
(1)  306/     214 :                     ; if a = 00h-7Fh
(1)  307/     214 :                     ; ------------------------------
(1)  308/     214 :                     
(1)  309/     214 :                     .set_timer:
(1)  310/     214 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  311/     217 :                     
(1)  312/     217 :                     ; ------------------------------
(1)  313/     217 :                     ; Note pack exit
(1)  314/     217 :                     ; ------------------------------
(1)  315/     217 :                     
(1)  316/     217 :                     .exit_notes:
(1)  317/     217 : 23                  		inc 	hl
(1)  318/     218 :                     .exit_busy:
(1)  319/     218 : FD 75 18            		ld	(iy+trck_PattRead),l		; Save new read point
(1)  320/     21B : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  321/     21E :                     
(1)  322/     21E :                     ; ------------------------------
(1)  323/     21E :                     ; Decrement rows
(1)  324/     21E :                     ; ------------------------------
(1)  325/     21E :                     
(1)  326/     21E :                     .row_countdwn:
(1)  327/     21E : FD 5E 1A            		ld	e,(iy+trck_RowSteps)
(1)  328/     221 : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  329/     224 : 1B                  		dec 	de
(1)  330/     225 : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  331/     228 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  332/     22B :                     		
(1)  333/     22B :                     ; --------------------------------
(1)  334/     22B :                     ; Update PSG manually
(1)  335/     22B :                     ; --------------------------------
(1)  336/     22B :                     
(1)  337/     22B : CD 6D 02            		call	.psg_envlope
(1)  338/     22E : 11 20 00            		ld	de,20h
(1)  339/     231 : DD 19               		add 	ix,de
(1)  340/     233 : CD 6D 02            		call	.psg_envlope
(1)  341/     236 : 11 40 00            		ld	de,40h			; go to NOISE first
(1)  342/     239 : DD 19               		add 	ix,de
(1)  343/     23B : CD 6D 02            		call	.psg_envlope
(1)  344/     23E : 11 E0 FF            		ld	de,-20h			; back to PSG3
(1)  345/     241 : DD 19               		add 	ix,de
(1)  346/     243 :                     ; 		ld	a,(curr_NoiseMode)
(1)  347/     243 :                     ; 		and	00000011b
(1)  348/     243 :                     ; 		cp	3
(1)  349/     243 :                     ; 		jp	nz,.psg_envlope
(1)  350/     243 :                     ; 		ld	a,0DFh
(1)  351/     243 :                     ; 		out	(psg_ctrl),a
(1)  352/     243 :                     ; 		ret
(1)  353/     243 :                     
(1)  354/     243 : 3A 48 C1            		ld	a,(curr_NoiseMode)
(1)  355/     246 : E6 03               		and	00000011b
(1)  356/     248 : FE 03               		cp	3
(1)  357/     24A : CA 52 02            		jp	z,.no_tone3
(1)  358/     24D : CD 6D 02            		call	.psg_envlope
(1)  359/     250 : 18 04               		jr	.set_stereo
(1)  360/     252 :                     .no_tone3:
(1)  361/     252 : 3E DF               		ld	a,0DFh
(1)  362/     254 : D3 7F               		out	(psg_ctrl),a
(1)  363/     256 :                     .set_stereo:
(1)  364/     256 : DB 00               		in	a,(gg_info)
(1)  365/     258 : E6 1F               		and	1Fh
(1)  366/     25A : C0                  		ret	nz
(1)  367/     25B : 3A 4A C1            		ld	a,(curr_PsgStereo)
(1)  368/     25E : 4F                  		ld	c,a
(1)  369/     25F : 3A 4B C1            		ld	a,(curr_PsgStereo+1)
(1)  370/     262 : B9                  		cp	c
(1)  371/     263 : CA 6C 02            		jp	z,.not_stereo
(1)  372/     266 : 79                  		ld	a,c
(1)  373/     267 : 32 4B C1            		ld	(curr_PsgStereo+1),a
(1)  374/     26A : D3 06               		out	(gg_stereo),a
(1)  375/     26C :                     .not_stereo:
(1)  376/     26C : C9                  		ret
(1)  377/     26D :                     
(1)  378/     26D :                     ; --------------------------------
(1)  379/     26D :                     
(1)  380/     26D :                     .psg_envlope:
(1)  381/     26D : CD DA 03            		call	.search_slot
(1)  382/     270 : D8                  		ret	c
(1)  383/     271 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  384/     274 : B7                  		or	a
(1)  385/     275 : C8                  		ret	z
(1)  386/     276 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  387/     279 : 57                  		ld	d,a
(1)  388/     27A : FE E0               		cp	0E0h
(1)  389/     27C : C2 8F 02            		jp	nz,.not_noise
(1)  390/     27F : 3A 48 C1            		ld	a,(curr_NoiseMode)
(1)  391/     282 : FD 4E 0C            		ld	c,(iy+trck_PsgNoise)
(1)  392/     285 : B9                  		cp	c
(1)  393/     286 : CA 8F 02            		jp	z,.not_noise
(1)  394/     289 : 79                  		ld	a,c
(1)  395/     28A : 32 48 C1            		ld	(curr_NoiseMode),a
(1)  396/     28D : D3 7F               		out	(psg_ctrl),a
(1)  397/     28F :                     .not_noise:
(1)  398/     28F : 7A                  		ld	a,d
(1)  399/     290 : F6 1F               		or	1Fh
(1)  400/     292 : 5F                  		ld	e,a
(1)  401/     293 : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  402/     296 : FE FF               		cp	-1
(1)  403/     298 : CA 0C 03            		jp	z,.set_vol
(1)  404/     29B : FE FE               		cp	-2
(1)  405/     29D : CA 0C 03            		jp	z,.set_vol
(1)  406/     2A0 : FE F6               		cp	-10
(1)  407/     2A2 : CA 0C 03            		jp	z,.set_vol
(1)  408/     2A5 :                     
(1)  409/     2A5 : DD 7E 17            		ld	a,(ix+chnl_PsgOutFreq)
(1)  410/     2A8 : B7                  		or	a
(1)  411/     2A9 : CA B7 02            		jp	z,.no_upd_freq
(1)  412/     2AC : D3 7F               		out	(psg_ctrl),a
(1)  413/     2AE : AF                  		xor	a
(1)  414/     2AF : DD 77 17            		ld	(ix+chnl_PsgOutFreq),a
(1)  415/     2B2 : DD 7E 18            		ld	a,(ix+(chnl_PsgOutFreq+1))
(1)  416/     2B5 : D3 7F               		out	(psg_ctrl),a
(1)  417/     2B7 :                     .no_upd_freq:
(1)  418/     2B7 : DD 7E 0D            		ld	a,(ix+chnl_PsgPan)
(1)  419/     2BA : 4F                  		ld	c,a
(1)  420/     2BB : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  421/     2BE : 06 EE               		ld	b,11101110b
(1)  422/     2C0 : 07                  		rlca
(1)  423/     2C1 : 07                  		rlca
(1)  424/     2C2 : 07                  		rlca
(1)  425/     2C3 : E6 03               		and 	00000011b
(1)  426/     2C5 : 3D                  		dec	a
(1)  427/     2C6 : FA D7 02            		jp	m,.clrpanfirst
(1)  428/     2C9 : CB 00               		rlc 	b
(1)  429/     2CB : 3D                  		dec	a
(1)  430/     2CC : FA D7 02            		jp	m,.clrpanfirst
(1)  431/     2CF : CB 00               		rlc 	b
(1)  432/     2D1 : 3D                  		dec	a
(1)  433/     2D2 : FA D7 02            		jp	m,.clrpanfirst
(1)  434/     2D5 : CB 00               		rlc 	b
(1)  435/     2D7 :                     .clrpanfirst:
(1)  436/     2D7 :                     
(1)  437/     2D7 : 3A 4A C1            		ld	a,(curr_PsgStereo)
(1)  438/     2DA : A0                  		and 	b
(1)  439/     2DB : B1                  		or	c
(1)  440/     2DC : 32 4A C1            		ld	(curr_PsgStereo),a
(1)  441/     2DF :                     		
(1)  442/     2DF : DD 66 08            		ld	h,(ix+(chnl_InsAddr+1))
(1)  443/     2E2 : DD 6E 07            		ld	l,(ix+chnl_InsAddr)
(1)  444/     2E5 : DD 5E 0E            		ld	e,(ix+chnl_PsgVolBase)		; Set volume
(1)  445/     2E8 : 01 00 00            		ld	bc,0
(1)  446/     2EB : DD 4E 10            		ld	c,(ix+chnl_PsgIndx)
(1)  447/     2EE : 09                  		add 	hl,bc
(1)  448/     2EF : 7E                  		ld	a,(hl)
(1)  449/     2F0 : FE FF               		cp	-1
(1)  450/     2F2 : CA FB 02            		jp	z,.last_env
(1)  451/     2F5 : DD 77 0F            		ld	(ix+chnl_PsgVolEnv),a
(1)  452/     2F8 : DD 34 10            		inc 	(ix+chnl_PsgIndx)
(1)  453/     2FB :                     .last_env:
(1)  454/     2FB : DD 7E 0F            		ld	a,(ix+chnl_PsgVolEnv)
(1)  455/     2FE : 83                  		add 	a,e
(1)  456/     2FF : 5F                  		ld	e,a
(1)  457/     300 : E6 F0               		and	11110000b
(1)  458/     302 : CA 07 03            		jp	z,.no_max
(1)  459/     305 : 1E 0F               		ld	e,00001111b
(1)  460/     307 :                     .no_max:
(1)  461/     307 : 7B                  		ld	a,e
(1)  462/     308 : F6 10               		or	00010000b
(1)  463/     30A : B2                  		or	d
(1)  464/     30B : 5F                  		ld	e,a
(1)  465/     30C :                     .set_vol:
(1)  466/     30C : 7B                  		ld	a,e
(1)  467/     30D : D3 7F               		out	(psg_ctrl),a
(1)  468/     30F :                     .next_psg:
(1)  469/     30F : C9                  		ret
(1)  470/     310 :                     
(1)  471/     310 :                     ; ------------------------------------
(1)  472/     310 :                     ; Set chip
(1)  473/     310 :                     ; 
(1)  474/     310 :                     ; iy - track buffer
(1)  475/     310 :                     ; ix - current channel
(1)  476/     310 :                     ; ------------------------------------
(1)  477/     310 :                     
(1)  478/     310 :                     .chip_setup:
(1)  479/     310 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  480/     313 : E6 07               		and	111b
(1)  481/     315 : FE 03               		cp	3
(1)  482/     317 : C8                  		ret	z			; 03h invalid channel
(1)  483/     318 :                     
(1)  484/     318 :                     ; ---------------------------------------------
(1)  485/     318 :                     ; Track channel list:
(1)  486/     318 :                     ; FM1 FM2 FM4 FM5 FM3 FM6 PSG1 PSG2 PSG3 NOISE
(1)  487/     318 :                     ; ---------------------------------------------
(1)  488/     318 :                     
(1)  489/     318 : E5                  		push	hl
(1)  490/     319 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Instrument
(1)  491/     31C : CB 6F               		bit	5,a
(1)  492/     31E : C2 26 03            		jp	nz,.use_newinst
(1)  493/     321 : E6 02               		and	0010b
(1)  494/     323 : CA 61 03            		jp	z,.no_newinst
(1)  495/     326 :                     .use_newinst:
(1)  496/     326 : CD AE 05            		call	.grab_instslot
(1)  497/     329 : 7E                  		ld	a,(hl)
(1)  498/     32A : FE FF               		cp	-1
(1)  499/     32C : CA 61 03            		jp	z,.no_newinst
(1)  500/     32F : DD 77 0B            		ld	(ix+chnl_InsType),a
(1)  501/     332 : 23                  		inc	hl
(1)  502/     333 : 7E                  		ld	a,(hl)
(1)  503/     334 : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1)  504/     337 : 23                  		inc	hl
(1)  505/     338 : 7E                  		ld	a,(hl)
(1)  506/     339 : DD 77 07            		ld	(ix+chnl_InsAddr),a
(1)  507/     33C : 23                  		inc	hl
(1)  508/     33D : 7E                  		ld	a,(hl)
(1)  509/     33E : DD 77 08            		ld	(ix+(chnl_InsAddr+1)),a
(1)  510/     341 :                     		
(1)  511/     341 : DD 7E 00            		ld	a,(ix+chnl_Chip)	; PSG instr are external
(1)  512/     344 : B7                  		or	a
(1)  513/     345 : FA 4E 03            		jp	m,.psg_instr
(1)  514/     348 : CD F2 05            		call	.set_fm_ins
(1)  515/     34B : C3 61 03            		jp	.no_newinst
(1)  516/     34E :                     .psg_instr:
(1)  517/     34E : FE E0               		cp	0E0h
(1)  518/     350 : C2 61 03            		jp	nz,.no_newinst
(1)  519/     353 : DD 7E 0B            		ld	a,(ix+chnl_InsType)	; Set new noise type
(1)  520/     356 : 4F                  		ld	c,a
(1)  521/     357 : E6 E0               		and 	0E0h
(1)  522/     359 : FE E0               		cp	0E0h
(1)  523/     35B : C2 61 03            		jp	nz,.no_newinst
(1)  524/     35E : FD 71 0C            		ld	(iy+trck_PsgNoise),c	; to TRACK buffer
(1)  525/     361 :                     .no_newinst:
(1)  526/     361 :                     		
(1)  527/     361 :                     	; ---------------------------------------------
(1)  528/     361 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Effect
(1)  529/     364 : CB 7F               		bit	7,a
(1)  530/     366 : C2 6E 03            		jp	nz,.use_neweff
(1)  531/     369 : E6 08               		and	1000b
(1)  532/     36B : CA 7A 03            		jp	z,.no_neweff
(1)  533/     36E :                     .use_neweff:	
(1)  534/     36E : CD 7F 04            		call	.set_effect
(1)  535/     371 : CD DA 03            		call	.search_slot
(1)  536/     374 : DA 7A 03            		jp	c,.no_neweff
(1)  537/     377 : CD 57 06            		call	.run_effect
(1)  538/     37A :                     .no_neweff:
(1)  539/     37A :                     
(1)  540/     37A :                     	; ---------------------------------------------
(1)  541/     37A : DD 7E 01            		ld	a,(ix+chnl_Type)	; Note
(1)  542/     37D : 5F                  		ld	e,a
(1)  543/     37E : CB 67               		bit	4,a
(1)  544/     380 : C2 88 03            		jp	nz,.use_notereq
(1)  545/     383 : E6 01               		and	0001b
(1)  546/     385 : CA 9D 03            		jp	z,.no_notereq
(1)  547/     388 :                     .use_notereq:
(1)  548/     388 : CD AE 05            		call	.grab_instslot
(1)  549/     38B : 7E                  		ld	a,(hl)
(1)  550/     38C : FE FF               		cp	-1
(1)  551/     38E : CA 9D 03            		jp	z,.no_notereq
(1)  552/     391 :                     
(1)  553/     391 : CD 05 04            		call	.set_frequency
(1)  554/     394 : CD DA 03            		call	.search_slot
(1)  555/     397 : DA 9D 03            		jp	c,.no_notereq
(1)  556/     39A : CD C4 05            		call	.run_frequency
(1)  557/     39D :                     .no_notereq:
(1)  558/     39D :                     
(1)  559/     39D :                     	; ------------------------------------
(1)  560/     39D : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  561/     3A0 : CB 77               		bit	6,a			; Volume
(1)  562/     3A2 : C2 AA 03            		jp	nz,.use_newvol
(1)  563/     3A5 : E6 04               		and	0100b
(1)  564/     3A7 : CA B9 03            		jp	z,.no_newvol
(1)  565/     3AA :                     .use_newvol:
(1)  566/     3AA : DD 46 04            		ld	b,(ix+chnl_Vol)
(1)  567/     3AD : DD 70 12            		ld	(ix+chnl_EfNewVol),b
(1)  568/     3B0 : CD DA 03            		call	.search_slot
(1)  569/     3B3 : DA B9 03            		jp	c,.no_newvol
(1)  570/     3B6 : CD F7 03            		call	.set_volume
(1)  571/     3B9 :                     .no_newvol:
(1)  572/     3B9 :                     
(1)  573/     3B9 :                     	; ---------------------------------------------
(1)  574/     3B9 :                     	; Mark active SFX channels
(1)  575/     3B9 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  576/     3BC : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  577/     3BF : B7                  		or	a
(1)  578/     3C0 : CA C6 03            		jp	z,.lowprioset
(1)  579/     3C3 : 21 44 C1            		ld	hl,SndBuff_UsedChnls_2
(1)  580/     3C6 :                     .lowprioset:	
(1)  581/     3C6 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  582/     3C9 : B7                  		or	a
(1)  583/     3CA :                     ; 		jp	p,.plusfm
(1)  584/     3CA : 07                  		rlca
(1)  585/     3CB : 07                  		rlca
(1)  586/     3CC : 07                  		rlca
(1)  587/     3CD : E6 03               		and	00000011b
(1)  588/     3CF :                     ; 		add 	a,6
(1)  589/     3CF :                     ; 		jp	.leftfm
(1)  590/     3CF :                     ; .plusfm:
(1)  591/     3CF :                     ; 		bit 	2,a
(1)  592/     3CF :                     ; 		jp	z,.leftfm
(1)  593/     3CF :                     ; 		dec	a
(1)  594/     3CF :                     ; .leftfm:
(1)  595/     3CF : 11 00 00            		ld	de,0
(1)  596/     3D2 : 5F                  		ld	e,a
(1)  597/     3D3 : 19                  		add 	hl,de
(1)  598/     3D4 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  599/     3D7 : 77                  		ld	(hl),a
(1)  600/     3D8 :                     
(1)  601/     3D8 :                     	; ---------------------------------------------
(1)  602/     3D8 :                     
(1)  603/     3D8 : E1                  		pop	hl
(1)  604/     3D9 : C9                  		ret
(1)  605/     3DA :                     
(1)  606/     3DA :                     ; ------------------------------------
(1)  607/     3DA :                     ; Check if slot is busy
(1)  608/     3DA :                     ; 
(1)  609/     3DA :                     ; Returns:
(1)  610/     3DA :                     ;  c - Channel is busy
(1)  611/     3DA :                     ; nc - Channel is free or
(1)  612/     3DA :                     ;      ignore (BGM only)
(1)  613/     3DA :                     ; ------------------------------------
(1)  614/     3DA :                     
(1)  615/     3DA :                     .search_slot:
(1)  616/     3DA : 3F                  		ccf
(1)  617/     3DB : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  618/     3DE : B7                  		or	a
(1)  619/     3DF : C8                  		ret 	z
(1)  620/     3E0 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  621/     3E3 : B7                  		or	a
(1)  622/     3E4 :                     ; 		jp	p,.srchfm
(1)  623/     3E4 : 07                  		rlca
(1)  624/     3E5 : 07                  		rlca
(1)  625/     3E6 : 07                  		rlca
(1)  626/     3E7 : E6 03               		and	00000011b
(1)  627/     3E9 :                     ; 		add 	a,6
(1)  628/     3E9 :                     ; 		jp	.gosrch
(1)  629/     3E9 :                     ; .srchfm:
(1)  630/     3E9 :                     ; 		bit 	2,a
(1)  631/     3E9 :                     ; 		jp	z,.gosrch
(1)  632/     3E9 :                     ; 		dec	a
(1)  633/     3E9 :                     ; .gosrch:
(1)  634/     3E9 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  635/     3EC : 11 00 00            		ld	de,0
(1)  636/     3EF : 5F                  		ld	e,a
(1)  637/     3F0 : 19                  		add 	hl,de
(1)  638/     3F1 : 7E                  		ld	a,(hl)
(1)  639/     3F2 : 3F                  		ccf
(1)  640/     3F3 : B7                  		or	a
(1)  641/     3F4 : C8                  		ret	z
(1)  642/     3F5 : 37                  		scf
(1)  643/     3F6 : C9                  		ret
(1)  644/     3F7 :                     
(1)  645/     3F7 :                     ; ---------------------------------------------
(1)  646/     3F7 :                     ; These routines only update the channel
(1)  647/     3F7 :                     ; buffer
(1)  648/     3F7 :                     ; ---------------------------------------------
(1)  649/     3F7 :                     
(1)  650/     3F7 :                     ; -----------------------------------
(1)  651/     3F7 :                     ; Set volume
(1)  652/     3F7 :                     ; 
(1)  653/     3F7 :                     ; FM note: call this AFTER 
(1)  654/     3F7 :                     ; updating the instrument data regs
(1)  655/     3F7 :                     ; 
(1)  656/     3F7 :                     ; b - chnl_Vol
(1)  657/     3F7 :                     ; -----------------------------------
(1)  658/     3F7 :                     
(1)  659/     3F7 :                     .set_volume:
(1)  660/     3F7 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  661/     3FA : B7                  		or	a
(1)  662/     3FB : FA 01 04            		jp	m,.vol_ispsg
(1)  663/     3FE : C3 F4 05            		jp	.set_fm_vol
(1)  664/     401 :                     .vol_ispsg:
(1)  665/     401 : 78                  		ld	a,b
(1)  666/     402 : C3 F6 05            		jp	.set_psg_vol
(1)  667/     405 :                     
(1)  668/     405 :                     ; ------------------------------------
(1)  669/     405 :                     ; Set channel frequency
(1)  670/     405 :                     ; ------------------------------------
(1)  671/     405 :                     
(1)  672/     405 :                     .set_frequency:
(1)  673/     405 : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1)  674/     408 : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1)  675/     40B : 78                  		ld	a,b
(1)  676/     40C : B7                  		or	a			; Type 080h/0E0h?
(1)  677/     40D : F2 15 04            		jp	p,.notype3
(1)  678/     410 : CB 79               		bit 	7,c			; PSG channel?
(1)  679/     412 : C2 45 04            		jp	nz,.setfreq_psg
(1)  680/     415 :                     .notype3:
(1)  681/     415 : 78                  		ld	a,b
(1)  682/     416 : FE 02               		cp	2			; Type 2?
(1)  683/     418 : C2 21 04            		jp	nz,.fm_normalchnl
(1)  684/     41B : 79                  		ld	a,c			; Channel 6?
(1)  685/     41C : FE 06               		cp	6
(1)  686/     41E : CA 44 04            		jp	z,.setfm_sample
(1)  687/     421 :                     
(1)  688/     421 :                     ; -------------------------------------
(1)  689/     421 :                     ; FM frequency
(1)  690/     421 :                     ; -------------------------------------
(1)  691/     421 :                     
(1)  692/     421 :                     .fm_normalchnl:
(1)  693/     421 : C9                  		ret
(1)  694/     422 :                     
(1)  695/     422 :                     ; 		ld	a,(ix+chnl_Note)
(1)  696/     422 :                     ; 		cp	-10
(1)  697/     422 :                     ; 		jp	z,.unlock_chnl
(1)  698/     422 :                     ; 		cp	-2
(1)  699/     422 :                     ; 		jp	z,.fm_turnoff
(1)  700/     422 :                     ; 		cp	-1
(1)  701/     422 :                     ; 		jp	z,.fm_turnoff
(1)  702/     422 :                     ; 
(1)  703/     422 :                     ; 		ld	hl,fmFreq_List
(1)  704/     422 :                     ; 		ld	de,0
(1)  705/     422 :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  706/     422 :                     ; 		add	a,a
(1)  707/     422 :                     ; 		ld	e,a
(1)  708/     422 :                     ; 		add	hl,de
(1)  709/     422 :                     ; 		ld	a,(hl)
(1)  710/     422 :                     ; 		ld	(ix+chnl_Freq),a
(1)  711/     422 :                     ; 		inc	hl
(1)  712/     422 :                     ; 		ld	a,(hl)
(1)  713/     422 :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  714/     422 :                     ; 		ret
(1)  715/     422 :                     
(1)  716/     422 :                     ; -------------------------------------
(1)  717/     422 :                     ; Unlock current channel
(1)  718/     422 :                     ; -------------------------------------
(1)  719/     422 :                     
(1)  720/     422 :                     .unlock_chnl:
(1)  721/     422 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  722/     425 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  723/     428 : B7                  		or	a
(1)  724/     429 : CA 2F 04            		jp	z,.lowunlkset
(1)  725/     42C : 21 44 C1            		ld	hl,SndBuff_UsedChnls_2
(1)  726/     42F :                     .lowunlkset:	
(1)  727/     42F : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  728/     432 : B7                  		or	a
(1)  729/     433 :                     ; 		jp	p,.uplusfm
(1)  730/     433 : 07                  		rlca
(1)  731/     434 : 07                  		rlca
(1)  732/     435 : 07                  		rlca
(1)  733/     436 : E6 03               		and	00000011b
(1)  734/     438 :                     ; 		add 	a,6
(1)  735/     438 :                     ; 		jp	.uleftfm
(1)  736/     438 :                     ; .uplusfm:
(1)  737/     438 :                     ; 		bit 	2,a
(1)  738/     438 :                     ; 		jp	z,.uleftfm
(1)  739/     438 :                     ; 		dec	a
(1)  740/     438 :                     ; .uleftfm:
(1)  741/     438 : 11 00 00            		ld	de,0
(1)  742/     43B : 5F                  		ld	e,a
(1)  743/     43C : 19                  		add 	hl,de
(1)  744/     43D : 36 00               		ld	(hl),0
(1)  745/     43F : DD 36 01 00         		ld	(ix+chnl_Type),0
(1)  746/     443 :                     		
(1)  747/     443 :                     ; 		ld	a,(ix+chnl_Chip)
(1)  748/     443 :                     ; 		rlca
(1)  749/     443 :                     ; 		rlca
(1)  750/     443 :                     ; 		rlca
(1)  751/     443 :                     ; 		and	00000011b
(1)  752/     443 :                     ; 		ld	d,00010001b
(1)  753/     443 :                     ; 		dec	a
(1)  754/     443 :                     ; 		jp	m,.unlkrestpan
(1)  755/     443 :                     ; 		rlc 	d
(1)  756/     443 :                     ; 		dec	a
(1)  757/     443 :                     ; 		jp	m,.unlkrestpan
(1)  758/     443 :                     ; 		rlc 	d
(1)  759/     443 :                     ; 		dec	a
(1)  760/     443 :                     ; 		jp	m,.unlkrestpan
(1)  761/     443 :                     ; 		rlc 	d
(1)  762/     443 :                     ; .unlkrestpan:
(1)  763/     443 :                     ; 		ld	(ix+chnl_PsgPan),d
(1)  764/     443 : C9                  		ret
(1)  765/     444 :                     		
(1)  766/     444 :                     ; -------------------------------------
(1)  767/     444 :                     ; Set FM6 sample
(1)  768/     444 :                     ; -------------------------------------
(1)  769/     444 :                     
(1)  770/     444 :                     .setfm_sample:
(1)  771/     444 : C9                  		ret
(1)  772/     445 :                     
(1)  773/     445 :                     ; 		ld	a,(ix+chnl_Note)
(1)  774/     445 :                     ; 		cp	-10
(1)  775/     445 :                     ; 		jp	z,.unlock_chnl
(1)  776/     445 :                     ; 		cp	-2
(1)  777/     445 :                     ; 		ret	z
(1)  778/     445 :                     ; 		cp	-1
(1)  779/     445 :                     ; 		ret	z
(1)  780/     445 :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  781/     445 :                     ; 		add 	a,a
(1)  782/     445 :                     ; 		ld	de,0
(1)  783/     445 :                     ; 		ld	e,a
(1)  784/     445 :                     ; 		ld	hl,wavFreq_List
(1)  785/     445 :                     ; 		add 	hl,de
(1)  786/     445 :                     ; 		ld	a,(hl)
(1)  787/     445 :                     ; 		inc 	hl
(1)  788/     445 :                     ; 		ld	(ix+chnl_Freq),a
(1)  789/     445 :                     ; 		ld	a,(hl)
(1)  790/     445 :                     ; 		inc 	hl
(1)  791/     445 :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  792/     445 :                     ; 		ret
(1)  793/     445 :                     		
(1)  794/     445 :                     ; -------------------------------------
(1)  795/     445 :                     ; PSG frequency
(1)  796/     445 :                     ; -------------------------------------
(1)  797/     445 :                     
(1)  798/     445 :                     .setfreq_psg:
(1)  799/     445 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  800/     448 : 47                  		ld	b,a
(1)  801/     449 : F6 1F               		or	01Fh
(1)  802/     44B : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  803/     44E : FE F6               		cp	-10
(1)  804/     450 : CA 22 04            		jp	z,.unlock_chnl
(1)  805/     453 : FE FE               		cp	-2
(1)  806/     455 : C8                  		ret	z
(1)  807/     456 : FE FF               		cp	-1
(1)  808/     458 : C8                  		ret	z
(1)  809/     459 :                     
(1)  810/     459 : 21 00 00            		ld	hl,0
(1)  811/     45C : 87                  		add 	a,a
(1)  812/     45D : 11 00 00            		ld	de,0
(1)  813/     460 : 5F                  		ld	e,a
(1)  814/     461 : 19                  		add 	hl,de
(1)  815/     462 : DD 7E 0C            		ld	a,(ix+chnl_InsOpt)
(1)  816/     465 : 87                  		add	a,a
(1)  817/     466 : 11 00 00            		ld	de,0
(1)  818/     469 : 5F                  		ld	e,a
(1)  819/     46A : 19                  		add 	hl,de
(1)  820/     46B : 54                  		ld	d,h
(1)  821/     46C : 5D                  		ld	e,l	
(1)  822/     46D : 21 EF 07            		ld	hl,psgFreq_List
(1)  823/     470 : 19                  		add	hl,de
(1)  824/     471 : 7E                  		ld	a,(hl)
(1)  825/     472 : DD 77 09            		ld	(ix+chnl_Freq),a
(1)  826/     475 : 23                  		inc 	hl
(1)  827/     476 : 7E                  		ld	a,(hl)
(1)  828/     477 : DD 77 0A            		ld	(ix+(chnl_Freq+1)),a
(1)  829/     47A : DD 36 10 00         		ld	(ix+chnl_PsgIndx),0
(1)  830/     47E : C9                  		ret
(1)  831/     47F :                     		
(1)  832/     47F :                     ; -------------------------------------
(1)  833/     47F :                     ; Set effects
(1)  834/     47F :                     ; 
(1)  835/     47F :                     ; updates to buffer only
(1)  836/     47F :                     ; -------------------------------------
(1)  837/     47F :                     
(1)  838/     47F :                     .set_effect:
(1)  839/     47F : 11 00 00            		ld	de,0
(1)  840/     482 : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1)  841/     485 : 87                  		add 	a,a
(1)  842/     486 : E6 FE               		and	11111110b
(1)  843/     488 : 5F                  		ld	e,a
(1)  844/     489 : 21 99 04            		ld	hl,.eff_list
(1)  845/     48C : 19                  		add	hl,de
(1)  846/     48D : DD 46 00            		ld	b,(ix+chnl_Chip)
(1)  847/     490 : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1)  848/     493 : 7E                  		ld	a,(hl)
(1)  849/     494 : 23                  		inc	hl
(1)  850/     495 : 66                  		ld	h,(hl)
(1)  851/     496 : 6F                  		ld	l,a
(1)  852/     497 : E9                  		jp	(hl)
(1)  853/     498 :                     .eff_null:
(1)  854/     498 : C9                  		ret
(1)  855/     499 :                     .eff_list:
(1)  856/     499 : 98 04               		dw .eff_null
(1)  857/     49B : CF 04               		dw .eff_A	; A | Set ticks
(1)  858/     49D : D7 04               		dw .eff_B	; B | Jump to block (SET OUTSIDE)
(1)  859/     49F : 98 04               		dw .eff_null	; C | Break to row (unsupported)
(1)  860/     4A1 : E7 04               		dw .eff_D	; D | Volume slide
(1)  861/     4A3 : 01 05               		dw .eff_E	; E | Portametro down
(1)  862/     4A5 : 41 05               		dw .eff_F	; F | Portametro up
(1)  863/     4A7 : 98 04               		dw .eff_null	; G
(1)  864/     4A9 : 98 04               		dw .eff_null	; H
(1)  865/     4AB : 98 04               		dw .eff_null	; I
(1)  866/     4AD : 98 04               		dw .eff_null	; J	
(1)  867/     4AF : 98 04               		dw .eff_null	; K
(1)  868/     4B1 : 98 04               		dw .eff_null	; L
(1)  869/     4B3 : 98 04               		dw .eff_null	; M
(1)  870/     4B5 : 98 04               		dw .eff_null	; N
(1)  871/     4B7 : 98 04               		dw .eff_null	; O
(1)  872/     4B9 : 98 04               		dw .eff_null	; P
(1)  873/     4BB : 98 04               		dw .eff_null	; Q
(1)  874/     4BD : 98 04               		dw .eff_null	; R
(1)  875/     4BF : 98 04               		dw .eff_null	; S
(1)  876/     4C1 : 98 04               		dw .eff_null	; T
(1)  877/     4C3 : 98 04               		dw .eff_null	; U
(1)  878/     4C5 : 98 04               		dw .eff_null	; V
(1)  879/     4C7 : 98 04               		dw .eff_null	; W
(1)  880/     4C9 : 7A 05               		dw .eff_X	; X
(1)  881/     4CB : 98 04               		dw .eff_null	; Y
(1)  882/     4CD : 98 04               		dw .eff_null	; Z
(1)  883/     4CF :                     
(1)  884/     4CF :                     ; -------------------------------------
(1)  885/     4CF :                     ; Effect A - Set ticks
(1)  886/     4CF :                     ; -------------------------------------
(1)  887/     4CF :                     
(1)  888/     4CF :                     .eff_A:
(1)  889/     4CF : 0D                  		dec 	c
(1)  890/     4D0 : FD 71 1F            		ld	(iy+trck_TicksCurr),c
(1)  891/     4D3 : FD 71 0D            		ld	(iy+trck_TicksRead),c
(1)  892/     4D6 : C9                  		ret
(1)  893/     4D7 :                     
(1)  894/     4D7 :                     ; -------------------------------------
(1)  895/     4D7 :                     ; Effect B - Set block
(1)  896/     4D7 :                     ; -------------------------------------
(1)  897/     4D7 :                     
(1)  898/     4D7 :                     .eff_B:
(1)  899/     4D7 : FD 71 0E            		ld	(iy+trck_BlockCurr),c
(1)  900/     4DA : 11 01 00            		ld	de,1			; Finish row
(1)  901/     4DD : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  902/     4E0 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  903/     4E3 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  904/     4E6 : C9                  		ret
(1)  905/     4E7 :                     
(1)  906/     4E7 :                     ; -------------------------------------
(1)  907/     4E7 :                     ; Effect D - Volume slide
(1)  908/     4E7 :                     ; -------------------------------------
(1)  909/     4E7 :                     
(1)  910/     4E7 :                     .eff_D:
(1)  911/     4E7 : 79                  		ld	a,c
(1)  912/     4E8 : E6 F0               		and	11110000b		; X0h - slide up
(1)  913/     4EA : C2 F7 04            		jp	nz,.go_up
(1)  914/     4ED : 79                  		ld	a,c
(1)  915/     4EE : E6 0F               		and	00001111b		; 0Xh - slide down
(1)  916/     4F0 : C8                  		ret	z			; 00h - slide continue
(1)  917/     4F1 :                     .go_down:
(1)  918/     4F1 : 2F                  		cpl
(1)  919/     4F2 : 3C                  		inc	a
(1)  920/     4F3 : DD 77 11            		ld	(ix+chnl_EfVolSlide),a
(1)  921/     4F6 : C9                  		ret
(1)  922/     4F7 :                     .go_up:
(1)  923/     4F7 : 0F                  		rrca
(1)  924/     4F8 : 0F                  		rrca
(1)  925/     4F9 : 0F                  		rrca
(1)  926/     4FA : 0F                  		rrca
(1)  927/     4FB : E6 0F               		and	00001111b
(1)  928/     4FD : DD 77 11            		ld	(ix+chnl_EfVolSlide),a
(1)  929/     500 : C9                  		ret
(1)  930/     501 :                     
(1)  931/     501 :                     ; -------------------------------------
(1)  932/     501 :                     ; Effect E - Portametro down
(1)  933/     501 :                     ; 
(1)  934/     501 :                     ; NOTE: not accurate
(1)  935/     501 :                     ; -------------------------------------
(1)  936/     501 :                     
(1)  937/     501 :                     .eff_E:
(1)  938/     501 : 79                  		ld	a,c
(1)  939/     502 : B7                  		or	a
(1)  940/     503 : CA 40 05            		jp	z,.prtdwn_cont
(1)  941/     506 : E6 F0               		and	11110000b
(1)  942/     508 : FE E0               		cp	0E0h
(1)  943/     50A : CA 1F 05            		jp	z,.dwn_exfine
(1)  944/     50D : FE F0               		cp	0F0h
(1)  945/     50F : CA 2F 05            		jp	z,.dwn_fine
(1)  946/     512 :                     		
(1)  947/     512 :                     ; Normal
(1)  948/     512 : 79                  		ld	a,c
(1)  949/     513 : E6 1F               		and	00011111b
(1)  950/     515 : 87                  		add	a,a
(1)  951/     516 : 2F                  		cpl
(1)  952/     517 : 3C                  		inc	a
(1)  953/     518 : 11 FF FF            		ld	de,-1
(1)  954/     51B : 5F                  		ld	e,a
(1)  955/     51C : C3 3A 05            		jp	.set_portam
(1)  956/     51F :                     .dwn_exfine:
(1)  957/     51F : 11 FF FF            		ld	de,-1
(1)  958/     522 : 79                  		ld	a,c
(1)  959/     523 : E6 0F               		and	00001111b
(1)  960/     525 : 2F                  		cpl
(1)  961/     526 : 3C                  		inc	a
(1)  962/     527 : CB 2F               		sra	a
(1)  963/     529 : CB 2F               		sra	a
(1)  964/     52B : 5F                  		ld	e,a
(1)  965/     52C : C3 3A 05            		jp	.set_portam
(1)  966/     52F :                     .dwn_fine:
(1)  967/     52F : 11 FF FF            		ld	de,-1
(1)  968/     532 : 79                  		ld	a,c
(1)  969/     533 : E6 0F               		and	00001111b
(1)  970/     535 : 2F                  		cpl
(1)  971/     536 : 3C                  		inc	a
(1)  972/     537 : CB 2F               		sra	a
(1)  973/     539 : 5F                  		ld	e,a
(1)  974/     53A :                     
(1)  975/     53A :                     ; shared with effects E and F
(1)  976/     53A :                     .set_portam:
(1)  977/     53A : DD 72 14            		ld	(ix+(chnl_EfPortam+1)),d
(1)  978/     53D : DD 73 13            		ld	(ix+chnl_EfPortam),e
(1)  979/     540 :                     
(1)  980/     540 :                     .prtdwn_cont:
(1)  981/     540 : C9                  		ret
(1)  982/     541 :                     
(1)  983/     541 :                     ; -------------------------------------
(1)  984/     541 :                     ; Effect F - Portametro up
(1)  985/     541 :                     ; 
(1)  986/     541 :                     ; NOTE: not accurate
(1)  987/     541 :                     ; -------------------------------------
(1)  988/     541 :                     
(1)  989/     541 :                     .eff_F:
(1)  990/     541 : 79                  		ld	a,c
(1)  991/     542 : B7                  		or	a
(1)  992/     543 : CA 79 05            		jp	z,.prtup_cont
(1)  993/     546 : E6 F0               		and	11110000b
(1)  994/     548 : FE E0               		cp	0E0h
(1)  995/     54A : CA 62 05            		jp	z,.up_exfine
(1)  996/     54D : FE F0               		cp	0F0h
(1)  997/     54F : CA 6E 05            		jp	z,.up_fine
(1)  998/     552 :                     		
(1)  999/     552 :                     ; Normal
(1) 1000/     552 : 79                  		ld	a,c
(1) 1001/     553 : E6 1F               		and	00011111b
(1) 1002/     555 : 57                  		ld	d,a
(1) 1003/     556 : 87                  		add	a,a
(1) 1004/     557 : 87                  		add	a,a
(1) 1005/     558 : 5F                  		ld	e,a
(1) 1006/     559 : 7A                  		ld	a,d
(1) 1007/     55A : 07                  		rlca
(1) 1008/     55B : 07                  		rlca	
(1) 1009/     55C : E6 03               		and	00000011b
(1) 1010/     55E : 57                  		ld	d,a
(1) 1011/     55F : C3 3A 05            		jp	.set_portam
(1) 1012/     562 :                     .up_exfine:
(1) 1013/     562 : 11 00 00            		ld	de,0
(1) 1014/     565 : 79                  		ld	a,c
(1) 1015/     566 : E6 0F               		and	00001111b
(1) 1016/     568 : CB 2F               		sra	a
(1) 1017/     56A : 5F                  		ld	e,a
(1) 1018/     56B : C3 3A 05            		jp	.set_portam
(1) 1019/     56E :                     .up_fine:
(1) 1020/     56E : 11 00 00            		ld	de,0
(1) 1021/     571 : 79                  		ld	a,c
(1) 1022/     572 : E6 0F               		and	00001111b
(1) 1023/     574 : 87                  		add	a,a
(1) 1024/     575 : 5F                  		ld	e,a
(1) 1025/     576 : C3 3A 05            		jp	.set_portam
(1) 1026/     579 :                     .prtup_cont:
(1) 1027/     579 : C9                  		ret
(1) 1028/     57A :                     		
(1) 1029/     57A :                     ; -------------------------------------
(1) 1030/     57A :                     ; Effect X - Set panning
(1) 1031/     57A :                     ; -------------------------------------
(1) 1032/     57A :                     
(1) 1033/     57A :                     .eff_X:
(1) 1034/     57A : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1035/     57D : B7                  		or	a
(1) 1036/     57E : F0                  		ret 	p
(1) 1037/     57F : 47                  		ld	b,a
(1) 1038/     580 :                     		
(1) 1039/     580 : 11 00 00            		ld	de,0
(1) 1040/     583 : 21 AA 05            		ld	hl,.psgpan_list
(1) 1041/     586 : 79                  		ld	a,c
(1) 1042/     587 : 07                  		rlca
(1) 1043/     588 : 07                  		rlca
(1) 1044/     589 : E6 03               		and 	00000011b
(1) 1045/     58B : 5F                  		ld	e,a
(1) 1046/     58C : 19                  		add	hl,de
(1) 1047/     58D : 78                  		ld	a,b
(1) 1048/     58E : 07                  		rlca
(1) 1049/     58F : 07                  		rlca
(1) 1050/     590 : 07                  		rlca
(1) 1051/     591 : E6 03               		and	00000011b
(1) 1052/     593 : 56                  		ld	d,(hl)
(1) 1053/     594 : 3D                  		dec	a
(1) 1054/     595 : FA A6 05            		jp	m,.stopstrchk
(1) 1055/     598 : CB 02               		rlc 	d
(1) 1056/     59A : 3D                  		dec	a
(1) 1057/     59B : FA A6 05            		jp	m,.stopstrchk
(1) 1058/     59E : CB 02               		rlc 	d
(1) 1059/     5A0 : 3D                  		dec	a
(1) 1060/     5A1 : FA A6 05            		jp	m,.stopstrchk
(1) 1061/     5A4 : CB 02               		rlc 	d
(1) 1062/     5A6 :                     .stopstrchk:
(1) 1063/     5A6 : DD 72 0D            		ld	(ix+chnl_PsgPan),d
(1) 1064/     5A9 : C9                  		ret
(1) 1065/     5AA :                     
(1) 1066/     5AA :                     .psgpan_list:
(1) 1067/     5AA : 10                  		db 00010000b	; 000h
(1) 1068/     5AB : 10                  		db 00010000b	; 000h
(1) 1069/     5AC : 11                  		db 00010001b	; 080h
(1) 1070/     5AD : 01                  		db 00000001b	; 0C0h
(1) 1071/     5AE :                     
(1) 1072/     5AE :                     ; ---------------------------------------------
(1) 1073/     5AE :                     ; Grab instrument from slot
(1) 1074/     5AE :                     ; 
(1) 1075/     5AE :                     ; Output
(1) 1076/     5AE :                     ; hl - current instrument
(1) 1077/     5AE :                     ; ---------------------------------------------
(1) 1078/     5AE :                     
(1) 1079/     5AE :                     .grab_instslot:
(1) 1080/     5AE : FD 6E 16            		ld	l,(iy+trck_Instr)
(1) 1081/     5B1 : FD 66 17            		ld	h,(iy+(trck_Instr+1))
(1) 1082/     5B4 : DD 7E 03            		ld	a,(ix+chnl_Ins)
(1) 1083/     5B7 : 3D                  		dec 	a
(1) 1084/     5B8 : 47                  		ld	b,a
(1) 1085/     5B9 : 87                  		add 	a,a
(1) 1086/     5BA : 87                  		add 	a,a
(1) 1087/     5BB : 4F                  		ld	c,a
(1) 1088/     5BC : 78                  		ld	a,b
(1) 1089/     5BD : 07                  		rlca
(1) 1090/     5BE : 07                  		rlca
(1) 1091/     5BF : E6 03               		and	3
(1) 1092/     5C1 : 47                  		ld	b,a
(1) 1093/     5C2 : 09                  		add	hl,bc
(1) 1094/     5C3 : C9                  		ret
(1) 1095/     5C4 :                     
(1) 1096/     5C4 :                     ; ---------------------------------------------
(1) 1097/     5C4 :                     ; These routines send the result data from
(1) 1098/     5C4 :                     ; the channel buffer to their respective
(1) 1099/     5C4 :                     ; sound chips
(1) 1100/     5C4 :                     ; ---------------------------------------------
(1) 1101/     5C4 :                     
(1) 1102/     5C4 :                     .run_frequency:
(1) 1103/     5C4 : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1) 1104/     5C7 : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1) 1105/     5CA : 78                  		ld	a,b
(1) 1106/     5CB : B7                  		or	a			; Type 080h/0E0h?
(1) 1107/     5CC : F2 D4 05            		jp	p,.freqrn_not3
(1) 1108/     5CF : CB 79               		bit 	7,c			; PSG channel?
(1) 1109/     5D1 : C2 E2 05            		jp	nz,.freqrn_psg
(1) 1110/     5D4 :                     .freqrn_not3:
(1) 1111/     5D4 : 78                  		ld	a,b
(1) 1112/     5D5 : FE 02               		cp	2				; Type 2?
(1) 1113/     5D7 : C2 E0 05            		jp	nz,.freqrn_fm
(1) 1114/     5DA : 79                  		ld	a,c				; Channel 6?
(1) 1115/     5DB : FE 06               		cp	6
(1) 1116/     5DD : CA E1 05            		jp	z,.freqrn_smpl
(1) 1117/     5E0 :                     .freqrn_fm:
(1) 1118/     5E0 : C9                  		ret
(1) 1119/     5E1 :                     ; 		ld	e,(ix+chnl_Chip)
(1) 1120/     5E1 :                     ; 		bit	7,e
(1) 1121/     5E1 :                     ; 		ret	nz
(1) 1122/     5E1 :                     ; 		ld	d,28h
(1) 1123/     5E1 :                     ; 		call	SndDrv_FmSet_1			; KEYS OFF
(1) 1124/     5E1 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1125/     5E1 :                     ; 		cp	-2
(1) 1126/     5E1 :                     ; 		ret	z
(1) 1127/     5E1 :                     ; 		cp	-1
(1) 1128/     5E1 :                     ; 		ret	z
(1) 1129/     5E1 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1130/     5E1 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1131/     5E1 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1132/     5E1 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1133/     5E1 :                     ; 		call	.set_fm_freq
(1) 1134/     5E1 :                     ; 		ld	e,(ix+chnl_FmRegKeys)		; KEYS ON
(1) 1135/     5E1 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1136/     5E1 :                     ; 		or	e
(1) 1137/     5E1 :                     ; 		ld	e,a
(1) 1138/     5E1 :                     ; 		ld	d,28h
(1) 1139/     5E1 :                     ; 		jp	SndDrv_FmSet_1
(1) 1140/     5E1 :                     
(1) 1141/     5E1 :                     .freqrn_smpl:
(1) 1142/     5E1 : C9                  		ret
(1) 1143/     5E2 :                     ; 		ld	e,040h
(1) 1144/     5E2 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1145/     5E2 :                     ; 		cp	-2
(1) 1146/     5E2 :                     ; 		jp	z,.set_smpflag
(1) 1147/     5E2 :                     ; 		cp	-1
(1) 1148/     5E2 :                     ; 		jp	z,.set_smpflag
(1) 1149/     5E2 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1150/     5E2 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1151/     5E2 :                     ; 		ld	a,h
(1) 1152/     5E2 :                     ; 		or	l
(1) 1153/     5E2 :                     ; 		ret	z
(1) 1154/     5E2 :                     ; 	; Play SAMPLE
(1) 1155/     5E2 :                     ; 		ld	de,2806h
(1) 1156/     5E2 :                     ; 		call	SndDrv_FmSet_1
(1) 1157/     5E2 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1158/     5E2 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1159/     5E2 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1160/     5E2 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1161/     5E2 :                     ; 		ld	a,l
(1) 1162/     5E2 :                     ; 		ld	(Sample_Speed),a
(1) 1163/     5E2 :                     ; 		ld	a,h
(1) 1164/     5E2 :                     ; 		ld	(Sample_Speed+1),a
(1) 1165/     5E2 :                     ; 		ld	a,(ix+chnl_SmplFlags)
(1) 1166/     5E2 :                     ; 		rlca
(1) 1167/     5E2 :                     ; 		or	1
(1) 1168/     5E2 :                     ; 		ld	e,a
(1) 1169/     5E2 :                     ; .set_smpflag:
(1) 1170/     5E2 :                     ; 		ld	a,e
(1) 1171/     5E2 :                     ; 		ld	(Sample_Flags),a
(1) 1172/     5E2 :                     ; 		ret
(1) 1173/     5E2 :                     
(1) 1174/     5E2 :                     .freqrn_psg:
(1) 1175/     5E2 : DD 66 0A            		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1176/     5E5 : DD 6E 09            		ld	l,(ix+chnl_Freq)
(1) 1177/     5E8 : DD 74 16            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1178/     5EB : DD 75 15            		ld	(ix+chnl_EfNewFreq),l
(1) 1179/     5EE : C3 14 06            		jp	.set_psg_freq
(1) 1180/     5F1 :                     
(1) 1181/     5F1 :                     ; ------------------------------------
(1) 1182/     5F1 :                     ; Turn FM volume regs down
(1) 1183/     5F1 :                     ; TL = 07Fh
(1) 1184/     5F1 :                     ; 
(1) 1185/     5F1 :                     ; ix - current channel
(1) 1186/     5F1 :                     ; ------------------------------------
(1) 1187/     5F1 :                     
(1) 1188/     5F1 :                     .fm_turnoff:
(1) 1189/     5F1 : C9                  		ret
(1) 1190/     5F2 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1191/     5F2 :                     ; 		ld	c,a
(1) 1192/     5F2 :                     ; 		cp	6
(1) 1193/     5F2 :                     ; 		jp	nz,.not_dac
(1) 1194/     5F2 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1195/     5F2 :                     ; 		cp	2
(1) 1196/     5F2 :                     ; 		jp	nz,.not_dac
(1) 1197/     5F2 :                     ; 		ld	a,40h
(1) 1198/     5F2 :                     ; 		ld	(Sample_Flags),a
(1) 1199/     5F2 :                     ; .not_dac:
(1) 1200/     5F2 :                     ; 		ld	a,c
(1) 1201/     5F2 :                     ; 		or	a
(1) 1202/     5F2 :                     ; 		ret	m
(1) 1203/     5F2 :                     ; 		
(1) 1204/     5F2 :                     ; .fm_settloff:
(1) 1205/     5F2 :                     ; 		ld	e,a
(1) 1206/     5F2 :                     ; 		ld	d,28h
(1) 1207/     5F2 :                     ; 		call	SndDrv_FmSet_1
(1) 1208/     5F2 :                     ; 		ld	a,e
(1) 1209/     5F2 :                     ; 		and	11b
(1) 1210/     5F2 :                     ; 		or	40h
(1) 1211/     5F2 :                     ; 		ld	e,7Fh
(1) 1212/     5F2 :                     ; 		ld	d,a
(1) 1213/     5F2 :                     ; 		call	SndDrv_FmAutoSet
(1) 1214/     5F2 :                     ; 		inc	d
(1) 1215/     5F2 :                     ; 		inc	d
(1) 1216/     5F2 :                     ; 		inc	d
(1) 1217/     5F2 :                     ; 		inc	d
(1) 1218/     5F2 :                     ; 		call	SndDrv_FmAutoSet
(1) 1219/     5F2 :                     ; 		inc	d
(1) 1220/     5F2 :                     ; 		inc	d
(1) 1221/     5F2 :                     ; 		inc	d
(1) 1222/     5F2 :                     ; 		inc	d
(1) 1223/     5F2 :                     ; 		call	SndDrv_FmAutoSet
(1) 1224/     5F2 :                     ; 		inc	d
(1) 1225/     5F2 :                     ; 		inc	d
(1) 1226/     5F2 :                     ; 		inc	d
(1) 1227/     5F2 :                     ; 		inc	d
(1) 1228/     5F2 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1229/     5F2 :                     
(1) 1230/     5F2 :                     ; ------------------------------------
(1) 1231/     5F2 :                     ; FM normal registers
(1) 1232/     5F2 :                     ; 
(1) 1233/     5F2 :                     ; NOTE: call this first BEFORE
(1) 1234/     5F2 :                     ; modyfing the volume
(1) 1235/     5F2 :                     ; 
(1) 1236/     5F2 :                     ; ix - current channel
(1) 1237/     5F2 :                     ; ------------------------------------
(1) 1238/     5F2 :                     
(1) 1239/     5F2 :                     .set_fm_ins:
(1) 1240/     5F2 : C9                  		ret
(1) 1241/     5F3 :                     ; 		ld	c,(ix+chnl_Chip)
(1) 1242/     5F3 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1243/     5F3 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1244/     5F3 :                     ; 		ld	a,h
(1) 1245/     5F3 :                     ; 		or	l
(1) 1246/     5F3 :                     ; 		ret	z
(1) 1247/     5F3 :                     ; 		ld	a,c			; FM6?
(1) 1248/     5F3 :                     ; 		cp	6
(1) 1249/     5F3 :                     ; 		jp	nz,.no_chnl6
(1) 1250/     5F3 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1251/     5F3 :                     ; 		cp	2			; Type 2?
(1) 1252/     5F3 :                     ; 		jp	z,.set_sampl
(1) 1253/     5F3 :                     ; 		ld	a,40h			; IF type != 2, stop sample to unlock FM6
(1) 1254/     5F3 :                     ; 		ld	(Sample_Flags),a
(1) 1255/     5F3 :                     ; .no_chnl6:
(1) 1256/     5F3 :                     ; 		ld	a,c
(1) 1257/     5F3 :                     ; 		and	11b
(1) 1258/     5F3 :                     ; 		or	30h
(1) 1259/     5F3 :                     ; 		ld	d,a
(1) 1260/     5F3 :                     ; 		ld	b,1Ch/4
(1) 1261/     5F3 :                     ; .fmfiles:
(1) 1262/     5F3 :                     ; 		ld	e,(hl)
(1) 1263/     5F3 :                     ; 		inc 	hl
(1) 1264/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1265/     5F3 :                     ; 		inc 	d
(1) 1266/     5F3 :                     ; 		inc 	d
(1) 1267/     5F3 :                     ; 		inc 	d
(1) 1268/     5F3 :                     ; 		inc 	d
(1) 1269/     5F3 :                     ; 		ld	e,(hl)
(1) 1270/     5F3 :                     ; 		inc 	hl
(1) 1271/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1272/     5F3 :                     ; 		inc 	d
(1) 1273/     5F3 :                     ; 		inc 	d
(1) 1274/     5F3 :                     ; 		inc 	d
(1) 1275/     5F3 :                     ; 		inc 	d
(1) 1276/     5F3 :                     ; 		ld	e,(hl)
(1) 1277/     5F3 :                     ; 		inc 	hl
(1) 1278/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1279/     5F3 :                     ; 		inc 	d
(1) 1280/     5F3 :                     ; 		inc 	d
(1) 1281/     5F3 :                     ; 		inc 	d
(1) 1282/     5F3 :                     ; 		inc 	d
(1) 1283/     5F3 :                     ; 		ld	e,(hl)
(1) 1284/     5F3 :                     ; 		inc 	hl
(1) 1285/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1286/     5F3 :                     ; 		inc 	d
(1) 1287/     5F3 :                     ; 		inc 	d
(1) 1288/     5F3 :                     ; 		inc 	d
(1) 1289/     5F3 :                     ; 		inc 	d
(1) 1290/     5F3 :                     ; 		djnz	.fmfiles
(1) 1291/     5F3 :                     ; 
(1) 1292/     5F3 :                     ; 		ld	d,0B0h
(1) 1293/     5F3 :                     ; 		ld	a,c
(1) 1294/     5F3 :                     ; 		and	11b
(1) 1295/     5F3 :                     ; 		or	d
(1) 1296/     5F3 :                     ; 		ld	d,a
(1) 1297/     5F3 :                     ; 		ld	e,(hl)			; 0B0h
(1) 1298/     5F3 :                     ; 		ld	(ix+chnl_FmRegB0),e
(1) 1299/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1300/     5F3 :                     ; 		inc 	hl
(1) 1301/     5F3 :                     ; 		ld	e,(hl)			; 0B4h
(1) 1302/     5F3 :                     ; 		ld	d,0B4h
(1) 1303/     5F3 :                     ; 		ld	a,c
(1) 1304/     5F3 :                     ; 		and	11b
(1) 1305/     5F3 :                     ; 		or	d
(1) 1306/     5F3 :                     ; 		ld	d,a
(1) 1307/     5F3 :                     ; 		ld	a,(hl)
(1) 1308/     5F3 :                     ; 		ld	(ix+chnl_FmRegB4),a	
(1) 1309/     5F3 :                     ; 		or	(ix+chnl_PsgPan)		; FM panning
(1) 1310/     5F3 :                     ; 		ld	e,a
(1) 1311/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1312/     5F3 :                     ; 		inc 	hl
(1) 1313/     5F3 :                     ; 		ld	e,(hl)			; FM3 flag
(1) 1314/     5F3 :                     ; 		inc 	hl
(1) 1315/     5F3 :                     ; 		ld	a,(hl)			; 028h
(1) 1316/     5F3 :                     ; 		inc 	hl
(1) 1317/     5F3 :                     ; 		ld	(ix+chnl_FmRegKeys),a
(1) 1318/     5F3 :                     ; 
(1) 1319/     5F3 :                     ; 		ld	a,c
(1) 1320/     5F3 :                     ; 		cp	2			; Channel 3?
(1) 1321/     5F3 :                     ; 		ret	nz
(1) 1322/     5F3 :                     ; 		ld	e,0
(1) 1323/     5F3 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1324/     5F3 :                     ; 		cp	1			; Type 1?
(1) 1325/     5F3 :                     ; 		jp	nz,.set_fm3reg
(1) 1326/     5F3 :                     ; 		ld	d,0A6h			; OP1
(1) 1327/     5F3 :                     ; 		ld	e,(hl)
(1) 1328/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1329/     5F3 :                     ; 		inc 	hl
(1) 1330/     5F3 :                     ; 		ld	d,0A2h
(1) 1331/     5F3 :                     ; 		ld	e,(hl)
(1) 1332/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1333/     5F3 :                     ; 		inc 	hl
(1) 1334/     5F3 :                     ; 		ld	d,0ACh			; OP2
(1) 1335/     5F3 :                     ; 		ld	e,(hl)
(1) 1336/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1337/     5F3 :                     ; 		inc 	hl
(1) 1338/     5F3 :                     ; 		ld	d,0A8h
(1) 1339/     5F3 :                     ; 		ld	e,(hl)
(1) 1340/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1341/     5F3 :                     ; 		inc 	hl
(1) 1342/     5F3 :                     ; 		ld	d,0ADh			; OP3
(1) 1343/     5F3 :                     ; 		ld	e,(hl)
(1) 1344/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1345/     5F3 :                     ; 		inc 	hl
(1) 1346/     5F3 :                     ; 		ld	d,0A9h
(1) 1347/     5F3 :                     ; 		ld	e,(hl)
(1) 1348/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1349/     5F3 :                     ; 		inc 	hl
(1) 1350/     5F3 :                     ; 		ld	d,0AEh			; OP4
(1) 1351/     5F3 :                     ; 		ld	e,(hl)
(1) 1352/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1353/     5F3 :                     ; 		inc 	hl
(1) 1354/     5F3 :                     ; 		ld	d,0AAh
(1) 1355/     5F3 :                     ; 		ld	e,(hl)
(1) 1356/     5F3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1357/     5F3 :                     ; 		ld	e,(ix+chnl_FmRegKeys)	; KEYS ON
(1) 1358/     5F3 :                     ; 		ld	a,c
(1) 1359/     5F3 :                     ; 		and	111b
(1) 1360/     5F3 :                     ; 		or	e
(1) 1361/     5F3 :                     ; 		ld	e,a
(1) 1362/     5F3 :                     ; 		ld	d,28h
(1) 1363/     5F3 :                     ; 		call	SndDrv_FmSet_1
(1) 1364/     5F3 :                     ; 		ld	e,40h
(1) 1365/     5F3 :                     ; .set_fm3reg:
(1) 1366/     5F3 :                     ; 		ld	d,27h
(1) 1367/     5F3 :                     ; 		jp	SndDrv_FmSet_1
(1) 1368/     5F3 :                      
(1) 1369/     5F3 :                     ; ------------------------------------
(1) 1370/     5F3 :                     ; Set FM frequency
(1) 1371/     5F3 :                     ; 
(1) 1372/     5F3 :                     ; hl - frequency
(1) 1373/     5F3 :                     ; ------------------------------------
(1) 1374/     5F3 :                     
(1) 1375/     5F3 :                     .set_fm_freq:
(1) 1376/     5F3 : C9                  		ret
(1) 1377/     5F4 :                     ; 		ld	d,(ix+chnl_Chip)
(1) 1378/     5F4 :                     ; 		ld	e,(ix+chnl_InsType)
(1) 1379/     5F4 :                     ; 		ld	a,d
(1) 1380/     5F4 :                     ; 		cp	6			; Check channel 6
(1) 1381/     5F4 :                     ; 		jp	nz,.no_chnl6f
(1) 1382/     5F4 :                     ; 		ld	a,e
(1) 1383/     5F4 :                     ; 		cp	2
(1) 1384/     5F4 :                     ; 		ret	z
(1) 1385/     5F4 :                     ; .no_chnl6f:
(1) 1386/     5F4 :                     ; 		ld	a,d
(1) 1387/     5F4 :                     ; 		cp	2			; Check channel 3
(1) 1388/     5F4 :                     ; 		jp	nz,.no_chnl3f
(1) 1389/     5F4 :                     ; 		ld	a,e
(1) 1390/     5F4 :                     ; 		cp	1			; CH3 OP regs are already
(1) 1391/     5F4 :                     ; 		ret	z			; set from the instrument data
(1) 1392/     5F4 :                     ; .no_chnl3f:
(1) 1393/     5F4 :                     ; 
(1) 1394/     5F4 :                     ; 		ld	e,d
(1) 1395/     5F4 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1396/     5F4 :                     ; 		cp	-10
(1) 1397/     5F4 :                     ; 		jp	z,.set_keycut
(1) 1398/     5F4 :                     ; 		cp	-1
(1) 1399/     5F4 :                     ; 		ret	z
(1) 1400/     5F4 :                     ; 		cp	-2
(1) 1401/     5F4 :                     ; 		jp	nz,.no_keycut
(1) 1402/     5F4 :                     ; .set_keycut:
(1) 1403/     5F4 :                     ; 		ld	a,d
(1) 1404/     5F4 :                     ; 		jp	.fm_settloff
(1) 1405/     5F4 :                     ; .no_keycut:
(1) 1406/     5F4 :                     ; 		ld	a,e
(1) 1407/     5F4 :                     ; 		and	11b
(1) 1408/     5F4 :                     ; 		ld	b,a
(1) 1409/     5F4 :                     ; 		ld	a,0A4h
(1) 1410/     5F4 :                     ; 		or	b
(1) 1411/     5F4 :                     ; 		ld	d,a
(1) 1412/     5F4 :                     ; 		ld	e,h
(1) 1413/     5F4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1414/     5F4 :                     ; 		dec 	d
(1) 1415/     5F4 :                     ; 		dec 	d
(1) 1416/     5F4 :                     ; 		dec	d
(1) 1417/     5F4 :                     ; 		dec 	d
(1) 1418/     5F4 :                     ; 		ld	e,l
(1) 1419/     5F4 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1420/     5F4 :                     
(1) 1421/     5F4 :                     ; ------------------------------------
(1) 1422/     5F4 :                     ; Set FM Volume
(1) 1423/     5F4 :                     ; 
(1) 1424/     5F4 :                     ; This one might blow your mind
(1) 1425/     5F4 :                     ; ------------------------------------
(1) 1426/     5F4 :                     
(1) 1427/     5F4 :                     .set_fm_vol:
(1) 1428/     5F4 : C9                  		ret
(1) 1429/     5F5 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1430/     5F5 :                     ; 		ld	e,a
(1) 1431/     5F5 :                     ; 		cp	6
(1) 1432/     5F5 :                     ; 		jp	nz,.notdac
(1) 1433/     5F5 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1434/     5F5 :                     ; 		cp	2
(1) 1435/     5F5 :                     ; 		ret	z
(1) 1436/     5F5 :                     ; .notdac:
(1) 1437/     5F5 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1438/     5F5 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1439/     5F5 :                     ; 		ld	a,h
(1) 1440/     5F5 :                     ; 		or	l
(1) 1441/     5F5 :                     ; 		ret	z
(1) 1442/     5F5 :                     ; 		inc 	hl			; Skip 30h
(1) 1443/     5F5 :                     ; 		inc 	hl
(1) 1444/     5F5 :                     ; 		inc 	hl
(1) 1445/     5F5 :                     ; 		inc 	hl
(1) 1446/     5F5 :                     ; 		ld	a,b
(1) 1447/     5F5 :                     ; 		cp	40h
(1) 1448/     5F5 :                     ; 		jp	c,.too_much
(1) 1449/     5F5 :                     ; 		ld	a,40h
(1) 1450/     5F5 :                     ; .too_much:
(1) 1451/     5F5 :                     ; 		or	a
(1) 1452/     5F5 :                     ; 		jp	p,.too_low
(1) 1453/     5F5 :                     ; 		xor	a
(1) 1454/     5F5 :                     ; .too_low:
(1) 1455/     5F5 :                     ; 		sub 	a,40h
(1) 1456/     5F5 :                     ; 		cpl
(1) 1457/     5F5 :                     ; 		inc 	a
(1) 1458/     5F5 :                     ; 		ld	(ix+chnl_FmVolBase),a
(1) 1459/     5F5 :                     ; 		ld	c,(ix+chnl_FmVolBase)
(1) 1460/     5F5 :                     ; 		ld	d,40h			; 40h
(1) 1461/     5F5 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1462/     5F5 :                     ; 		and	11b
(1) 1463/     5F5 :                     ; 		or	d
(1) 1464/     5F5 :                     ; 		ld	d,a
(1) 1465/     5F5 :                     ; 		ld	a,(ix+chnl_FmRegB0)
(1) 1466/     5F5 :                     ; 		and	111b
(1) 1467/     5F5 :                     ; 		ld	b,a
(1) 1468/     5F5 :                     ; 		cp	7
(1) 1469/     5F5 :                     ; 		jp	nz,.tl_lv1
(1) 1470/     5F5 :                     ; 		ld	a,(hl)
(1) 1471/     5F5 :                     ; 		add 	a,c
(1) 1472/     5F5 :                     ; 		or	a
(1) 1473/     5F5 :                     ; 		jp	p,.tl_lv1_tm
(1) 1474/     5F5 :                     ; 		ld	a,7Fh
(1) 1475/     5F5 :                     ; .tl_lv1_tm:
(1) 1476/     5F5 :                     ; 		ld	e,a
(1) 1477/     5F5 :                     ; 		call	SndDrv_FmAutoSet
(1) 1478/     5F5 :                     ; .tl_lv1:
(1) 1479/     5F5 :                     ; 		inc 	hl
(1) 1480/     5F5 :                     ; 		inc 	d
(1) 1481/     5F5 :                     ; 		inc 	d
(1) 1482/     5F5 :                     ; 		inc 	d
(1) 1483/     5F5 :                     ; 		inc 	d
(1) 1484/     5F5 :                     ; 		ld	a,b
(1) 1485/     5F5 :                     ; 		cp	7
(1) 1486/     5F5 :                     ; 		jp	z,.tl_lv2_ok
(1) 1487/     5F5 :                     ; 		cp	6
(1) 1488/     5F5 :                     ; 		jp	z,.tl_lv2_ok
(1) 1489/     5F5 :                     ; 		cp	5
(1) 1490/     5F5 :                     ; 		jp	nz,.tl_lv2
(1) 1491/     5F5 :                     ; .tl_lv2_ok:
(1) 1492/     5F5 :                     ; 		ld	a,(hl)
(1) 1493/     5F5 :                     ; 		add 	a,c
(1) 1494/     5F5 :                     ; 		or	a
(1) 1495/     5F5 :                     ; 		jp	p,.tl_lv2_tm
(1) 1496/     5F5 :                     ; 		ld	a,7Fh
(1) 1497/     5F5 :                     ; .tl_lv2_tm:
(1) 1498/     5F5 :                     ; 		ld	e,a
(1) 1499/     5F5 :                     ; 		call	SndDrv_FmAutoSet
(1) 1500/     5F5 :                     ; .tl_lv2:
(1) 1501/     5F5 :                     ; 		inc 	hl
(1) 1502/     5F5 :                     ; 		inc 	d
(1) 1503/     5F5 :                     ; 		inc 	d
(1) 1504/     5F5 :                     ; 		inc 	d
(1) 1505/     5F5 :                     ; 		inc 	d
(1) 1506/     5F5 :                     ; 		ld	a,b
(1) 1507/     5F5 :                     ; 		and	100b
(1) 1508/     5F5 :                     ; 		or	a
(1) 1509/     5F5 :                     ; 		jp	z,.tl_lv3
(1) 1510/     5F5 :                     ; 		ld	a,(hl)
(1) 1511/     5F5 :                     ; 		add 	a,c
(1) 1512/     5F5 :                     ; 		or	a
(1) 1513/     5F5 :                     ; 		jp	p,.tl_lv3_tm
(1) 1514/     5F5 :                     ; 		ld	a,7Fh
(1) 1515/     5F5 :                     ; .tl_lv3_tm:
(1) 1516/     5F5 :                     ; 		ld	e,a
(1) 1517/     5F5 :                     ; 		call	SndDrv_FmAutoSet
(1) 1518/     5F5 :                     ; .tl_lv3:
(1) 1519/     5F5 :                     ; 		inc 	hl
(1) 1520/     5F5 :                     ; 		inc 	d
(1) 1521/     5F5 :                     ; 		inc 	d
(1) 1522/     5F5 :                     ; 		inc 	d
(1) 1523/     5F5 :                     ; 		inc 	d
(1) 1524/     5F5 :                     ; 		ld	a,(hl)
(1) 1525/     5F5 :                     ; 		add 	a,c
(1) 1526/     5F5 :                     ; 		or	a
(1) 1527/     5F5 :                     ; 		jp	p,.tl_lv4_tm
(1) 1528/     5F5 :                     ; 		ld	a,7Fh
(1) 1529/     5F5 :                     ; .tl_lv4_tm:
(1) 1530/     5F5 :                     ; 		ld	e,a
(1) 1531/     5F5 :                     ; 		inc 	hl
(1) 1532/     5F5 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1533/     5F5 :                     
(1) 1534/     5F5 :                     ; ------------------------------------
(1) 1535/     5F5 :                     
(1) 1536/     5F5 :                     .set_sampl:
(1) 1537/     5F5 : C9                  		ret
(1) 1538/     5F6 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1539/     5F6 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1540/     5F6 :                     ; 
(1) 1541/     5F6 :                     ; 		ld	e,(hl)
(1) 1542/     5F6 :                     ; 		inc 	hl
(1) 1543/     5F6 :                     ; 		ld	d,(hl)
(1) 1544/     5F6 :                     ; 		inc 	hl
(1) 1545/     5F6 :                     ; 		ld	a,(hl)
(1) 1546/     5F6 :                     ; 		inc 	hl
(1) 1547/     5F6 :                     ; 		ld	(Sample_Start),de
(1) 1548/     5F6 :                     ; 		ld	(Sample_Start+2),a
(1) 1549/     5F6 :                     ; 
(1) 1550/     5F6 :                     ; 		ld	e,(hl)
(1) 1551/     5F6 :                     ; 		inc 	hl
(1) 1552/     5F6 :                     ; 		ld	d,(hl)
(1) 1553/     5F6 :                     ; 		inc 	hl
(1) 1554/     5F6 :                     ; 		ld	a,(hl)
(1) 1555/     5F6 :                     ; 		inc 	hl
(1) 1556/     5F6 :                     ; 		ld	(Sample_End),de
(1) 1557/     5F6 :                     ; 		ld	(Sample_End+2),a
(1) 1558/     5F6 :                     ; 		
(1) 1559/     5F6 :                     ; 		ld	e,(hl)
(1) 1560/     5F6 :                     ; 		inc 	hl
(1) 1561/     5F6 :                     ; 		ld	d,(hl)
(1) 1562/     5F6 :                     ; 		inc 	hl
(1) 1563/     5F6 :                     ; 		ld	a,(hl)
(1) 1564/     5F6 :                     ; 		inc 	hl
(1) 1565/     5F6 :                     ; 		ld	(Sample_Loop),de
(1) 1566/     5F6 :                     ; 		ld	(Sample_Loop+2),a
(1) 1567/     5F6 :                     ; 		
(1) 1568/     5F6 :                     ; 		ld	a,(hl)
(1) 1569/     5F6 :                     ; 		ld	(ix+chnl_SmplFlags),a
(1) 1570/     5F6 :                     ; 		ret
(1) 1571/     5F6 :                     		
(1) 1572/     5F6 :                     ; --------------------------------------------
(1) 1573/     5F6 :                     ; Set PSG Volume
(1) 1574/     5F6 :                     ; --------------------------------------------
(1) 1575/     5F6 :                     
(1) 1576/     5F6 :                     .set_psg_vol:
(1) 1577/     5F6 : 1E 00               		ld	e,0
(1) 1578/     5F8 : FE 40               		cp	40h
(1) 1579/     5FA : DA FF 05            		jp	c,.pntoo_much
(1) 1580/     5FD : 3E 40               		ld	a,40h
(1) 1581/     5FF :                     .pntoo_much:
(1) 1582/     5FF : B7                  		or	a
(1) 1583/     600 : F2 04 06            		jp	p,.pntoo_low
(1) 1584/     603 : AF                  		xor	a
(1) 1585/     604 :                     .pntoo_low:
(1) 1586/     604 : FE 40               		cp	40h
(1) 1587/     606 : CA 10 06            		jp	z,.pntoppsgv
(1) 1588/     609 : 3D                  		dec 	a
(1) 1589/     60A : 0F                  		rrca
(1) 1590/     60B : 0F                  		rrca
(1) 1591/     60C : 2F                  		cpl
(1) 1592/     60D : E6 0F               		and	00001111b
(1) 1593/     60F : 5F                  		ld	e,a
(1) 1594/     610 :                     .pntoppsgv:
(1) 1595/     610 : DD 73 0E            		ld	(ix+chnl_PsgVolBase),e
(1) 1596/     613 : C9                  		ret
(1) 1597/     614 :                     
(1) 1598/     614 :                     ; --------------------------------------------
(1) 1599/     614 :                     ; Set PSG Frequency
(1) 1600/     614 :                     ; 
(1) 1601/     614 :                     ; hl - frequency
(1) 1602/     614 :                     ; --------------------------------------------
(1) 1603/     614 :                     
(1) 1604/     614 :                     .set_psg_freq:
(1) 1605/     614 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1606/     617 : E6 E0               		and	11100000b
(1) 1607/     619 : 47                  		ld	b,a
(1) 1608/     61A : FE C0               		cp	0C0h
(1) 1609/     61C : C2 27 06            		jp	nz,.not_nse3
(1) 1610/     61F : FD 7E 0C            		ld	a,(iy+trck_PsgNoise)
(1) 1611/     622 : E6 03               		and	3
(1) 1612/     624 : FE 03               		cp	3
(1) 1613/     626 : C8                  		ret	z
(1) 1614/     627 :                     .not_nse3:
(1) 1615/     627 : 78                  		ld	a,b
(1) 1616/     628 : FE E0               		cp	0E0h
(1) 1617/     62A : C2 37 06            		jp	nz,.not_nse
(1) 1618/     62D : DD 7E 0B            		ld	a,(ix+chnl_InsType)
(1) 1619/     630 : E6 03               		and	011b
(1) 1620/     632 : FE 03               		cp	3
(1) 1621/     634 : C0                  		ret	nz
(1) 1622/     635 : 06 C0               		ld	b,0C0h
(1) 1623/     637 :                     .not_nse:
(1) 1624/     637 : 7C                  		ld	a,h
(1) 1625/     638 : B5                  		or	l
(1) 1626/     639 : C8                  		ret	z
(1) 1627/     63A :                     		
(1) 1628/     63A : 7D                  		ld	a,l
(1) 1629/     63B : 57                  		ld	d,a
(1) 1630/     63C : E6 0F               		and 	00001111b
(1) 1631/     63E : B0                  		or	b
(1) 1632/     63F : 5F                  		ld	e,a
(1) 1633/     640 : 7D                  		ld	a,l
(1) 1634/     641 : 0F                  		rrca
(1) 1635/     642 : 0F                  		rrca
(1) 1636/     643 : 0F                  		rrca
(1) 1637/     644 : 0F                  		rrca
(1) 1638/     645 : E6 0F               		and	00001111b
(1) 1639/     647 : 57                  		ld	d,a
(1) 1640/     648 : 7C                  		ld	a,h
(1) 1641/     649 : 0F                  		rrca
(1) 1642/     64A : 0F                  		rrca
(1) 1643/     64B : 0F                  		rrca
(1) 1644/     64C : 0F                  		rrca
(1) 1645/     64D : E6 30               		and	00110000b
(1) 1646/     64F : B2                  		or	d
(1) 1647/     650 : DD 77 18            		ld	(ix+(chnl_PsgOutFreq+1)),a
(1) 1648/     653 : DD 73 17            		ld	(ix+chnl_PsgOutFreq),e
(1) 1649/     656 : C9                  		ret
(1) 1650/     657 :                     
(1) 1651/     657 :                     ; --------------------------------
(1) 1652/     657 :                     ; Run effects
(1) 1653/     657 :                     ; 
(1) 1654/     657 :                     ; apply effects on the channels
(1) 1655/     657 :                     ; if unlocked
(1) 1656/     657 :                     ; --------------------------------
(1) 1657/     657 :                     
(1) 1658/     657 :                     .run_effect:
(1) 1659/     657 : 11 00 00            		ld	de,0
(1) 1660/     65A : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1) 1661/     65D : 87                  		add 	a,a
(1) 1662/     65E : E6 FE               		and	11111110b
(1) 1663/     660 : 5F                  		ld	e,a
(1) 1664/     661 : 21 70 06            		ld	hl,.list_doeff
(1) 1665/     664 : 19                  		add	hl,de
(1) 1666/     665 : DD 46 00            		ld	b,(ix+chnl_Chip)
(1) 1667/     668 : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1) 1668/     66B : 7E                  		ld	a,(hl)
(1) 1669/     66C : 23                  		inc	hl
(1) 1670/     66D : 66                  		ld	h,(hl)
(1) 1671/     66E : 6F                  		ld	l,a
(1) 1672/     66F : E9                  		jp	(hl)
(1) 1673/     670 :                     .list_doeff:
(1) 1674/     670 : 98 04               		dw .eff_null
(1) 1675/     672 : 98 04               		dw .eff_null	; A | Set ticks
(1) 1676/     674 : 98 04               		dw .eff_null	; B | Jump to block
(1) 1677/     676 : 98 04               		dw .eff_null	; C | Break to row (not possible here)
(1) 1678/     678 : A6 06               		dw .set_D	; D | Volume slide
(1) 1679/     67A : C0 06               		dw .set_E_F	; E
(1) 1680/     67C : C0 06               		dw .set_E_F	; F
(1) 1681/     67E : 98 04               		dw .eff_null	; G
(1) 1682/     680 : 98 04               		dw .eff_null	; H
(1) 1683/     682 : 98 04               		dw .eff_null	; I
(1) 1684/     684 : 98 04               		dw .eff_null	; J	
(1) 1685/     686 : 98 04               		dw .eff_null	; K
(1) 1686/     688 : 98 04               		dw .eff_null	; L
(1) 1687/     68A : 98 04               		dw .eff_null	; M
(1) 1688/     68C : 98 04               		dw .eff_null	; N
(1) 1689/     68E : 98 04               		dw .eff_null	; O
(1) 1690/     690 : 98 04               		dw .eff_null	; P
(1) 1691/     692 : 98 04               		dw .eff_null	; Q
(1) 1692/     694 : 98 04               		dw .eff_null	; R
(1) 1693/     696 : 98 04               		dw .eff_null	; S
(1) 1694/     698 : 98 04               		dw .eff_null	; T
(1) 1695/     69A : 98 04               		dw .eff_null	; U
(1) 1696/     69C : 98 04               		dw .eff_null	; V
(1) 1697/     69E : 98 04               		dw .eff_null	; W
(1) 1698/     6A0 : FB 06               		dw .set_X	; X
(1) 1699/     6A2 : 98 04               		dw .eff_null	; Y
(1) 1700/     6A4 : 98 04               		dw .eff_null	; Z
(1) 1701/     6A6 :                     
(1) 1702/     6A6 :                     ; ------------------------------------
(1) 1703/     6A6 :                     ; Effect D - Volume slide
(1) 1704/     6A6 :                     ; ------------------------------------
(1) 1705/     6A6 :                     
(1) 1706/     6A6 :                     .set_D:
(1) 1707/     6A6 : DD 7E 12            		ld	a,(ix+chnl_EfNewVol)
(1) 1708/     6A9 : DD 86 11            		add 	a,(ix+chnl_EfVolSlide)
(1) 1709/     6AC : DD 77 12            		ld	(ix+chnl_EfNewVol),a
(1) 1710/     6AF : CB 78               		bit	7,b
(1) 1711/     6B1 : C2 BA 06            		jp	nz,.setpsg_vol
(1) 1712/     6B4 : DD 46 12            		ld	b,(ix+chnl_EfNewVol)
(1) 1713/     6B7 : C3 F4 05            		jp	.set_fm_vol
(1) 1714/     6BA :                     .setpsg_vol:
(1) 1715/     6BA : DD 7E 12            		ld	a,(ix+chnl_EfNewVol)
(1) 1716/     6BD : C3 F6 05            		jp	.set_psg_vol
(1) 1717/     6C0 :                     
(1) 1718/     6C0 :                     ; ------------------------------------
(1) 1719/     6C0 :                     ; Effect E - Portametro down
(1) 1720/     6C0 :                     ; ------------------------------------
(1) 1721/     6C0 :                     
(1) 1722/     6C0 :                     .set_E_F:
(1) 1723/     6C0 : DD CB 00 7E         		bit	7,(ix+chnl_Chip)
(1) 1724/     6C4 : C2 DD 06            		jp	nz,.psg_EF
(1) 1725/     6C7 :                     		
(1) 1726/     6C7 : DD 56 14            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1727/     6CA : DD 5E 13            		ld	e,(ix+chnl_EfPortam)
(1) 1728/     6CD : DD 66 16            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1729/     6D0 : DD 6E 15            		ld	l,(ix+chnl_EfNewFreq)
(1) 1730/     6D3 : 19                  		add 	hl,de
(1) 1731/     6D4 : DD 74 16            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1732/     6D7 : DD 75 15            		ld	(ix+chnl_EfNewFreq),l
(1) 1733/     6DA : C3 F3 05            		jp	.set_fm_freq
(1) 1734/     6DD :                     
(1) 1735/     6DD :                     .psg_EF:
(1) 1736/     6DD : DD 56 14            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1737/     6E0 : DD 5E 13            		ld	e,(ix+chnl_EfPortam)
(1) 1738/     6E3 : DD 66 16            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1739/     6E6 : DD 6E 15            		ld	l,(ix+chnl_EfNewFreq)
(1) 1740/     6E9 : 37                  		scf
(1) 1741/     6EA : ED 52               		sbc 	hl,de
(1) 1742/     6EC : F2 F2 06            		jp	p,.toolow
(1) 1743/     6EF : 21 00 00            		ld	hl,0
(1) 1744/     6F2 :                     .toolow:
(1) 1745/     6F2 : DD 74 16            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1746/     6F5 : DD 75 15            		ld	(ix+chnl_EfNewFreq),l
(1) 1747/     6F8 : C3 14 06            		jp	.set_psg_freq
(1) 1748/     6FB :                     		
(1) 1749/     6FB :                     ; ------------------------------------
(1) 1750/     6FB :                     ; Effect X - Set panning (FM ONLY)
(1) 1751/     6FB :                     ; ------------------------------------
(1) 1752/     6FB :                     
(1) 1753/     6FB :                     .set_X:
(1) 1754/     6FB :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1755/     6FB :                     ; 		or	a
(1) 1756/     6FB :                     ; 		ret 	p
(1) 1757/     6FB :                     ; 		rlca
(1) 1758/     6FB :                     ; 		rlca
(1) 1759/     6FB :                     ; 		rlca
(1) 1760/     6FB :                     ; 		and	00000011b
(1) 1761/     6FB :                     ; 
(1) 1762/     6FB :                     ; 		ld	d,11101110b
(1) 1763/     6FB :                     ; 		ld	e,(ix+chnl_PsgPan)
(1) 1764/     6FB :                     ; 		dec	a
(1) 1765/     6FB :                     ; 		jp	m,.stopstrchk
(1) 1766/     6FB :                     ; 		rlc 	d
(1) 1767/     6FB :                     ; 		rlc	e
(1) 1768/     6FB :                     ; 		dec	a
(1) 1769/     6FB :                     ; 		jp	m,.stopstrchk
(1) 1770/     6FB :                     ; 		rlc 	d
(1) 1771/     6FB :                     ; 		rlc	e
(1) 1772/     6FB :                     ; 		dec	a
(1) 1773/     6FB :                     ; 		jp	m,.stopstrchk
(1) 1774/     6FB :                     ; 		rlc 	d
(1) 1775/     6FB :                     ; 		rlc 	e
(1) 1776/     6FB :                     ; .stopstrchk:
(1) 1777/     6FB :                     ; 		ld	a,(curr_PsgStereo)
(1) 1778/     6FB :                     ; 		and 	d
(1) 1779/     6FB :                     ; 		or	e
(1) 1780/     6FB :                     ; 		ld	(curr_PsgStereo),a
(1) 1781/     6FB : C9                  		ret
(1) 1782/     6FC :                     		
(1) 1783/     6FC :                     ; 		ld	a,(iy+trck_PsgStereo)
(1) 1784/     6FC :                     
(1) 1785/     6FC :                     ; 		ret
(1) 1786/     6FC :                     ; 		ld	d,0B4h
(1) 1787/     6FC :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1788/     6FC :                     ; 		and	11b
(1) 1789/     6FC :                     ; 		or	d
(1) 1790/     6FC :                     ; 		ld	d,a
(1) 1791/     6FC :                     ; 		ld	a,(ix+chnl_FmRegB4)
(1) 1792/     6FC :                     ; 		or	(ix+chnl_PsgPan)
(1) 1793/     6FC :                     ; 		ld	e,a
(1) 1794/     6FC :                     ; 		jp	SndDrv_FmAutoSet
(1) 1795/     6FC :                     
(1) 1796/     6FC :                     ; ===================================================================
(1) 1797/     6FC :                     ; ----------------------------------------------------
(1) 1798/     6FC :                     ; Subs
(1) 1799/     6FC :                     ; ----------------------------------------------------
(1) 1800/     6FC :                     
(1) 1801/     6FC :                     ; ------------------------------------
(1) 1802/     6FC :                     ; Track request
(1) 1803/     6FC :                     ; ------------------------------------
(1) 1804/     6FC :                     
(1) 1805/     6FC :                     SndDrv_ReqTrack:
(1) 1806/     6FC : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1) 1807/     6FF : FD 36 0A 00         		ld	(iy+trck_ReqFlag),0
(1) 1808/     703 : FD 36 0C E0         		ld	(iy+trck_PsgNoise),0E0h
(1) 1809/     707 : 07                  		rlca
(1) 1810/     708 : E6 FE               		and	11111110b
(1) 1811/     70A : 11 00 00            		ld	de,0
(1) 1812/     70D : 5F                  		ld	e,a
(1) 1813/     70E : 21 17 07            		ld	hl,.req_list
(1) 1814/     711 : 19                  		add	hl,de
(1) 1815/     712 : 7E                  		ld	a,(hl)
(1) 1816/     713 : 23                  		inc	hl
(1) 1817/     714 : 66                  		ld	h,(hl)
(1) 1818/     715 : 6F                  		ld	l,a
(1) 1819/     716 : E9                  		jp	(hl)
(1) 1820/     717 :                     .req_list:
(1) 1821/     717 : 00 00               		dw 0
(1) 1822/     719 : 1D 07               		dw .req01
(1) 1823/     71B : 76 07               		dw .req02
(1) 1824/     71D :                     
(1) 1825/     71D :                     ; ------------------------------------
(1) 1826/     71D :                     ; Flag 01h
(1) 1827/     71D :                     ; ------------------------------------
(1) 1828/     71D :                     
(1) 1829/     71D :                     .req01:
(1) 1830/     71D : FD 46 00            		ld	b,(iy+trck_ReqBlk)		; Copy addresses
(1) 1831/     720 : FD 4E 01            		ld	c,(iy+(trck_ReqBlk+1))
(1) 1832/     723 : FD 56 02            		ld	d,(iy+trck_ReqPatt)
(1) 1833/     726 : FD 5E 03            		ld	e,(iy+(trck_ReqPatt+1))
(1) 1834/     729 : FD 66 04            		ld	h,(iy+trck_ReqIns)
(1) 1835/     72C : FD 6E 05            		ld	l,(iy+(trck_ReqIns+1))
(1) 1836/     72F : FD 70 12            		ld	(iy+trck_Blocks),b
(1) 1837/     732 : FD 71 13            		ld	(iy+(trck_Blocks+1)),c
(1) 1838/     735 : FD 72 14            		ld	(iy+trck_PattBase),d
(1) 1839/     738 : FD 73 15            		ld	(iy+(trck_PattBase+1)),e
(1) 1840/     73B : FD 72 18            		ld	(iy+trck_PattRead),d
(1) 1841/     73E : FD 73 19            		ld	(iy+(trck_PattRead+1)),e
(1) 1842/     741 : FD 74 16            		ld	(iy+trck_Instr),h
(1) 1843/     744 : FD 75 17            		ld	(iy+(trck_Instr+1)),l
(1) 1844/     747 : FD 56 06            		ld	d,(iy+trck_ReqTicks)		; Tempo and ticks
(1) 1845/     74A : FD 4E 07            		ld	c,(iy+trck_ReqTempo)
(1) 1846/     74D : FD 46 08            		ld	b,(iy+trck_ReqCurrBlk)
(1) 1847/     750 : FD 7E 09            		ld	a,(iy+trck_ReqSndBnk)
(1) 1848/     753 : FD 72 1F            		ld	(iy+trck_TicksCurr),d
(1) 1849/     756 : FD 72 1C            		ld	(iy+trck_TicksMain),d
(1) 1850/     759 : FD 72 0D            		ld	(iy+trck_TicksRead),d
(1) 1851/     75C : FD 71 1D            		ld	(iy+trck_TempoBits),c
(1) 1852/     75F : FD 70 0E            		ld	(iy+trck_BlockCurr),b
(1) 1853/     762 : 32 49 C1            		ld	(curr_SndBank),a
(1) 1854/     765 : AF                  		xor	a
(1) 1855/     766 : FD 77 1A            		ld	(iy+trck_RowSteps),a
(1) 1856/     769 : FD 77 1B            		ld	(iy+(trck_RowSteps+1)),a		
(1) 1857/     76C : FD 77 1E            		ld	(iy+trck_RowWait),a
(1) 1858/     76F : 3C                  		inc 	a
(1) 1859/     770 : FD 77 11            		ld	(iy+trck_Active),a
(1) 1860/     773 : C3 7A 07            		jp	SndDrv_ResetChan
(1) 1861/     776 :                     		
(1) 1862/     776 :                     ; ------------------------------------
(1) 1863/     776 :                     ; Flag 02h
(1) 1864/     776 :                     ; ------------------------------------
(1) 1865/     776 :                     
(1) 1866/     776 :                     .req02:
(1) 1867/     776 : AF                  		xor	a
(1) 1868/     777 : FD 77 11            		ld	(iy+trck_Active),a
(1) 1869/     77A :                     
(1) 1870/     77A :                     ; ------------------------------------
(1) 1871/     77A :                     ; Reset channels and silence them
(1) 1872/     77A :                     ; ------------------------------------
(1) 1873/     77A :                     
(1) 1874/     77A :                     SndDrv_ResetChan:
(1) 1875/     77A : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1) 1876/     77D : FD 7E 10            		ld	a,(iy+trck_Priority)
(1) 1877/     780 : B7                  		or	a
(1) 1878/     781 : CA 87 07            		jp	z,.lowprio
(1) 1879/     784 : 21 44 C1            		ld	hl,SndBuff_UsedChnls_2
(1) 1880/     787 :                     .lowprio:
(1) 1881/     787 : 06 04               		ld	b,MAX_CHNLS
(1) 1882/     789 : AF                  		xor	a
(1) 1883/     78A :                     .nexttype:
(1) 1884/     78A : 77                  		ld	(hl),a
(1) 1885/     78B : 23                  		inc 	hl
(1) 1886/     78C : 10 FC               		djnz	.nexttype
(1) 1887/     78E :                     		
(1) 1888/     78E :                     	; Clean first PSG channels
(1) 1889/     78E : DD E5               		push	ix
(1) 1890/     790 : 06 04               		ld	b,4			; 4 channels
(1) 1891/     792 : AF                  		xor	a
(1) 1892/     793 : 11 20 00            		ld	de,20h
(1) 1893/     796 : 0E 11               		ld	c,00010001b
(1) 1894/     798 :                     .initchnls:
(1) 1895/     798 : DD 36 01 00         		ld	(ix+chnl_Type),0	; Note request
(1) 1896/     79C : DD 36 02 FE         		ld	(ix+chnl_Note),-2	; Set Note off
(1) 1897/     7A0 : DD 36 04 40         		ld	(ix+chnl_Vol),64	; Max volume
(1) 1898/     7A4 : DD 36 12 40         		ld	(ix+chnl_EfNewVol),64
(1) 1899/     7A8 : DD 71 0D            		ld	(ix+chnl_PsgPan),c
(1) 1900/     7AB : DD 77 0B            		ld	(ix+chnl_InsType),a
(1) 1901/     7AE : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1) 1902/     7B1 : DD 77 11            		ld	(ix+chnl_EfVolSlide),a
(1) 1903/     7B4 : DD 77 0F            		ld	(ix+chnl_PsgVolEnv),a
(1) 1904/     7B7 : DD 77 10            		ld	(ix+chnl_PsgIndx),a
(1) 1905/     7BA : CB 01               		rlc 	c
(1) 1906/     7BC : DD 19               		add 	ix,de
(1) 1907/     7BE : 10 D8               		djnz	.initchnls
(1) 1908/     7C0 : DD E1               		pop	ix
(1) 1909/     7C2 :                     
(1) 1910/     7C2 :                     ; ------------------------------------
(1) 1911/     7C2 :                     
(1) 1912/     7C2 : DD E5               		push	ix
(1) 1913/     7C4 : 11 44 C1            		ld	de,SndBuff_UsedChnls_2
(1) 1914/     7C7 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1) 1915/     7CA : 06 04               		ld	b,MAX_CHNLS
(1) 1916/     7CC :                     .nxtfmchnl:
(1) 1917/     7CC : C5                  		push	bc
(1) 1918/     7CD : 1A                  		ld	a,(de)
(1) 1919/     7CE : 4E                  		ld	c,(hl)
(1) 1920/     7CF : B1                  		or	c
(1) 1921/     7D0 : B7                  		or	a
(1) 1922/     7D1 : C2 E2 07            		jp	nz,.dontvolfm
(1) 1923/     7D4 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1924/     7D7 : B7                  		or	a
(1) 1925/     7D8 : F2 E2 07            		jp	p,.fm_shut
(1) 1926/     7DB : F6 1F               		or	01Fh
(1) 1927/     7DD : D3 7F               		out	(psg_ctrl),a
(1) 1928/     7DF : C3 E2 07            		jp	.dontvolfm
(1) 1929/     7E2 :                     .fm_shut:
(1) 1930/     7E2 :                     ; 		push 	de
(1) 1931/     7E2 :                     ; 		ld	d,28h
(1) 1932/     7E2 :                     ; 		ld	e,a
(1) 1933/     7E2 :                     ; 		call	SndDrv_FmSet_1
(1) 1934/     7E2 :                     ; 		pop	de
(1) 1935/     7E2 :                     .dontvolfm:
(1) 1936/     7E2 : 23                  		inc 	hl
(1) 1937/     7E3 : 13                  		inc 	de
(1) 1938/     7E4 : 01 20 00            		ld	bc,20h
(1) 1939/     7E7 : DD 09               		add 	ix,bc
(1) 1940/     7E9 : C1                  		pop	bc
(1) 1941/     7EA : 10 E0               		djnz	.nxtfmchnl
(1) 1942/     7EC : DD E1               		pop	ix
(1) 1943/     7EE : C9                  		ret
(1) 1944/     7EF :                     
(1) 1945/     7EF :                     ; ---------------------------------------------
(1) 1946/     7EF :                     ; FM send registers
(1) 1947/     7EF :                     ; 
(1) 1948/     7EF :                     ; Input:
(1) 1949/     7EF :                     ; d - ctrl
(1) 1950/     7EF :                     ; e - data
(1) 1951/     7EF :                     ; c - channel
(1) 1952/     7EF :                     ; ---------------------------------------------
(1) 1953/     7EF :                     
(1) 1954/     7EF :                     ; SndDrv_FmAutoSet:
(1) 1955/     7EF :                     ; 		bit 	2,(ix+chnl_Chip)
(1) 1956/     7EF :                     ; 		jp	nz,SndDrv_FmSet_2
(1) 1957/     7EF :                     ; 		
(1) 1958/     7EF :                     ; SndDrv_FmSet_1:
(1) 1959/     7EF :                     ; 		ld	a,d
(1) 1960/     7EF :                     ; 		ld	(Zym_ctrl_1),a
(1) 1961/     7EF :                     ; 		nop
(1) 1962/     7EF :                     ; 		ld	a,e
(1) 1963/     7EF :                     ; 		ld	(Zym_data_1),a
(1) 1964/     7EF :                     ; 		nop
(1) 1965/     7EF :                     ; 		ret
(1) 1966/     7EF :                     ; 
(1) 1967/     7EF :                     ; SndDrv_FmSet_2:
(1) 1968/     7EF :                     ; 		ld	a,d
(1) 1969/     7EF :                     ; 		ld	(Zym_ctrl_2),a
(1) 1970/     7EF :                     ; 		nop
(1) 1971/     7EF :                     ; 		ld	a,e
(1) 1972/     7EF :                     ; 		ld	(Zym_data_2),a
(1) 1973/     7EF :                     ; 		nop
(1) 1974/     7EF :                     ; 		ret
(1) 1975/     7EF :                     
(1) 1976/     7EF :                     ; ====================================================================
(1) 1977/     7EF :                     ; fmFreq_List:	dw 644			; C-0
(1) 1978/     7EF :                     ; 		dw 681
(1) 1979/     7EF :                     ; 		dw 722
(1) 1980/     7EF :                     ; 		dw 765
(1) 1981/     7EF :                     ; 		dw 810
(1) 1982/     7EF :                     ; 		dw 858
(1) 1983/     7EF :                     ; 		dw 910
(1) 1984/     7EF :                     ; 		dw 964
(1) 1985/     7EF :                     ; 		dw 1021
(1) 1986/     7EF :                     ; 		dw 1081
(1) 1987/     7EF :                     ; 		dw 1146
(1) 1988/     7EF :                     ; 		dw 1214
(1) 1989/     7EF :                     ; 		dw 644|800h		; C-1
(1) 1990/     7EF :                     ; 		dw 681|800h
(1) 1991/     7EF :                     ; 		dw 722|800h
(1) 1992/     7EF :                     ; 		dw 765|800h
(1) 1993/     7EF :                     ; 		dw 810|800h
(1) 1994/     7EF :                     ; 		dw 858|800h
(1) 1995/     7EF :                     ; 		dw 910|800h
(1) 1996/     7EF :                     ; 		dw 964|800h
(1) 1997/     7EF :                     ; 		dw 1021|800h
(1) 1998/     7EF :                     ; 		dw 1081|800h
(1) 1999/     7EF :                     ; 		dw 1146|800h
(1) 2000/     7EF :                     ; 		dw 1214|800h
(1) 2001/     7EF :                     ; 		dw 644|1000h		; C-2
(1) 2002/     7EF :                     ; 		dw 681|1000h
(1) 2003/     7EF :                     ; 		dw 722|1000h
(1) 2004/     7EF :                     ; 		dw 765|1000h
(1) 2005/     7EF :                     ; 		dw 810|1000h
(1) 2006/     7EF :                     ; 		dw 858|1000h
(1) 2007/     7EF :                     ; 		dw 910|1000h
(1) 2008/     7EF :                     ; 		dw 964|1000h
(1) 2009/     7EF :                     ; 		dw 1021|1000h
(1) 2010/     7EF :                     ; 		dw 1081|1000h
(1) 2011/     7EF :                     ; 		dw 1146|1000h
(1) 2012/     7EF :                     ; 		dw 1214|1000h
(1) 2013/     7EF :                     ; 		dw 644|1800h		; C-3
(1) 2014/     7EF :                     ; 		dw 681|1800h
(1) 2015/     7EF :                     ; 		dw 722|1800h
(1) 2016/     7EF :                     ; 		dw 765|1800h
(1) 2017/     7EF :                     ; 		dw 810|1800h
(1) 2018/     7EF :                     ; 		dw 858|1800h
(1) 2019/     7EF :                     ; 		dw 910|1800h
(1) 2020/     7EF :                     ; 		dw 964|1800h
(1) 2021/     7EF :                     ; 		dw 1021|1800h
(1) 2022/     7EF :                     ; 		dw 1081|1800h
(1) 2023/     7EF :                     ; 		dw 1146|1800h
(1) 2024/     7EF :                     ; 		dw 1214|1800h
(1) 2025/     7EF :                     ; 		dw 644|2000h		; C-4
(1) 2026/     7EF :                     ; 		dw 681|2000h
(1) 2027/     7EF :                     ; 		dw 722|2000h
(1) 2028/     7EF :                     ; 		dw 765|2000h
(1) 2029/     7EF :                     ; 		dw 810|2000h
(1) 2030/     7EF :                     ; 		dw 858|2000h
(1) 2031/     7EF :                     ; 		dw 910|2000h
(1) 2032/     7EF :                     ; 		dw 964|2000h
(1) 2033/     7EF :                     ; 		dw 1021|2000h
(1) 2034/     7EF :                     ; 		dw 1081|2000h
(1) 2035/     7EF :                     ; 		dw 1146|2000h
(1) 2036/     7EF :                     ; 		dw 1214|2000h
(1) 2037/     7EF :                     ; 		dw 644|2800h		; C-5
(1) 2038/     7EF :                     ; 		dw 681|2800h
(1) 2039/     7EF :                     ; 		dw 722|2800h
(1) 2040/     7EF :                     ; 		dw 765|2800h
(1) 2041/     7EF :                     ; 		dw 810|2800h
(1) 2042/     7EF :                     ; 		dw 858|2800h
(1) 2043/     7EF :                     ; 		dw 910|2800h
(1) 2044/     7EF :                     ; 		dw 964|2800h
(1) 2045/     7EF :                     ; 		dw 1021|2800h
(1) 2046/     7EF :                     ; 		dw 1081|2800h
(1) 2047/     7EF :                     ; 		dw 1146|2800h
(1) 2048/     7EF :                     ; 		dw 1214|2800h		
(1) 2049/     7EF :                     ; 		dw 644|3000h		; C-6
(1) 2050/     7EF :                     ; 		dw 681|3000h
(1) 2051/     7EF :                     ; 		dw 722|3000h
(1) 2052/     7EF :                     ; 		dw 765|3000h
(1) 2053/     7EF :                     ; 		dw 810|3000h
(1) 2054/     7EF :                     ; 		dw 858|3000h
(1) 2055/     7EF :                     ; 		dw 910|3000h
(1) 2056/     7EF :                     ; 		dw 964|3000h
(1) 2057/     7EF :                     ; 		dw 1021|3000h
(1) 2058/     7EF :                     ; 		dw 1081|3000h
(1) 2059/     7EF :                     ; 		dw 1146|3000h
(1) 2060/     7EF :                     ; 		dw 1214|3000h
(1) 2061/     7EF :                     ; 		dw 644|3800h		; C-7
(1) 2062/     7EF :                     ; 		dw 681|3800h
(1) 2063/     7EF :                     ; 		dw 722|3800h
(1) 2064/     7EF :                     ; 		dw 765|3800h
(1) 2065/     7EF :                     ; 		dw 810|3800h
(1) 2066/     7EF :                     ; 		dw 858|3800h
(1) 2067/     7EF :                     ; 		dw 910|3800h
(1) 2068/     7EF :                     ; 		dw 964|3800h
(1) 2069/     7EF :                     ; 		dw 1021|3800h
(1) 2070/     7EF :                     ; 		dw 1081|3800h
(1) 2071/     7EF :                     ; 		dw 1146|3800h
(1) 2072/     7EF :                     ; 		dw 1214|3800h
(1) 2073/     7EF :                     
(1) 2074/     7EF :                     psgFreq_List:
(1) 2075/     7EF : FF FF               		dw -1		; C-0 $0
(1) 2076/     7F1 : FF FF               		dw -1
(1) 2077/     7F3 : FF FF               		dw -1
(1) 2078/     7F5 : FF FF               		dw -1
(1) 2079/     7F7 : FF FF               		dw -1
(1) 2080/     7F9 : FF FF               		dw -1
(1) 2081/     7FB : FF FF               		dw -1
(1) 2082/     7FD : FF FF               		dw -1
(1) 2083/     7FF : FF FF               		dw -1
(1) 2084/     801 : FF FF               		dw -1
(1) 2085/     803 : FF FF               		dw -1
(1) 2086/     805 : FF FF               		dw -1
(1) 2087/     807 : FF FF               		dw -1		; C-1 $C
(1) 2088/     809 : FF FF               		dw -1
(1) 2089/     80B : FF FF               		dw -1
(1) 2090/     80D : FF FF               		dw -1
(1) 2091/     80F : FF FF               		dw -1
(1) 2092/     811 : FF FF               		dw -1
(1) 2093/     813 : FF FF               		dw -1
(1) 2094/     815 : FF FF               		dw -1
(1) 2095/     817 : FF FF               		dw -1
(1) 2096/     819 : FF FF               		dw -1
(1) 2097/     81B : FF FF               		dw -1
(1) 2098/     81D : FF FF               		dw -1
(1) 2099/     81F : FF FF               		dw -1		; C-2 $18
(1) 2100/     821 : FF FF               		dw -1
(1) 2101/     823 : FF FF               		dw -1
(1) 2102/     825 : FF FF               		dw -1
(1) 2103/     827 : FF FF               		dw -1
(1) 2104/     829 : FF FF               		dw -1
(1) 2105/     82B : FF FF               		dw -1
(1) 2106/     82D : FF FF               		dw -1
(1) 2107/     82F : FF FF               		dw -1
(1) 2108/     831 : FF FF               		dw -1
(1) 2109/     833 : FF FF               		dw -1
(1) 2110/     835 : FF FF               		dw -1
(1) 2111/     837 : FF FF               		dw -1		; C-3 $24
(1) 2112/     839 : FF FF               		dw -1
(1) 2113/     83B : FF FF               		dw -1
(1) 2114/     83D : FF FF               		dw -1
(1) 2115/     83F : FF FF               		dw -1
(1) 2116/     841 : FF FF               		dw -1
(1) 2117/     843 : FF FF               		dw -1
(1) 2118/     845 : FF FF               		dw -1
(1) 2119/     847 : FF FF               		dw -1
(1) 2120/     849 : F8 03               		dw 3F8h
(1) 2121/     84B : BF 03               		dw 3BFh
(1) 2122/     84D : 89 03               		dw 389h
(1) 2123/     84F : 56 03               		dw 356h		;C-4 30
(1) 2124/     851 : 26 03               		dw 326h
(1) 2125/     853 : F9 02               		dw 2F9h
(1) 2126/     855 : CE 02               		dw 2CEh
(1) 2127/     857 : A5 02               		dw 2A5h
(1) 2128/     859 : 80 02               		dw 280h
(1) 2129/     85B : 5C 02               		dw 25Ch
(1) 2130/     85D : 3A 02               		dw 23Ah
(1) 2131/     85F : 1A 02               		dw 21Ah
(1) 2132/     861 : FB 01               		dw 1FBh
(1) 2133/     863 : DF 01               		dw 1DFh
(1) 2134/     865 : C4 01               		dw 1C4h
(1) 2135/     867 : AB 01               		dw 1ABh		;C-5 3C
(1) 2136/     869 : 93 01               		dw 193h
(1) 2137/     86B : 7D 01               		dw 17Dh
(1) 2138/     86D : 67 01               		dw 167h
(1) 2139/     86F : 53 01               		dw 153h
(1) 2140/     871 : 40 01               		dw 140h
(1) 2141/     873 : 2E 01               		dw 12Eh
(1) 2142/     875 : 1D 01               		dw 11Dh
(1) 2143/     877 : 0D 01               		dw 10Dh
(1) 2144/     879 : FE 00               		dw 0FEh
(1) 2145/     87B : EF 00               		dw 0EFh
(1) 2146/     87D : E2 00               		dw 0E2h
(1) 2147/     87F : D6 00               		dw 0D6h		;C-6 48
(1) 2148/     881 : C9 00               		dw 0C9h
(1) 2149/     883 : BE 00               		dw 0BEh
(1) 2150/     885 : B4 00               		dw 0B4h
(1) 2151/     887 : A9 00               		dw 0A9h
(1) 2152/     889 : A0 00               		dw 0A0h
(1) 2153/     88B : 97 00               		dw 97h
(1) 2154/     88D : 8F 00               		dw 8Fh
(1) 2155/     88F : 87 00               		dw 87h
(1) 2156/     891 : 7F 00               		dw 7Fh
(1) 2157/     893 : 78 00               		dw 78h
(1) 2158/     895 : 71 00               		dw 71h
(1) 2159/     897 : 6B 00               		dw 6Bh		; C-7 54
(1) 2160/     899 : 65 00               		dw 65h
(1) 2161/     89B : 5F 00               		dw 5Fh
(1) 2162/     89D : 5A 00               		dw 5Ah
(1) 2163/     89F : 55 00               		dw 55h
(1) 2164/     8A1 : 50 00               		dw 50h
(1) 2165/     8A3 : 4B 00               		dw 4Bh
(1) 2166/     8A5 : 47 00               		dw 47h
(1) 2167/     8A7 : 43 00               		dw 43h
(1) 2168/     8A9 : 40 00               		dw 40h
(1) 2169/     8AB : 3C 00               		dw 3Ch
(1) 2170/     8AD : 39 00               		dw 39h
(1) 2171/     8AF : 36 00               		dw 36h		; C-8 $60
(1) 2172/     8B1 : 33 00               		dw 33h
(1) 2173/     8B3 : 30 00               		dw 30h
(1) 2174/     8B5 : 2D 00               		dw 2Dh
(1) 2175/     8B7 : 2B 00               		dw 2Bh
(1) 2176/     8B9 : 28 00               		dw 28h
(1) 2177/     8BB : 26 00               		dw 26h
(1) 2178/     8BD : 24 00               		dw 24h
(1) 2179/     8BF : 22 00               		dw 22h
(1) 2180/     8C1 : 20 00               		dw 20h
(1) 2181/     8C3 : 1F 00               		dw 1Fh
(1) 2182/     8C5 : 1D 00               		dw 1Dh
(1) 2183/     8C7 : 1B 00               		dw 1Bh		; C-9 $6C
(1) 2184/     8C9 : 1A 00               		dw 1Ah
(1) 2185/     8CB : 18 00               		dw 18h
(1) 2186/     8CD : 17 00               		dw 17h
(1) 2187/     8CF : 16 00               		dw 16h
(1) 2188/     8D1 : 15 00               		dw 15h
(1) 2189/     8D3 : 13 00               		dw 13h
(1) 2190/     8D5 : 12 00               		dw 12h
(1) 2191/     8D7 : 11 00               		dw 11h
(1) 2192/     8D9 : 10 00                		dw 10h
(1) 2193/     8DB : 09 00                		dw 9h
(1) 2194/     8DD : 08 00                		dw 8h
(1) 2195/     8DF : 00 00               		dw 0		; use +60 if using C-5 for tone 3 noise
(1) 2196/     8E1 :                     		
(1) 2197/     8E1 :                     ; wavFreq_List:	dw 100h		; C-0
(1) 2198/     8E1 :                     ; 		dw 100h
(1) 2199/     8E1 :                     ; 		dw 100h
(1) 2200/     8E1 :                     ; 		dw 100h
(1) 2201/     8E1 :                     ; 		dw 100h
(1) 2202/     8E1 :                     ; 		dw 100h
(1) 2203/     8E1 :                     ; 		dw 100h	
(1) 2204/     8E1 :                     ; 		dw 100h
(1) 2205/     8E1 :                     ; 		dw 100h
(1) 2206/     8E1 :                     ; 		dw 100h
(1) 2207/     8E1 :                     ; 		dw 100h
(1) 2208/     8E1 :                     ; 		dw 100h
(1) 2209/     8E1 :                     ; 		dw 100h		; C-1
(1) 2210/     8E1 :                     ; 		dw 100h
(1) 2211/     8E1 :                     ; 		dw 100h
(1) 2212/     8E1 :                     ; 		dw 100h
(1) 2213/     8E1 :                     ; 		dw 100h
(1) 2214/     8E1 :                     ; 		dw 100h
(1) 2215/     8E1 :                     ; 		dw 100h	
(1) 2216/     8E1 :                     ; 		dw 100h
(1) 2217/     8E1 :                     ; 		dw 100h
(1) 2218/     8E1 :                     ; 		dw 100h
(1) 2219/     8E1 :                     ; 		dw 100h
(1) 2220/     8E1 :                     ; 		dw 100h
(1) 2221/     8E1 :                     ; 		dw 100h		; C-2
(1) 2222/     8E1 :                     ; 		dw 100h
(1) 2223/     8E1 :                     ; 		dw 100h
(1) 2224/     8E1 :                     ; 		dw 100h
(1) 2225/     8E1 :                     ; 		dw 100h
(1) 2226/     8E1 :                     ; 		dw 100h
(1) 2227/     8E1 :                     ; 		dw 100h
(1) 2228/     8E1 :                     ; 		dw 100h
(1) 2229/     8E1 :                     ; 		dw 100h
(1) 2230/     8E1 :                     ; 		dw 100h
(1) 2231/     8E1 :                     ; 		dw 100h
(1) 2232/     8E1 :                     ; 		dw 03Bh
(1) 2233/     8E1 :                     ; 		dw 03Eh		; C-3 5512
(1) 2234/     8E1 :                     ; 		dw 043h		; C#3
(1) 2235/     8E1 :                     ; 		dw 046h		; D-3
(1) 2236/     8E1 :                     ; 		dw 049h		; D#3
(1) 2237/     8E1 :                     ; 		dw 04Eh		; E-3
(1) 2238/     8E1 :                     ; 		dw 054h		; F-3
(1) 2239/     8E1 :                     ; 		dw 058h		; F#3
(1) 2240/     8E1 :                     ; 		dw 05Eh		; G-3 8363 -17
(1) 2241/     8E1 :                     ; 		dw 063h		; G#3
(1) 2242/     8E1 :                     ; 		dw 068h		; A-3
(1) 2243/     8E1 :                     ; 		dw 070h		; A#3
(1) 2244/     8E1 :                     ; 		dw 075h		; B-3
(1) 2245/     8E1 :                     ; 		dw 07Fh		; C-4 11025 -12
(1) 2246/     8E1 :                     ; 		dw 088h		; C#4
(1) 2247/     8E1 :                     ; 		dw 08Fh		; D-4
(1) 2248/     8E1 :                     ; 		dw 097h		; D#4
(1) 2249/     8E1 :                     ; 		dw 0A0h		; E-4
(1) 2250/     8E1 :                     ; 		dw 0ADh		; F-4
(1) 2251/     8E1 :                     ; 		dw 0B5h		; F#4
(1) 2252/     8E1 :                     ; 		dw 0C0h		; G-4
(1) 2253/     8E1 :                     ; 		dw 0CCh		; G#4
(1) 2254/     8E1 :                     ; 		dw 0D7h		; A-4
(1) 2255/     8E1 :                     ; 		dw 0E7h		; A#4
(1) 2256/     8E1 :                     ; 		dw 0F0h		; B-4
(1) 2257/     8E1 :                     ; 		dw 100h		; C-5 22050
(1) 2258/     8E1 :                     ; 		dw 110h		; C#5
(1) 2259/     8E1 :                     ; 		dw 120h		; D-5
(1) 2260/     8E1 :                     ; 		dw 12Ch		; D#5
(1) 2261/     8E1 :                     ; 		dw 142h		; E-5
(1) 2262/     8E1 :                     ; 		dw 158h		; F-5
(1) 2263/     8E1 :                     ; 		dw 16Ah		; F#5 32000 +6
(1) 2264/     8E1 :                     ; 		dw 17Eh		; G-5
(1) 2265/     8E1 :                     ; 		dw 190h		; G#5
(1) 2266/     8E1 :                     ; 		dw 1ACh		; A-5
(1) 2267/     8E1 :                     ; 		dw 1C2h		; A#5
(1) 2268/     8E1 :                     ; 		dw 1E0h		; B-5
(1) 2269/     8E1 :                     ; 		dw 1F8h		; C-6 44100 +12
(1) 2270/     8E1 :                     ; 		dw 210h		; C#6
(1) 2271/     8E1 :                     ; 		dw 240h		; D-6
(1) 2272/     8E1 :                     ; 		dw 260h		; D#6
(1) 2273/     8E1 :                     ; 		dw 280h		; E-6
(1) 2274/     8E1 :                     ; 		dw 2A0h		; F-6
(1) 2275/     8E1 :                     ; 		dw 2D0h		; F#6
(1) 2276/     8E1 :                     ; 		dw 2F8h		; G-6
(1) 2277/     8E1 :                     ; 		dw 320h		; G#6
(1) 2278/     8E1 :                     ; 		dw 350h		; A-6
(1) 2279/     8E1 :                     ; 		dw 380h		; A#6
(1) 2280/     8E1 :                     ; 		dw 3C0h		; B-6
(1) 2281/     8E1 :                     ; 		dw 400h		; C-7 88200
(1) 2282/     8E1 :                     ; 		dw 100h
(1) 2283/     8E1 :                     ; 		dw 100h
(1) 2284/     8E1 :                     ; 		dw 100h
(1) 2285/     8E1 :                     ; 		dw 100h
(1) 2286/     8E1 :                     ; 		dw 100h
(1) 2287/     8E1 :                     ; 		dw 100h	
(1) 2288/     8E1 :                     ; 		dw 100h
(1) 2289/     8E1 :                     ; 		dw 100h
(1) 2290/     8E1 :                     ; 		dw 100h
(1) 2291/     8E1 :                     ; 		dw 100h
(1) 2292/     8E1 :                     ; 		dw 100h	
(1) 2293/     8E1 :                     ; 		dw 100h		; C-8
(1) 2294/     8E1 :                     ; 		dw 100h
(1) 2295/     8E1 :                     ; 		dw 100h
(1) 2296/     8E1 :                     ; 		dw 100h
(1) 2297/     8E1 :                     ; 		dw 100h
(1) 2298/     8E1 :                     ; 		dw 100h
(1) 2299/     8E1 :                     ; 		dw 100h	
(1) 2300/     8E1 :                     ; 		dw 100h
(1) 2301/     8E1 :                     ; 		dw 100h
(1) 2302/     8E1 :                     ; 		dw 100h
(1) 2303/     8E1 :                     ; 		dw 100h
(1) 2304/     8E1 :                     ; 		dw 100h	
(1) 2305/     8E1 :                     ; 		dw 100h		; C-9
(1) 2306/     8E1 :                     ; 		dw 100h
(1) 2307/     8E1 :                     ; 		dw 100h
(1) 2308/     8E1 :                     ; 		dw 100h
(1) 2309/     8E1 :                     ; 		dw 100h
(1) 2310/     8E1 :                     ; 		dw 100h
(1) 2311/     8E1 :                     ; 		dw 100h	
(1) 2312/     8E1 :                     ; 		dw 100h
(1) 2313/     8E1 :                     ; 		dw 100h
(1) 2314/     8E1 :                     ; 		dw 100h
(1) 2315/     8E1 :                     ; 		dw 100h
(1) 2316/     8E1 :                     ; 		dw 100h
(1) 2317/     8E1 :                     
(1) 2318/     8E1 :                     ; ====================================================================
(1) 2319/     8E1 :                     ; ----------------------------------------------------------------
(1) 2320/     8E1 :                     ; MUSIC DATA
(1) 2321/     8E1 :                     ; ----------------------------------------------------------------
(1) 2322/     8E1 :                     
(1) 2323/     8E1 :                     ; ----------------------------------------------------
(1) 2324/     8E1 :                     ; PSG Instruments
(1) 2325/     8E1 :                     ; ----------------------------------------------------
(1) 2326/     8E1 :                     
(1) 2327/     8E1 : 00                  PsgIns_00:	db 0
(1) 2328/     8E2 : FF                  		db -1
(1) 2329/     8E3 : 00 02 04 05 06      PsgIns_01:	db 0,2,4,5,6
(1) 2330/     8E8 : FF                  		db -1
(1) 2331/     8E9 : 00 0F               PsgIns_02:	db 0,15
(1) 2332/     8EB : FF                  		db -1
(1) 2333/     8EC : 00 00 01 01 02 02   PsgIns_03:	db 0,0,1,1,2,2,3,4,6,10,15
                    03 04 06 0A 0F 
(1) 2334/     8F7 : FF                  		db -1
(1) 2335/     8F8 : 00 02 04 06 0A      PsgIns_04:	db 0,2,4,6,10
(1) 2336/     8FD : FF                  		db -1
(1) 2337/     8FE :                     
     119/     8FE :                     		include "system/video.asm"	; Video
(1)    1/     8FE :                     ; ====================================================================
(1)    2/     8FE :                     ; ----------------------------------------------------------------
(1)    3/     8FE :                     ; Video
(1)    4/     8FE :                     ; ----------------------------------------------------------------
(1)    5/     8FE :                     
(1)    6/     8FE :                     ; --------------------------------------------------------
(1)    7/     8FE :                     ; Init Video
(1)    8/     8FE :                     ; --------------------------------------------------------
(1)    9/     8FE :                     
(1)   10/     8FE :                     Video_Init:
(1)   11/     8FE : CD 51 09            		call	Video_Clear
(1)   12/     901 :                      
(1)   13/     901 : 21 1E 0B            		ld      hl,list_vdpregs		; hl - data array for default register data
(1)   14/     904 : 11 7E C1            		ld	de,RAM_VdpCache		; de - VDP cache on RAM
(1)   15/     907 : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   16/     909 : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   17/     90B :                     .loop:
(1)   18/     90B : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   19/     90C : 12                  		ld	(de),a
(1)   20/     90D : 13                  		inc 	de
(1)   21/     90E : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   22/     910 : 79                  		ld	a,c			; Now set the register
(1)   23/     911 : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   24/     913 : 0C                  		inc	c			; Next register to use
(1)   25/     914 : 23                  		inc 	hl			; Next byte from the list
(1)   26/     915 : 10 F4               		djnz    .loop    		; decrement b and jump if b != 0
(1)   27/     917 : C9                  		ret
(1)   28/     918 :                     
(1)   29/     918 :                     ; --------------------------------------------------------
(1)   30/     918 :                     ; Video_InitPrint
(1)   31/     918 :                     ; 
(1)   32/     918 :                     ; Call this before using any on-screen text print
(1)   33/     918 :                     ; 
(1)   34/     918 :                     ; Graphics will be located at in 160h
(1)   35/     918 :                     ; (ASCII starts at 140h)
(1)   36/     918 :                     ; Uses palette line 0
(1)   37/     918 :                     ; --------------------------------------------------------
(1)   38/     918 :                     
(1)   39/     918 :                     Video_InitPrint:
(1)   40/     918 : 11 40 01            		ld	de,140h			; VRAM | Palette 2
(1)   41/     91B : ED 53 7C C1         		ld	(RAM_VidPrntVram),de
(1)   42/     91F : 21 29 0B            		ld	hl,Art_PrintFont
(1)   43/     922 : 11 00 0C            		ld	de,Art_PrintFont_e-Art_PrintFont
(1)   44/     925 : 01 60 01            		ld	bc,140h+20h
(1)   45/     928 : CD C1 09            		call	Video_LoadArt
(1)   46/     92B :                     		
(1)   47/     92B : 21 29 17            		ld	hl,Pal_PrintFont
(1)   48/     92E : 06 10               		ld	b,16
(1)   49/     930 : 16 00               		ld	d,0
(1)   50/     932 : CD 84 09            		call	Video_LoadPal		
(1)   51/     935 : 21 29 17            		ld	hl,Pal_PrintFont
(1)   52/     938 : 06 06               		ld	b,6
(1)   53/     93A : 16 10               		ld	d,16
(1)   54/     93C : C3 84 09            		jp	Video_LoadPal
(1)   55/     93F :                     
(1)   56/     93F :                     ; ====================================================================
(1)   57/     93F :                     ; ----------------------------------------------------------------
(1)   58/     93F :                     ; Video subroutines
(1)   59/     93F :                     ; ----------------------------------------------------------------
(1)   60/     93F :                     
(1)   61/     93F :                     ; ---------------------------------
(1)   62/     93F :                     ; Video_Update
(1)   63/     93F :                     ; 
(1)   64/     93F :                     ; Update registers from cache
(1)   65/     93F :                     ; to VDP
(1)   66/     93F :                     ; ---------------------------------
(1)   67/     93F :                     
(1)   68/     93F :                     Video_Update:
(1)   69/     93F : 21 7E C1            		ld      hl,RAM_VdpCache		; hl - data array for default register data
(1)   70/     942 : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   71/     944 : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   72/     946 :                     .loop:
(1)   73/     946 : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   74/     947 : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   75/     949 : 79                  		ld	a,c			; Now set the register
(1)   76/     94A : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   77/     94C : 0C                  		inc	c			; Next register to use
(1)   78/     94D : 23                  		inc 	hl			; Next byte from the list
(1)   79/     94E : 10 F6               		djnz    .loop    		; decrement b and jump if b != 0
(1)   80/     950 : C9                  		ret
(1)   81/     951 :                     
(1)   82/     951 :                     ; --------------------------------------------------------
(1)   83/     951 :                     ; Video_Clear
(1)   84/     951 :                     ; 
(1)   85/     951 :                     ; Clear everything on-screen
(1)   86/     951 :                     ;
(1)   87/     951 :                     ; Uses:
(1)   88/     951 :                     ; hl,bc,de
(1)   89/     951 :                     ; --------------------------------------------------------
(1)   90/     951 :                     
(1)   91/     951 :                     Video_Clear:
(1)   92/     951 : 06 10               		ld	b,16			; Clear pallete
(1)   93/     953 : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)   94/     955 : E6 1F               		and	1Fh
(1)   95/     957 : C2 5C 09            		jp	nz,.mark_ms
(1)   96/     95A : CB 20               		sla	b			; Length * 2
(1)   97/     95C :                     .mark_ms:
(1)   98/     95C : 21 00 C0            		ld	hl,0C000h
(1)   99/     95F : 0E BF               		ld	c,vdp_ctrl
(1)  100/     961 : ED 69               		out	(c),l
(1)  101/     963 : ED 61               		out	(c),h
(1)  102/     965 : AF                  		xor	a
(1)  103/     966 : 0E BE               		ld	c,vdp_data
(1)  104/     968 :                     .pal_clr:
(1)  105/     968 : ED 79               		out	(c),a
(1)  106/     96A : 10 FC               		djnz	.pal_clr
(1)  107/     96C :                     	
(1)  108/     96C :                     	; Clear ALL VRAM
(1)  109/     96C : 21 00 40            		ld	hl,4000h		; Clear screen
(1)  110/     96F : 0E BF               		ld	c,vdp_ctrl
(1)  111/     971 : ED 69               		out	(c),l
(1)  112/     973 : ED 61               		out	(c),h
(1)  113/     975 : 21 00 40            		ld	hl,4000h
(1)  114/     978 : 0E BE               		ld	c,vdp_data
(1)  115/     97A :                     .clrscrn:
(1)  116/     97A : AF                  		xor	a
(1)  117/     97B : ED 79               		out	(c),a
(1)  118/     97D : 2B                  		dec 	hl
(1)  119/     97E : 7C                  		ld	a,h
(1)  120/     97F : B5                  		or	l
(1)  121/     980 : C2 7A 09            		jp	nz,.clrscrn
(1)  122/     983 : C9                  		ret
(1)  123/     984 :                     		
(1)  124/     984 :                     ; --------------------------------------------------------
(1)  125/     984 :                     ; Video_LoadPal
(1)  126/     984 :                     ; 
(1)  127/     984 :                     ; Load GAME GEAR palette to VDP, auto-converts for
(1)  128/     984 :                     ; Master System
(1)  129/     984 :                     ;
(1)  130/     984 :                     ; NOTE: Color dots will be shown on screen
(1)  131/     984 :                     ; 
(1)  132/     984 :                     ; Input:
(1)  133/     984 :                     ; hl - Palette data
(1)  134/     984 :                     ; b - Number of colors
(1)  135/     984 :                     ; d - Start position
(1)  136/     984 :                     ;
(1)  137/     984 :                     ; Uses:
(1)  138/     984 :                     ; hl,bc,de
(1)  139/     984 :                     ; --------------------------------------------------------
(1)  140/     984 :                     
(1)  141/     984 :                     Video_LoadPal:
(1)  142/     984 : 0E BE               		ld	c,vdp_data
(1)  143/     986 : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)  144/     988 : E6 1F               		and	1Fh
(1)  145/     98A : C2 9B 09            		jp	nz,.mark_ms
(1)  146/     98D :                     
(1)  147/     98D :                     	; Game Gear palette
(1)  148/     98D : CB 20               		sla	b
(1)  149/     98F : CB 22               		sla	d
(1)  150/     991 : 7A                  		ld	a,d
(1)  151/     992 : D3 BF               		out	(vdp_ctrl),a
(1)  152/     994 : 3E C0               		ld	a,0C0h
(1)  153/     996 : D3 BF               		out	(vdp_ctrl),a
(1)  154/     998 : ED B3               		otir				; out (hl) to the port at C, increment hl, decrement b
(1)  155/     99A : C9                  		ret
(1)  156/     99B :                     
(1)  157/     99B :                     	; GG to MS convertion
(1)  158/     99B :                     .mark_ms:
(1)  159/     99B : 0E BF               		ld	c,vdp_ctrl
(1)  160/     99D : 3E C0               		ld	a,0C0h
(1)  161/     99F : ED 51               		out	(c),d
(1)  162/     9A1 : ED 79               		out	(c),a
(1)  163/     9A3 :                     .loopms:
(1)  164/     9A3 : 7E                  		ld	a,(hl)
(1)  165/     9A4 : CB 2F               		sra	a
(1)  166/     9A6 : CB 2F               		sra	a
(1)  167/     9A8 : E6 03               		and	11b
(1)  168/     9AA : 57                  		ld	d,a
(1)  169/     9AB : 7E                  		ld	a,(hl)
(1)  170/     9AC : 1F                  		rra
(1)  171/     9AD : 1F                  		rra
(1)  172/     9AE : 1F                  		rra
(1)  173/     9AF : 1F                  		rra
(1)  174/     9B0 : E6 0C               		and	1100b
(1)  175/     9B2 : 5F                  		ld	e,a
(1)  176/     9B3 : 23                  		inc	hl
(1)  177/     9B4 : 7E                  		ld	a,(hl)
(1)  178/     9B5 : 17                  		rla
(1)  179/     9B6 : 17                  		rla
(1)  180/     9B7 : E6 30               		and	110000b
(1)  181/     9B9 : B2                  		or	d
(1)  182/     9BA : B3                  		or	e
(1)  183/     9BB : 23                  		inc	hl
(1)  184/     9BC :                     
(1)  185/     9BC : D3 BE               		out	(vdp_data),a
(1)  186/     9BE : 10 E3               		djnz	.loopms
(1)  187/     9C0 : C9                  		ret
(1)  188/     9C1 :                     
(1)  189/     9C1 :                     ; --------------------------------------------------------
(1)  190/     9C1 :                     ; Video_LoadArt
(1)  191/     9C1 :                     ; 
(1)  192/     9C1 :                     ; Load graphics to VRAM
(1)  193/     9C1 :                     ;
(1)  194/     9C1 :                     ; Input:
(1)  195/     9C1 :                     ; hl - Art data
(1)  196/     9C1 :                     ; de - Size
(1)  197/     9C1 :                     ; bc - VRAM (cell)
(1)  198/     9C1 :                     ; --------------------------------------------------------
(1)  199/     9C1 :                     
(1)  200/     9C1 :                     Video_LoadArt:
(1)  201/     9C1 : 78                  		ld	a,b		; Multiply VRAM >> 5
(1)  202/     9C2 : 0F                  		rrca
(1)  203/     9C3 : 0F                  		rrca
(1)  204/     9C4 : 0F                  		rrca
(1)  205/     9C5 : E6 20               		and	00100000b
(1)  206/     9C7 : 47                  		ld	b,a
(1)  207/     9C8 : 79                  		ld	a,c
(1)  208/     9C9 : 0F                  		rrca
(1)  209/     9CA : 0F                  		rrca
(1)  210/     9CB : 0F                  		rrca
(1)  211/     9CC : E6 1F               		and	00011111b
(1)  212/     9CE : B0                  		or	b
(1)  213/     9CF : F6 40               		or	40h		; VRAM write mode
(1)  214/     9D1 : 47                  		ld	b,a
(1)  215/     9D2 : 79                  		ld	a,c
(1)  216/     9D3 : E6 07               		and	00000111b
(1)  217/     9D5 : 0F                  		rrca
(1)  218/     9D6 : 0F                  		rrca
(1)  219/     9D7 : 0F                  		rrca
(1)  220/     9D8 : 0E BF               		ld	c,vdp_ctrl
(1)  221/     9DA : ED 79               		out	(c),a		; a - 00xx
(1)  222/     9DC : ED 41               		out	(c),b		; b - xx00
(1)  223/     9DE :                     
(1)  224/     9DE :                     	; start
(1)  225/     9DE : 0E BE               		ld	c,vdp_data
(1)  226/     9E0 :                     .loop:
(1)  227/     9E0 : ED A3               		outi
(1)  228/     9E2 : 1B                  		dec 	de
(1)  229/     9E3 : 7B                  		ld	a,e
(1)  230/     9E4 : B2                  		or	d
(1)  231/     9E5 : C2 E0 09            		jp	nz,.loop
(1)  232/     9E8 : C9                  		ret
(1)  233/     9E9 :                     
(1)  234/     9E9 :                     ; --------------------------------------------------------
(1)  235/     9E9 :                     ; Video_Print
(1)  236/     9E9 :                     ; 
(1)  237/     9E9 :                     ; Print text on screen
(1)  238/     9E9 :                     ; Note: doesn't check for OOB
(1)  239/     9E9 :                     ; 
(1)  240/     9E9 :                     ; Input:
(1)  241/     9E9 :                     ; ix - String data
(1)  242/     9E9 :                     ; bc - X pos | Y pos
(1)  243/     9E9 :                     ; 
(1)  244/     9E9 :                     ; Uses
(1)  245/     9E9 :                     ; de,hl,iy
(1)  246/     9E9 :                     ; --------------------------------------------------------
(1)  247/     9E9 :                     
(1)  248/     9E9 :                     Video_Print:
(1)  249/     9E9 : C5                  		push	bc
(1)  250/     9EA : D5                  		push	de
(1)  251/     9EB : E5                  		push	hl
(1)  252/     9EC : FD E5               		push	iy
(1)  253/     9EE :                     
(1)  254/     9EE : FD 21 4C C1         		ld	iy,RAM_VidPrntList
(1)  255/     9F2 : 21 00 38            		ld	hl,3800h
(1)  256/     9F5 : DB 00               		in	a,(gg_info)
(1)  257/     9F7 : E6 1F               		and	1Fh
(1)  258/     9F9 : C2 FE 09            		jp	nz,.nocent
(1)  259/     9FC : 2E CC               		ld	l,0CCh
(1)  260/     9FE :                     .nocent:
(1)  261/     9FE : 11 00 00            		ld	de,0
(1)  262/     A01 : 79                  		ld	a,c		; Y pos left
(1)  263/     A02 : 0F                  		rrca	
(1)  264/     A03 : 0F                  		rrca
(1)  265/     A04 : E6 07               		and	07h
(1)  266/     A06 : 57                  		ld	d,a
(1)  267/     A07 : 78                  		ld	a,b		; X pos + Y pos right YYXXXXXXb
(1)  268/     A08 : E6 1F               		and	1Fh
(1)  269/     A0A : 87                  		add 	a,a
(1)  270/     A0B : 5F                  		ld	e,a
(1)  271/     A0C : 79                  		ld	a,c
(1)  272/     A0D : E6 03               		and	11b
(1)  273/     A0F : 0F                  		rrca
(1)  274/     A10 : 0F                  		rrca
(1)  275/     A11 : B3                  		or	e
(1)  276/     A12 : 5F                  		ld	e,a
(1)  277/     A13 : 19                  		add 	hl,de
(1)  278/     A14 :                     
(1)  279/     A14 :                     	; X/Y pos goes here
(1)  280/     A14 : 0E BF               		ld	c,vdp_ctrl
(1)  281/     A16 : 7C                  		ld	a,h
(1)  282/     A17 : F6 40               		or	40h
(1)  283/     A19 : 67                  		ld	h,a
(1)  284/     A1A : ED 69               		out	(c),l
(1)  285/     A1C : ED 61               		out	(c),h
(1)  286/     A1E : 11 00 00            		ld	de,0
(1)  287/     A21 : 44                  		ld	b,h
(1)  288/     A22 : 4D                  		ld	c,l
(1)  289/     A23 :                     
(1)  290/     A23 :                     	; bc - curr position for values
(1)  291/     A23 :                     	; hl - curr position for jump
(1)  292/     A23 :                     .loop:
(1)  293/     A23 : DD 7E 00            		ld	a,(ix)
(1)  294/     A26 : DD 23               		inc	ix
(1)  295/     A28 : FE 0A               		cp	00Ah		; 00Ah - next line?
(1)  296/     A2A : CA 47 0A            		jp	z,.next
(1)  297/     A2D : FE 5C               		cp	05Ch		; 05Ch ("\") special?
(1)  298/     A2F : CA 55 0A            		jp	z,.special		
(1)  299/     A32 : B7                  		or	a		; Zero?
(1)  300/     A33 : CA A0 0A            		jp	z,.exit
(1)  301/     A36 : E5                  		push	hl
(1)  302/     A37 : 2A 7C C1            		ld	hl,(RAM_VidPrntVram)
(1)  303/     A3A : 5F                  		ld	e,a
(1)  304/     A3B : 19                  		add	hl,de
(1)  305/     A3C : 7D                  		ld	a,l
(1)  306/     A3D : D3 BE               		out	(vdp_data),a
(1)  307/     A3F : 7C                  		ld	a,h
(1)  308/     A40 : D3 BE               		out	(vdp_data),a
(1)  309/     A42 : E1                  		pop	hl
(1)  310/     A43 : 03                  		inc 	bc		; Next pos for values
(1)  311/     A44 : 03                  		inc 	bc
(1)  312/     A45 : 18 DC               		jr	.loop
(1)  313/     A47 :                     
(1)  314/     A47 :                     ; Next line
(1)  315/     A47 :                     .next:
(1)  316/     A47 : 11 40 00            		ld	de,40h		; TL add line
(1)  317/     A4A : 19                  		add 	hl,de
(1)  318/     A4B : 44                  		ld	b,h		; Save pos to value beam
(1)  319/     A4C : 4D                  		ld	c,l
(1)  320/     A4D : 7D                  		ld	a,l		; Reset position with new
(1)  321/     A4E : D3 BF               		out	(vdp_ctrl),a
(1)  322/     A50 : 7C                  		ld	a,h
(1)  323/     A51 : D3 BF               		out	(vdp_ctrl),a
(1)  324/     A53 : 18 CE               		jr	.loop
(1)  325/     A55 :                     ; Special
(1)  326/     A55 :                     .special:
(1)  327/     A55 : DD 7E 00            		ld	a,(ix)
(1)  328/     A58 : DD 23               		inc	ix
(1)  329/     A5A : FE 62               		cp	"b"		; Byte?
(1)  330/     A5C : CA 84 0A            		jp	z,.breq
(1)  331/     A5F : FE 77               		cp	"w"		; Word?
(1)  332/     A61 : C2 23 0A            		jp	nz,.loop
(1)  333/     A64 :                     ; word
(1)  334/     A64 : FD 71 00            		ld	(iy),c		; Set address
(1)  335/     A67 : FD 70 01            		ld	(iy+1),b
(1)  336/     A6A : FD 36 02 02         		ld	(iy+2),2	; Set request
(1)  337/     A6E : FD 23               		inc 	iy		; Next entry
(1)  338/     A70 : FD 23               		inc 	iy
(1)  339/     A72 : FD 23               		inc 	iy
(1)  340/     A74 : 03                  		inc 	bc		; Four cells
(1)  341/     A75 : 03                  		inc 	bc
(1)  342/     A76 : 03                  		inc 	bc
(1)  343/     A77 : 03                  		inc 	bc
(1)  344/     A78 : 03                  		inc 	bc
(1)  345/     A79 : 03                  		inc 	bc
(1)  346/     A7A : 03                  		inc 	bc
(1)  347/     A7B : 03                  		inc 	bc
(1)  348/     A7C : 79                  		ld	a,c
(1)  349/     A7D : D3 BF               		out	(vdp_ctrl),a
(1)  350/     A7F : 78                  		ld	a,b
(1)  351/     A80 : D3 BF               		out	(vdp_ctrl),a
(1)  352/     A82 : 18 9F               		jr	.loop
(1)  353/     A84 :                     ; byte
(1)  354/     A84 :                     .breq:
(1)  355/     A84 : FD 71 00            		ld	(iy),c		; Set address
(1)  356/     A87 : FD 70 01            		ld	(iy+1),b
(1)  357/     A8A : FD 36 02 01         		ld	(iy+2),1	; Set request
(1)  358/     A8E : FD 23               		inc 	iy		; Next entry
(1)  359/     A90 : FD 23               		inc 	iy
(1)  360/     A92 : FD 23               		inc 	iy
(1)  361/     A94 : 03                  		inc 	bc		; Two cells
(1)  362/     A95 : 03                  		inc 	bc
(1)  363/     A96 : 03                  		inc 	bc
(1)  364/     A97 : 03                  		inc 	bc
(1)  365/     A98 : 79                  		ld	a,c
(1)  366/     A99 : D3 BF               		out	(vdp_ctrl),a
(1)  367/     A9B : 78                  		ld	a,b
(1)  368/     A9C : D3 BF               		out	(vdp_ctrl),a
(1)  369/     A9E : 18 83               		jr	.loop
(1)  370/     AA0 :                     .exit:
(1)  371/     AA0 :                     
(1)  372/     AA0 :                     ; ------------------------------------------------
(1)  373/     AA0 :                     ; Print values
(1)  374/     AA0 :                     ; check MAX_PRNTLIST for maximum values
(1)  375/     AA0 :                     ; 
(1)  376/     AA0 :                     ; vvvv tt
(1)  377/     AA0 :                     ; v - vdp pos
(1)  378/     AA0 :                     ; t - value type
(1)  379/     AA0 :                     ; ------------------------------------------------
(1)  380/     AA0 :                     
(1)  381/     AA0 : FD 21 4C C1         		ld	iy,RAM_VidPrntList
(1)  382/     AA4 :                     .loopval:
(1)  383/     AA4 : FD 7E 00            		ld	a,(iy)
(1)  384/     AA7 : FD 46 01            		ld	b,(iy+1)
(1)  385/     AAA : B7                  		or	a
(1)  386/     AAB : CA E8 0A            		jp	z,.endval
(1)  387/     AAE : 4F                  		ld	c,a
(1)  388/     AAF :                     
(1)  389/     AAF :                     	; Check byte
(1)  390/     AAF : FD 7E 02            		ld	a,(iy+2)
(1)  391/     AB2 : FE 01               		cp	1
(1)  392/     AB4 : C2 C0 0A            		jp	nz,.nobyte
(1)  393/     AB7 : DD 6E 00            		ld	l,(ix)
(1)  394/     ABA : DD 66 01            		ld	h,(ix+1)
(1)  395/     ABD : CD EE 0A            		call	.put_byte
(1)  396/     AC0 :                     .nobyte:
(1)  397/     AC0 : FD 7E 02            		ld	a,(iy+2)
(1)  398/     AC3 : FE 02               		cp	2
(1)  399/     AC5 : C2 D5 0A            		jp	nz,.noword
(1)  400/     AC8 : DD 6E 00            		ld	l,(ix)
(1)  401/     ACB : DD 66 01            		ld	h,(ix+1)
(1)  402/     ACE : CD EE 0A            		call	.put_byte
(1)  403/     AD1 : 23                  		inc 	hl
(1)  404/     AD2 : CD EE 0A            		call	.put_byte
(1)  405/     AD5 :                     .noword:
(1)  406/     AD5 :                     
(1)  407/     AD5 : AF                  		xor	a		; Clear current entry 
(1)  408/     AD6 : FD 77 00            		ld	(iy),a		; and move to next
(1)  409/     AD9 : FD 77 01            		ld	(iy+1),a
(1)  410/     ADC : FD 77 02            		ld	(iy+2),a
(1)  411/     ADF : FD 23               		inc 	iy
(1)  412/     AE1 : FD 23               		inc 	iy
(1)  413/     AE3 : FD 23               		inc 	iy
(1)  414/     AE5 : C3 A4 0A            		jp	.loopval
(1)  415/     AE8 :                     .endval:	
(1)  416/     AE8 : FD E1               		pop	iy
(1)  417/     AEA : E1                  		pop	hl
(1)  418/     AEB : D1                  		pop	de
(1)  419/     AEC : C1                  		pop	bc
(1)  420/     AED : C9                  		ret
(1)  421/     AEE :                     
(1)  422/     AEE :                     ; draw nibble
(1)  423/     AEE :                     .put_byte:
(1)  424/     AEE : 7E                  		ld	a,(hl)
(1)  425/     AEF : 0F                  		rrca
(1)  426/     AF0 : 0F                  		rrca
(1)  427/     AF1 : 0F                  		rrca
(1)  428/     AF2 : 0F                  		rrca
(1)  429/     AF3 : CD F7 0A            		call	.do_nibbl
(1)  430/     AF6 : 7E                  		ld	a,(hl)
(1)  431/     AF7 :                     .do_nibbl:
(1)  432/     AF7 : E5                  		push	hl
(1)  433/     AF8 : 21 00 00            		ld	hl,0
(1)  434/     AFB : E6 0F               		and 	0Fh
(1)  435/     AFD : FE 0A               		cp	0Ah
(1)  436/     AFF : DA 04 0B            		jp	c,.noadd
(1)  437/     B02 : C6 07               		add 	a,7
(1)  438/     B04 :                     .noadd:
(1)  439/     B04 : 6F                  		ld	l,a
(1)  440/     B05 : ED 5B 7C C1         		ld	de,(RAM_VidPrntVram)	; Start at font VRAM
(1)  441/     B09 : 19                  		add 	hl,de
(1)  442/     B0A : 11 30 00            		ld	de,30h			; at char 0
(1)  443/     B0D : 19                  		add 	hl,de
(1)  444/     B0E : 79                  		ld	a,c			; mark vdp pos
(1)  445/     B0F : D3 BF               		out	(vdp_ctrl),a
(1)  446/     B11 : 78                  		ld	a,b
(1)  447/     B12 : D3 BF               		out	(vdp_ctrl),a
(1)  448/     B14 : 03                  		inc 	bc			; next layer cell
(1)  449/     B15 : 03                  		inc 	bc
(1)  450/     B16 : 7D                  		ld	a,l			; put vram value
(1)  451/     B17 : D3 BE               		out 	(vdp_data),a
(1)  452/     B19 : 7C                  		ld	a,h
(1)  453/     B1A : D3 BE               		out	(vdp_data),a
(1)  454/     B1C : E1                  		pop	hl
(1)  455/     B1D : C9                  		ret
(1)  456/     B1E :                     		
(1)  457/     B1E :                     ; ====================================================================
(1)  458/     B1E :                     ; --------------------------------------------------------
(1)  459/     B1E :                     ; Video data
(1)  460/     B1E :                     ; --------------------------------------------------------
(1)  461/     B1E :                     
(1)  462/     B1E :                     list_vdpregs:
(1)  463/     B1E : 06                  		db      00000110b       ; ---H---- | H-Hint
(1)  464/     B1F : E2                  		db      11100010b       ; -DV---W- | D-Display ON / V-Vint / W-8x16 sprites
(1)  465/     B20 : FF                  		db      11111111b       ;
(1)  466/     B21 : FF                  		db      11111111b       ;
(1)  467/     B22 : FF                  		db      11111111b       ;
(1)  468/     B23 : FF                  		db      11111111b       ;
(1)  469/     B24 : 04                  		db      00000100b       ; -----S-- | S-Sprite VRAM Add ($100)
(1)  470/     B25 : 00                  		db      00000000b       ;
(1)  471/     B26 : 00                  		db      00000000b       ;
(1)  472/     B27 : 00                  		db      00000000b       ;
(1)  473/     B28 : 00                  		db      00000000b       ;
(1)  474/     B29 :                     
(1)  475/     B29 :                     Art_PrintFont:	binclude "system/data/art_prntfont.bin"
(1)  476/    1729 :                     Art_PrintFont_e:
(1)  477/    1729 :                     Pal_PrintFont:;	binclude "system/data/pal_prntfont.bin"
(1)  478/    1729 : 00 00 EE 0E CC 0C   		dw 0000h,0EEEh,0CCCh,0AAAh,0888h,0444h,000Eh,0008h
                    AA 0A 88 08 44 04 
                    0E 00 08 00 
(1)  479/    1739 : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  480/    1749 :                     
     120/    1749 :                     		include "system/setup.asm"	; System
(1)    1/    1749 :                     ; ====================================================================
(1)    2/    1749 :                     ; ----------------------------------------------------------------
(1)    3/    1749 :                     ; System
(1)    4/    1749 :                     ; ----------------------------------------------------------------
(1)    5/    1749 :                     
(1)    6/    1749 :                     ; --------------------------------------------------------
(1)    7/    1749 :                     ; Init System
(1)    8/    1749 :                     ; --------------------------------------------------------
(1)    9/    1749 :                     
(1)   10/    1749 :                     System_Init:
(1)   11/    1749 :                     	;Clear WORK RAM ($C001 to $DFEF)
(1)   12/    1749 : 21 00 C0            		ld      hl,0C000h  		; hl - System RAM
(1)   13/    174C : 11 01 C0            		ld      de,0C001h  		; de - (System RAM + 1)
(1)   14/    174F : 01 00 10            		ld      bc,01000h  		; bc - Bytes to copy
(1)   15/    1752 : 36 00               		ld      (hl),0			; Set $00 at first byte of RAM before copying bytes
(1)   16/    1754 : ED B0               		ldir				; read (RAM), write to (RAM+1), increment de, hl and decrement bc
(1)   17/    1756 :                     
(1)   18/    1756 : DB 00               		in	a,(gg_info)		; Read Game Gear extra bits
(1)   19/    1758 : E6 1F               		and	1Fh			; only grab 5 bits
(1)   20/    175A : C2 68 17            		jp	nz,.not_gg		; If not Zero, don't set extra gg regs
(1)   21/    175D : 3E FF               		ld      a,11111111b   		; all ones
(1)   22/    175F : D3 02               		out     (gg_ext_bitdir),a   	; set i/o port 2h (read/write) to all ones
(1)   23/    1761 : D3 06                               out 	(gg_stereo),a		; gg psg stereo full
(1)   24/    1763 : AF                  		xor     a         		; set a to zero
(1)   25/    1764 : D3 01               		out     (gg_ext_comm),a   	; set i/o port 1h to zero
(1)   26/    1766 : D3 05               		out     (gg_serial),a   	; set i/o port 5h to zero
(1)   27/    1768 :                     .not_gg:
(1)   28/    1768 : AF                  		xor     a         		; set a to zero
(1)   29/    1769 : 32 FC FF            		ld      (bank_ctrl),a		; set bank control register to all zeros
(1)   30/    176C : 32 FD FF            		ld      (bank_0),a		; set bank reg #0 to all zeros
(1)   31/    176F : 3C                  		inc	a
(1)   32/    1770 : 32 FE FF            		ld      (bank_1),a		; set bank reg #1 to 0001
(1)   33/    1773 : 3C                  		inc	a
(1)   34/    1774 : 32 FF FF            		ld      (bank_2),a		; set bank reg #2 to 0010
(1)   35/    1777 :                     		
(1)   36/    1777 : 3E C3               		ld	a,0C3h
(1)   37/    1779 : 32 51 C2            		ld	(RAM_VBlank),a
(1)   38/    177C : 32 54 C2            		ld	(RAM_HBlank),a
(1)   39/    177F : 01 67 00            		ld	bc,MS_VInt
(1)   40/    1782 : 11 86 00            		ld	de,MS_HInt
(1)   41/    1785 : ED 43 52 C2         		ld	(RAM_VBlank+1),bc
(1)   42/    1789 : ED 53 55 C2         		ld	(RAM_HBlank+1),de
(1)   43/    178D : C9                  		ret
(1)   44/    178E :                     
(1)   45/    178E :                     ; ====================================================================
(1)   46/    178E :                     ; ----------------------------------------------------------------
(1)   47/    178E :                     ; System subroutines
(1)   48/    178E :                     ; ----------------------------------------------------------------
(1)   49/    178E :                     
(1)   50/    178E :                     ; --------------------------------------------------------
(1)   51/    178E :                     ; System_VSync
(1)   52/    178E :                     ; 
(1)   53/    178E :                     ; Wait for VBlank
(1)   54/    178E :                     ; --------------------------------------------------------
(1)   55/    178E :                     
(1)   56/    178E :                     System_VSync:
(1)   57/    178E : DB BF               		in	a,(vdp_ctrl)		; Read VDP Control
(1)   58/    1790 : E6 80               		and	10000000b		; Get VBlank bit
(1)   59/    1792 : CA 8E 17            		jp	z,System_VSync		; if Zero, keep waiting
(1)   60/    1795 : C9                  		ret
(1)   61/    1796 :                     		
(1)   62/    1796 :                     ; --------------------------------------------------------
(1)   63/    1796 :                     ; System_Input
(1)   64/    1796 :                     ; 
(1)   65/    1796 :                     ; WARNING: Don't call this outside of VBLANK
(1)   66/    1796 :                     ; (call System_VSync first)
(1)   67/    1796 :                     ; 
(1)   68/    1796 :                     ; Uses:
(1)   69/    1796 :                     ; hl,bc
(1)   70/    1796 :                     ; --------------------------------------------------------
(1)   71/    1796 :                     
(1)   72/    1796 :                     System_Input:
(1)   73/    1796 :                      
(1)   74/    1796 :                     ; ---------------------------
(1)   75/    1796 :                     ; Read current controllers
(1)   76/    1796 :                     ; ---------------------------
(1)   77/    1796 :                     
(1)   78/    1796 : 21 4D C2            		ld	hl,RAM_InputData	; hl - Input data stored in RAM
(1)   79/    1799 :                     
(1)   80/    1799 :                     	; Controller 1
(1)   81/    1799 : 06 00               		ld	b,0			; b = 0
(1)   82/    179B : DB 00               		in	a,(gg_info)		; Read GG port 00h (START button and region)
(1)   83/    179D : 4F                  		ld	c,a			; Copy result to c
(1)   84/    179E : E6 1F               		and	1Fh			; only read right 5 bits
(1)   85/    17A0 : C2 A8 17            		jp	nz,.no_ggstrt		; if != 0, skip this
(1)   86/    17A3 : 79                  		ld	a,c			; move our copy to a
(1)   87/    17A4 : 2F                  		cpl				; reverse bits
(1)   88/    17A5 : E6 80               		and	80h			; only read the MSB
(1)   89/    17A7 : 47                  		ld	b,a			; b = Start button bit press
(1)   90/    17A8 :                     .no_ggstrt:
(1)   91/    17A8 : DB DC               		in      a,(joypad_1)		; Read controller 1 port
(1)   92/    17AA : 2F                  		cpl				; Reverse bits
(1)   93/    17AB : E6 3F               		and	00111111b		; Only grab 0012RLDU 
(1)   94/    17AD : B0                  		or	b			; Merge GG start button if available S012RLDU
(1)   95/    17AE : 47                  		ld	b,a			; Copy input from a to b
(1)   96/    17AF : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)   97/    17B0 : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)   98/    17B1 : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)   99/    17B2 : 23                  		inc	hl			; Next RAM byte
(1)  100/    17B3 : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  101/    17B4 : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  102/    17B5 : 23                  		inc 	hl			; Next controller
(1)  103/    17B6 :                      
(1)  104/    17B6 :                     	; Controller 2
(1)  105/    17B6 : DB DC               		in      a,(joypad_1)		; Read controller 1 port again (for P2's Down/Up)
(1)  106/    17B8 : 2F                  		cpl				; Reverse bits, DU??????
(1)  107/    17B9 : 07                  		rlca				; U?????D
(1)  108/    17BA : 07                  		rlca				; ?????DU
(1)  109/    17BB : E6 03               		and	11b			; 00000DU
(1)  110/    17BD : 47                  		ld	b,a			; Save copy to b
(1)  111/    17BE : DB DD               		in      a,(joypad_2)		; Read controller 2 port (for 2/1/Right/Left)
(1)  112/    17C0 : 2F                  		cpl				; Reverse bits, ????21RL
(1)  113/    17C1 : 07                  		rlca				; ???21RL?
(1)  114/    17C2 : 07                  		rlca				; ??21RL??
(1)  115/    17C3 : E6 3C               		and	00111100b		; 0021RL00
(1)  116/    17C5 : B0                  		or	b			; Combine results: 0021RLDU
(1)  117/    17C6 : 47                  		ld	b,a			; Copy input from a to b
(1)  118/    17C7 : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)  119/    17C8 : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)  120/    17C9 : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)  121/    17CA : 23                  		inc	hl			; Next RAM byte
(1)  122/    17CB : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  123/    17CC : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  124/    17CD : C9                  		ret
(1)  125/    17CE :                     		
(1)  126/    17CE :                     ; ====================================================================
(1)  127/    17CE :                     ; ----------------------------------------------------------------
(1)  128/    17CE :                     ; System data
(1)  129/    17CE :                     ; ----------------------------------------------------------------
(1)  130/    17CE :                     
     121/    17CE :                     
     122/    17CE :                     ; ====================================================================
     123/    17CE :                     ; ----------------------------------------------------------------
     124/    17CE :                     ; MS Start
     125/    17CE :                     ; ----------------------------------------------------------------
     126/    17CE :                     
     127/    17CE :                     		align 400h
     128/    1800 :                     MS_Init:
     129/    1800 : 31 F0 DF            		ld	sp,0DFF0h		; Stacks starts at 0DFF0h, goes backwards
     130/    1803 : CD 49 17            		call	System_Init		; Init System
     131/    1806 : CD 89 00            		call	Sound_Init		; Init Sound
     132/    1809 : CD FE 08            		call	Video_Init		; Init Video
     133/    180C :                     
     134/    180C :                     ; ================================================================
     135/    180C :                     ; ------------------------------------------------------------
     136/    180C :                     ; Your code starts here
     137/    180C :                     ; ------------------------------------------------------------
     138/    180C :                     
     139/    180C :                     		align 400h
     140/    1C00 :                     CodeBank0:
     141/    1C00 :                     		include	"game/code.asm"
(1)    1/    1C00 :                     ; ====================================================================
(1)    2/    1C00 :                     ; ----------------------------------------------------------------
(1)    3/    1C00 :                     ; Structs
(1)    4/    1C00 :                     ; ----------------------------------------------------------------
(1)    5/    1C00 :                     
(1)    6/    1C00 : (MACRO)             		struct 0
(1)    6/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)    6/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)    6/    1C00 :                                     dephase
(1)    6/       0 :                                     phase 0
(1)    7/       0 :                     plyr_x		ds 2
(1)    8/       2 :                     plyr_y		ds 2
(1)    9/       4 :                     plyr_frame	ds 1
(1)   10/       5 :                     plyr_ani_timer	ds 1
(1)   11/       6 :                     plyr_ani_cntr 	ds 1
(1)   12/       7 : (MACRO)             		finish
(1)   12/       0 :                                     !org GLBL_LASTORG
(1)   12/    1C00 :                                     phase GLBL_LASTPC
(1)   13/    1C00 :                     
(1)   14/    1C00 : (MACRO)             		struct RAM_Local
(1)   14/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)   14/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)   14/    1C00 :                                     dephase
(1)   14/    C257 :                                     phase RAM_LOCAL
(1)   15/    C257 :                     RAM_CurrPlySlot	ds 1
(1)   16/    C258 :                     RAM_CurrTrckId	ds 2
(1)   17/    C25A :                     RAM_CurrTrckVol	ds 2
(1)   18/    C25C : (MACRO)             		finish
(1)   18/    C257 :                                     !org GLBL_LASTORG
(1)   18/    1C00 :                                     phase GLBL_LASTPC
(1)   19/    1C00 :                     
(1)   20/    1C00 :                     ; ====================================================================
(1)   21/    1C00 :                     ; ----------------------------------------------------------------
(1)   22/    1C00 :                     ; Main
(1)   23/    1C00 :                     ; ----------------------------------------------------------------
(1)   24/    1C00 :                     
(1)   25/    1C00 : CD 18 09            		call	Video_InitPrint
(1)   26/    1C03 :                     
(1)   27/    1C03 : 3E 00               		ld	a,0
(1)   28/    1C05 : DD 21 24 1D         		ld	ix,str_Test
(1)   29/    1C09 : 01 03 02            		ld	bc,0203h
(1)   30/    1C0C : CD E9 09            		call	Video_Print
(1)   31/    1C0F : 21 6E 1D            		ld	hl,pal_FontNew
(1)   32/    1C12 : 06 20               		ld	b,32
(1)   33/    1C14 : 16 00               		ld	d,0
(1)   34/    1C16 : CD 84 09            		call	Video_LoadPal
(1)   35/    1C19 :                     		
(1)   36/    1C19 : AF                  		xor	a
(1)   37/    1C1A : 32 57 C2            		ld	(RAM_CurrPlySlot),a
(1)   38/    1C1D : CD 9C 1C            		call	.show_values
(1)   39/    1C20 :                     
(1)   40/    1C20 :                     .loop:
(1)   41/    1C20 : CD 8E 17            		call	System_VSync
(1)   42/    1C23 : CD 96 17            		call	System_Input
(1)   43/    1C26 : CD C1 00            		call	Sound_Run
(1)   44/    1C29 :                     ; 		call	.debug_me
(1)   45/    1C29 :                     
(1)   46/    1C29 : 3A 4D C2            		ld	a,(Controller_1+on_hold)
(1)   47/    1C2C : 47                  		ld	b,a
(1)   48/    1C2D : 3A 4E C2            		ld	a,(Controller_1+on_press)
(1)   49/    1C30 : 4F                  		ld	c,a
(1)   50/    1C31 : AF                  		xor	a
(1)   51/    1C32 :                     
(1)   52/    1C32 : 21 58 C2            		ld	hl,RAM_CurrTrckId
(1)   53/    1C35 : 3A 57 C2            		ld	a,(RAM_CurrPlySlot)
(1)   54/    1C38 : B7                  		or	a
(1)   55/    1C39 : CA 3D 1C            		jp	z,.slot1noad
(1)   56/    1C3C : 23                  		inc 	hl
(1)   57/    1C3D :                     .slot1noad:
(1)   58/    1C3D : 16 01               		ld	d,1
(1)   59/    1C3F : CB 59               		bit	bitJoyRight,c
(1)   60/    1C41 : C4 6B 1C            		call	nz,.modify_track
(1)   61/    1C44 : 16 FF               		ld	d,-1
(1)   62/    1C46 : CB 51               		bit	bitJoyLeft,c
(1)   63/    1C48 : C4 6B 1C            		call	nz,.modify_track
(1)   64/    1C4B : CB 41               		bit	bitJoyUp,c
(1)   65/    1C4D : C4 71 1C            		call	nz,.modify_slot
(1)   66/    1C50 : 16 01               		ld	d,1
(1)   67/    1C52 : CB 49               		bit	bitJoyDown,c
(1)   68/    1C54 : C4 71 1C            		call	nz,.modify_slot
(1)   69/    1C57 :                     
(1)   70/    1C57 : CB 69               		bit	bitJoy2,c		; c is lost after this
(1)   71/    1C59 : C4 7B 1C            		call	nz,.play_track
(1)   72/    1C5C : CB 61               		bit	bitJoy1,c
(1)   73/    1C5E : C4 96 1C            		call	nz,.stop_track
(1)   74/    1C61 :                     
(1)   75/    1C61 : 3A 4E C2            		ld	a,(Controller_1+on_press)	; update values on any press
(1)   76/    1C64 : B7                  		or	a
(1)   77/    1C65 : C4 9C 1C            		call	nz,.show_values
(1)   78/    1C68 : C3 20 1C            		jp	.loop
(1)   79/    1C6B :                     
(1)   80/    1C6B :                     ; ====================================================================
(1)   81/    1C6B :                     ; ----------------------------------------------------------------
(1)   82/    1C6B :                     ; Subs
(1)   83/    1C6B :                     ; ----------------------------------------------------------------
(1)   84/    1C6B :                     
(1)   85/    1C6B :                     ; hl - RAM_CurrTrckId
(1)   86/    1C6B :                     .modify_track:
(1)   87/    1C6B : 7E                  		ld	a,(hl)
(1)   88/    1C6C : 82                  		add 	a,d
(1)   89/    1C6D : E6 03               		and	00000011b			; limit
(1)   90/    1C6F : 77                  		ld	(hl),a
(1)   91/    1C70 : C9                  		ret
(1)   92/    1C71 :                     
(1)   93/    1C71 :                     .modify_slot:
(1)   94/    1C71 : 3A 57 C2            		ld	a,(RAM_CurrPlySlot)
(1)   95/    1C74 : 82                  		add 	a,d
(1)   96/    1C75 : E6 01               		and	00000001b			; limit
(1)   97/    1C77 : 32 57 C2            		ld	(RAM_CurrPlySlot),a
(1)   98/    1C7A : C9                  		ret
(1)   99/    1C7B :                     		
(1)  100/    1C7B :                     .play_track:
(1)  101/    1C7B : 7E                  		ld	a,(hl)
(1)  102/    1C7C : 11 00 00            		ld	de,0
(1)  103/    1C7F : 87                  		add 	a,a
(1)  104/    1C80 : 87                  		add 	a,a
(1)  105/    1C81 : 87                  		add	a,a
(1)  106/    1C82 : 87                  		add	a,a
(1)  107/    1C83 : 5F                  		ld	e,a
(1)  108/    1C84 : 21 AE 1D            		ld	hl,trackData_test
(1)  109/    1C87 : 19                  		add 	hl,de
(1)  110/    1C88 : 46                  		ld	b,(hl)
(1)  111/    1C89 : 23                  		inc 	hl
(1)  112/    1C8A : 4E                  		ld	c,(hl)
(1)  113/    1C8B : 23                  		inc 	hl
(1)  114/    1C8C : 56                  		ld	d,(hl)
(1)  115/    1C8D : 23                  		inc 	hl
(1)  116/    1C8E : 5E                  		ld	e,(hl)
(1)  117/    1C8F : 23                  		inc 	hl
(1)  118/    1C90 : 3A 57 C2            		ld	a,(RAM_CurrPlySlot)
(1)  119/    1C93 : C3 D8 00            		jp	Sound_SetTrack
(1)  120/    1C96 :                     
(1)  121/    1C96 :                     .stop_track:
(1)  122/    1C96 : 3A 57 C2            		ld	a,(RAM_CurrPlySlot)
(1)  123/    1C99 : C3 12 01            		jp	Sound_StopTrack
(1)  124/    1C9C :                     	
(1)  125/    1C9C :                     ; .debug_me:
(1)  126/    1C9C :                     ; 		ld	de,140h+30h
(1)  127/    1C9C :                     ; 		ld	bc,0000h
(1)  128/    1C9C :                     ; 		ld	ix,curr_PsgStereo
(1)  129/    1C9C :                     ; 		jp	.this_val
(1)  130/    1C9C :                     ; show values
(1)  131/    1C9C :                     .show_values:
(1)  132/    1C9C : 11 70 09            		ld	de,140h+30h|800h
(1)  133/    1C9F : 3A 57 C2            		ld	a,(RAM_CurrPlySlot)
(1)  134/    1CA2 : B7                  		or	a
(1)  135/    1CA3 : CA A9 1C            		jp	z,.slot_1
(1)  136/    1CA6 : 11 70 01            		ld	de,140h+30h
(1)  137/    1CA9 :                     .slot_1:
(1)  138/    1CA9 : 01 08 07            		ld	bc,0708h
(1)  139/    1CAC : DD 21 58 C2         		ld	ix,RAM_CurrTrckId
(1)  140/    1CB0 : CD C5 1C            		call	.this_val
(1)  141/    1CB3 : DD 23               		inc 	ix
(1)  142/    1CB5 :                     		
(1)  143/    1CB5 : 11 70 09            		ld	de,140h+30h|800h
(1)  144/    1CB8 : 3A 57 C2            		ld	a,(RAM_CurrPlySlot)
(1)  145/    1CBB : B7                  		or	a
(1)  146/    1CBC : C2 C2 1C            		jp	nz,.slot_2
(1)  147/    1CBF : 11 70 01            		ld	de,140h+30h
(1)  148/    1CC2 :                     .slot_2:
(1)  149/    1CC2 : 01 0A 07            		ld	bc,070Ah
(1)  150/    1CC5 :                     
(1)  151/    1CC5 :                     ; ----------------------------------------
(1)  152/    1CC5 :                     ; show current value
(1)  153/    1CC5 :                     .this_val:
(1)  154/    1CC5 : 21 00 38            		ld	hl,3800h
(1)  155/    1CC8 : DB 00               		in	a,(gg_info)
(1)  156/    1CCA : E6 1F               		and	1Fh
(1)  157/    1CCC : C2 D1 1C            		jp	nz,.nocent
(1)  158/    1CCF : 2E CC               		ld	l,0CCh
(1)  159/    1CD1 :                     .nocent:
(1)  160/    1CD1 : D5                  		push	de
(1)  161/    1CD2 : 11 00 00            		ld	de,0
(1)  162/    1CD5 : 79                  		ld	a,c		; Y pos left
(1)  163/    1CD6 : 0F                  		rrca	
(1)  164/    1CD7 : 0F                  		rrca
(1)  165/    1CD8 : E6 07               		and	07h
(1)  166/    1CDA : 57                  		ld	d,a
(1)  167/    1CDB : 78                  		ld	a,b		; X pos + Y pos right YYXXXXXXb
(1)  168/    1CDC : E6 1F               		and	1Fh
(1)  169/    1CDE : 87                  		add 	a,a
(1)  170/    1CDF : 5F                  		ld	e,a
(1)  171/    1CE0 : 79                  		ld	a,c
(1)  172/    1CE1 : E6 03               		and	11b
(1)  173/    1CE3 : 0F                  		rrca
(1)  174/    1CE4 : 0F                  		rrca
(1)  175/    1CE5 : B3                  		or	e
(1)  176/    1CE6 : 5F                  		ld	e,a
(1)  177/    1CE7 : 19                  		add 	hl,de
(1)  178/    1CE8 : D1                  		pop	de
(1)  179/    1CE9 :                     
(1)  180/    1CE9 :                     	; X/Y pos goes here
(1)  181/    1CE9 : 0E BF               		ld	c,vdp_ctrl
(1)  182/    1CEB : 7C                  		ld	a,h
(1)  183/    1CEC : F6 40               		or	40h
(1)  184/    1CEE : 67                  		ld	h,a
(1)  185/    1CEF : ED 69               		out	(c),l
(1)  186/    1CF1 : ED 61               		out	(c),h
(1)  187/    1CF3 :                     
(1)  188/    1CF3 : 0E BE               		ld	c,vdp_data
(1)  189/    1CF5 : 21 00 00            		ld	hl,0
(1)  190/    1CF8 : DD 7E 00            		ld	a,(ix)
(1)  191/    1CFB : 0F                  		rrca
(1)  192/    1CFC : 0F                  		rrca
(1)  193/    1CFD : 0F                  		rrca
(1)  194/    1CFE : 0F                  		rrca
(1)  195/    1CFF : E6 0F               		and	00001111b
(1)  196/    1D01 : FE 0A               		cp	0Ah
(1)  197/    1D03 : DA 08 1D            		jp	c,.no_A1
(1)  198/    1D06 : C6 07               		add 	a,7
(1)  199/    1D08 :                     .no_A1:
(1)  200/    1D08 : 6F                  		ld	l,a
(1)  201/    1D09 : 19                  		add 	hl,de
(1)  202/    1D0A : ED 69               		out	(c),l
(1)  203/    1D0C : ED 61               		out	(c),h
(1)  204/    1D0E :                     
(1)  205/    1D0E : 21 00 00            		ld	hl,0
(1)  206/    1D11 : DD 7E 00            		ld	a,(ix)
(1)  207/    1D14 : E6 0F               		and	00001111b
(1)  208/    1D16 : FE 0A               		cp	0Ah
(1)  209/    1D18 : DA 1D 1D            		jp	c,.no_A2
(1)  210/    1D1B : C6 07               		add 	a,7
(1)  211/    1D1D :                     .no_A2:
(1)  212/    1D1D : 6F                  		ld	l,a
(1)  213/    1D1E : 19                  		add 	hl,de
(1)  214/    1D1F : ED 69               		out	(c),l
(1)  215/    1D21 : ED 61               		out	(c),h
(1)  216/    1D23 : C9                  		ret
(1)  217/    1D24 :                     
(1)  218/    1D24 :                     ; ====================================================================
(1)  219/    1D24 :                     ; ----------------------------------------------------------------
(1)  220/    1D24 :                     ; Small data
(1)  221/    1D24 :                     ; ----------------------------------------------------------------
(1)  222/    1D24 :                     
(1)  223/    1D24 : 50 75 6C 73 65 4D   str_Test:	db "PulseMini tester",0Ah
                    69 6E 69 20 74 65 
                    73 74 65 72 0A 
(1)  224/    1D35 : 56 65 72 20 30 38   		db "Ver 08/2019",0Ah
                    2F 32 30 31 39 0A 
(1)  225/    1D41 : 0A                  		db 0Ah
(1)  226/    1D42 : 2D 2D 2D 20 54 72   		db "--- Trk / Vol",0Ah
                    6B 20 2F 20 56 6F 
                    6C 0A 
(1)  227/    1D50 : 0A                  		db 0Ah
(1)  228/    1D51 : 53 46 58 20 20 20   		db "SFX          ",0Ah
                    20 20 20 20 20 20 
                    20 0A 
(1)  229/    1D5F : 0A                  		db 0Ah
(1)  230/    1D60 : 42 47 4D 20 20 20   		db "BGM          ",0
                    20 20 20 20 20 20 
                    20 00 
(1)  231/    1D6E :                     
(1)  232/    1D6E :                     pal_FontNew:
(1)  233/    1D6E : 00 00 EE 0E CC 0C   		dw 0000h,0EEEh,0CCCh,0AAAh,0888h,0444h,000Eh,0008h
                    AA 0A 88 08 44 04 
                    0E 00 08 00 
(1)  234/    1D7E : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  235/    1D8E : 00 00 AE 00 8C 00   		dw 0000h,00AEh,008Ch,006Ah,0048h,0024h,000Eh,0008h
                    6A 00 48 00 24 00 
                    0E 00 08 00 
(1)  236/    1D9E : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  237/    1DAE :                     		
(1)  238/    1DAE :                     trackData_test:
(1)  239/    1DAE : 01                  		db DataBank0>>14
(1)  240/    1DAF : 00                  		db 0
(1)  241/    1DB0 : 00                  		db 0
(1)  242/    1DB1 : 03                  		db 3
(1)  243/    1DB2 : 13 40               		dw MusicBlk_TestMe
(1)  244/    1DB4 : 16 40               		dw MusicPat_TestMe
(1)  245/    1DB6 : 7F 42               		dw MusicIns_TestMe
(1)  246/    1DB8 : 00 00 00 00         		dw 0,0
(1)  247/    1DBC : 00 00               		dw 0
(1)  248/    1DBE :                     
(1)  249/    1DBE : 01                  		db DataBank0>>14
(1)  250/    1DBF : 00                  		db 0
(1)  251/    1DC0 : 00                  		db 0
(1)  252/    1DC1 : 02                  		db 2
(1)  253/    1DC2 : B7 42               		dw MusicBlk_Gigalo
(1)  254/    1DC4 : C4 42               		dw MusicPat_Gigalo
(1)  255/    1DC6 : 20 62               		dw MusicIns_Gigalo
(1)  256/    1DC8 : 00 00 00 00         		dw 0,0
(1)  257/    1DCC : 00 00               		dw 0
(1)  258/    1DCE :                     		
(1)  259/    1DCE : 01                  		db DataBank0>>14
(1)  260/    1DCF : 00                  		db 0
(1)  261/    1DD0 : 00                  		db 0
(1)  262/    1DD1 : 03                  		db 3
(1)  263/    1DD2 : 13 40               		dw MusicBlk_TestMe
(1)  264/    1DD4 : 16 40               		dw MusicPat_TestMe
(1)  265/    1DD6 : 7F 42               		dw MusicIns_TestMe
(1)  266/    1DD8 : 00 00 00 00         		dw 0,0
(1)  267/    1DDC : 00 00               		dw 0
(1)  268/    1DDE :                     		
(1)  269/    1DDE : 01                  		db DataBank0>>14
(1)  270/    1DDF : 00                  		db 0
(1)  271/    1DE0 : 00                  		db 0
(1)  272/    1DE1 : 03                  		db 3
(1)  273/    1DE2 : 13 40               		dw MusicBlk_TestMe
(1)  274/    1DE4 : 16 40               		dw MusicPat_TestMe
(1)  275/    1DE6 : 7F 42               		dw MusicIns_TestMe
(1)  276/    1DE8 : 00 00 00 00         		dw 0,0
(1)  277/    1DEC : 00 00               		dw 0
(1)  278/    1DEE :                     
     142/    1DEE :                     CodeBank0_e:
     146/    1DEE :                     	
     147/    1DEE :                     ; ====================================================================
     148/    1DEE :                     ; DEFAULT BANK 1
     149/    1DEE :                     ; 4000-7FFFh
     150/    1DEE :                     ; ====================================================================
     151/    1DEE :                     		
     152/    1DEE :                     		align 4000h
     153/    4000 :                     DataBank0:
     154/    4000 :                     		include	"game/data.asm"
(1)    1/    4000 :                     ; ====================================================================
(1)    2/    4000 :                     ; ----------------------------------------------------------------
(1)    3/    4000 :                     ; 
(1)    4/    4000 :                     ; ----------------------------------------------------------------
(1)    5/    4000 :                     
(1)    6/    4000 : 47 41 4D 45 20 44   		db "GAME DATA GOES HERE"
                    41 54 41 20 47 4F 
                    45 53 20 48 45 52 
                    45 
(1)    7/    4013 :                     
(1)    8/    4013 :                     
(1)    9/    4013 :                     
     155/    4013 :                     		include	"game/sound/data.asm"
(1)    1/    4013 :                     ; ================================================================
(1)    2/    4013 :                     ; ------------------------------------------------------------
(1)    3/    4013 :                     ; DATA SECTION
(1)    4/    4013 :                     ; 
(1)    5/    4013 :                     ; SOUND
(1)    6/    4013 :                     ; ------------------------------------------------------------
(1)    7/    4013 :                     
(1)    8/    4013 :                     ; TYPES:
(1)    9/    4013 :                     ;  -1 - ignore
(1)   10/    4013 :                     ;   0 - FM normal
(1)   11/    4013 :                     ;   1 - FM special
(1)   12/    4013 :                     ;   2 - FM sample
(1)   13/    4013 :                     ; $80 - PSG
(1)   14/    4013 :                     ; $E0 - PSG noise
(1)   15/    4013 :                     
(1)   16/    4013 : =0H                 insFM		equ 0
(1)   17/    4013 : =1H                 insFM3		equ 1
(1)   18/    4013 : =2H                 insFM6		equ 2
(1)   19/    4013 : =80H                insPSG		equ 80h
(1)   20/    4013 : =E0H                insPBass0	equ 0E0h
(1)   21/    4013 : =E1H                insPBass1	equ 0E1h
(1)   22/    4013 : =E2H                insPBass2	equ 0E2h
(1)   23/    4013 : =E3H                insPBass3	equ 0E3h		; Grabs PSG3 frequency
(1)   24/    4013 : =E4H                insPNoise0	equ 0E4h
(1)   25/    4013 : =E5H                insPNoise1	equ 0E5h
(1)   26/    4013 : =E6H                insPNoise2	equ 0E6h
(1)   27/    4013 : =E7H                insPNoise3	equ 0E7h		; Grabs PSG3 frequency
(1)   28/    4013 :                     
(1)   29/    4013 :                     instrSlot	macro TYPE,OPT,LABEL
(1)   30/    4013 :                     	if TYPE=-1
(1)   31/    4013 :                     		db -1,-1,-1,-1
(1)   32/    4013 :                     	else
(1)   33/    4013 :                     		db TYPE,OPT
(1)   34/    4013 :                     		dw LABEL
(1)   35/    4013 :                     	endif
(1)   36/    4013 :                     		endm
(1)   37/    4013 :                     
(1)   38/    4013 :                     ; ----------------------------------------------------
(1)   39/    4013 :                     ; Sound bank
(1)   40/    4013 :                     ; ----------------------------------------------------
(1)   41/    4013 :                     		
(1)   42/    4013 :                     ; MusicBlk_Sample:
(1)   43/    4013 :                     ; 		binclude "game/sound/music/musictrck_blk.bin"		; BLOCKS data
(1)   44/    4013 :                     ; MusicPat_Sample:
(1)   45/    4013 :                     ; 		binclude "game/sound/music/musictrck_patt.bin"		; PATTERN data
(1)   46/    4013 :                     ; Instruments staring from number 01
(1)   47/    4013 :                     ; MusicIns_Sample:
(1)   48/    4013 :                     ; 		instrSlot      insFM,0,FmIns_Piano_Small		; FM normal: type,pitch,regdata
(1)   49/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_OpenHat		; FM special (channel 3): type,pitch,regdata+exfreq
(1)   50/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_ClosedHat
(1)   51/    4013 :                     ; 		instrSlot     insFM6,0,.kick				; FM sample (channel 6): type,pitch,custompointer (see below)
(1)   52/    4013 :                     ; 		instrSlot     insFM6,0,.snare
(1)   53/    4013 :                     ; 		instrSlot     insPSG,0,PsgIns_00			; PSG (channels 1-3): type,pitch,envelope data
(1)   54/    4013 :                     ; 		instrSlot insPBass0,0,PsgIns_00				; PSG Noise (channels 1-3): type,pitch,envelope data
(1)   55/    4013 :                     ; 		instrSlot insPBass1,0,PsgIns_00
(1)   56/    4013 :                     ; 		instrSlot insPBass2,0,PsgIns_00
(1)   57/    4013 :                     ; 		instrSlot insPBass3,0,PsgIns_00				; If using bass/noise type 3, NOISE will grab the frequency from chnl 3
(1)   58/    4013 :                     ; 		instrSlot insPNoise0,0,PsgIns_00
(1)   59/    4013 :                     ; 		instrSlot insPNoise1,0,PsgIns_00
(1)   60/    4013 :                     ; 		instrSlot insPNoise2,0,PsgIns_00
(1)   61/    4013 :                     ; 		instrSlot insPNoise3,0,PsgIns_00
(1)   62/    4013 :                     ; if using insFM6 instruments:
(1)   63/    4013 :                     ; .kick:	instrSmpl 0,WavIns_Kick,WavIns_Kick_e,WavIns_Kick	; sample flags (ex. loop), START, END, LOOP
(1)   64/    4013 :                     ; .snare:	instrSmpl 0,WavIns_Snare,WavIns_Snare_e,WavIns_Snare
(1)   65/    4013 :                     
(1)   66/    4013 :                     ; ------------------------------------
(1)   67/    4013 :                     ; Track TESTME
(1)   68/    4013 :                     ; ------------------------------------
(1)   69/    4013 :                     
(1)   70/    4013 :                     MusicBlk_TestMe:
(1)   71/    4013 :                     		binclude "game/sound/music/lasttest_blk.bin"		; BLOCKS data
(1)   72/    4016 :                     MusicPat_TestMe:
(1)   73/    4016 :                     		binclude "game/sound/music/lasttest_patt.bin"		; PATTERN data
(1)   74/    427F :                     MusicIns_TestMe:
(1)   75/    427F : (MACRO)             		instrSlot -1
(1)   75/    427F : FF FF FF FF                         db -1,-1,-1,-1
(1)   76/    4283 : (MACRO)             		instrSlot -1
(1)   76/    4283 : FF FF FF FF                         db -1,-1,-1,-1
(1)   77/    4287 : (MACRO)             		instrSlot -1
(1)   77/    4287 : FF FF FF FF                         db -1,-1,-1,-1
(1)   78/    428B : (MACRO)             		instrSlot -1
(1)   78/    428B : FF FF FF FF                         db -1,-1,-1,-1
(1)   79/    428F : (MACRO)             		instrSlot -1
(1)   79/    428F : FF FF FF FF                         db -1,-1,-1,-1
(1)   80/    4293 : (MACRO)             		instrSlot     insPSG,0,PsgIns_00
(1)   80/    4293 : 80 00                               db INSPSG,0
(1)   80/    4295 : E1 08                               dw PSGINS_00
(1)   81/    4297 : (MACRO)             		instrSlot insPBass0,0,PsgIns_00
(1)   81/    4297 : E0 00                               db INSPBASS0,0
(1)   81/    4299 : E1 08                               dw PSGINS_00
(1)   82/    429B : (MACRO)             		instrSlot insPBass1,0,PsgIns_00
(1)   82/    429B : E1 00                               db INSPBASS1,0
(1)   82/    429D : E1 08                               dw PSGINS_00
(1)   83/    429F : (MACRO)             		instrSlot insPBass2,0,PsgIns_00
(1)   83/    429F : E2 00                               db INSPBASS2,0
(1)   83/    42A1 : E1 08                               dw PSGINS_00
(1)   84/    42A3 : (MACRO)             		instrSlot insPBass3,0,PsgIns_00
(1)   84/    42A3 : E3 00                               db INSPBASS3,0
(1)   84/    42A5 : E1 08                               dw PSGINS_00
(1)   85/    42A7 : (MACRO)             		instrSlot insPNoise0,0,PsgIns_00
(1)   85/    42A7 : E4 00                               db INSPNOISE0,0
(1)   85/    42A9 : E1 08                               dw PSGINS_00
(1)   86/    42AB : (MACRO)             		instrSlot insPNoise1,0,PsgIns_00
(1)   86/    42AB : E5 00                               db INSPNOISE1,0
(1)   86/    42AD : E1 08                               dw PSGINS_00
(1)   87/    42AF : (MACRO)             		instrSlot insPNoise2,0,PsgIns_00
(1)   87/    42AF : E6 00                               db INSPNOISE2,0
(1)   87/    42B1 : E1 08                               dw PSGINS_00
(1)   88/    42B3 : (MACRO)             		instrSlot insPNoise3,0,PsgIns_00
(1)   88/    42B3 : E7 00                               db INSPNOISE3,0
(1)   88/    42B5 : E1 08                               dw PSGINS_00
(1)   89/    42B7 :                     
(1)   90/    42B7 :                     ; ------------------------------------
(1)   91/    42B7 :                     ; Track Gigalo
(1)   92/    42B7 :                     ; ------------------------------------
(1)   93/    42B7 :                     
(1)   94/    42B7 :                     MusicBlk_Gigalo:
(1)   95/    42B7 :                     		binclude "game/sound/music/gigalo_psg_blk.bin"
(1)   96/    42C4 :                     MusicPat_Gigalo:
(1)   97/    42C4 :                     		binclude "game/sound/music/gigalo_psg_patt.bin"
(1)   98/    6220 :                     MusicIns_Gigalo:
(1)   99/    6220 : (MACRO)             		instrSlot     insPSG,0,PsgIns_01
(1)   99/    6220 : 80 00                               db INSPSG,0
(1)   99/    6222 : E3 08                               dw PSGINS_01
(1)  100/    6224 : (MACRO)             		instrSlot insPNoise0,0,PsgIns_01
(1)  100/    6224 : E4 00                               db INSPNOISE0,0
(1)  100/    6226 : E3 08                               dw PSGINS_01
(1)  101/    6228 : (MACRO)             		instrSlot insPNoise1,0,PsgIns_01
(1)  101/    6228 : E5 00                               db INSPNOISE1,0
(1)  101/    622A : E3 08                               dw PSGINS_01
(1)  102/    622C : (MACRO)             		instrSlot insPNoise2,0,PsgIns_01
(1)  102/    622C : E6 00                               db INSPNOISE2,0
(1)  102/    622E : E3 08                               dw PSGINS_01
(1)  103/    6230 :                     
     156/    6230 :                     DataBank0_e:
     160/    6230 :                     	
     161/    6230 :                     ; ============================================================
     162/    6230 :                     ; Header must be at the end of BANK 1
     163/    6230 :                     ; ============================================================
     164/    6230 :                     
     165/    6230 :                     		align 7FF0h			; Align up to 7FF0h (almost at the end of BANK 1)
     166/    7FF0 : 54 4D 52 20 53 45   		db "TMR SEGA  "			; TMR SEGA
                    47 41 20 20 
     167/    7FFA : 00 00               		dw 0				; Checksum (externally calculated)
     168/    7FFC : 00 00               		dw 0				; Serial
     169/    7FFE : 00                  		db 0				; Version
     170/    7FFF : 4C                  		db 4Ch				; ROM size: 32k
     171/    8000 :                     
     172/    8000 :                     ; ====================================================================
     173/    8000 :                     		
     174/    8000 :                     ROM_END:	align 8000h
     175/    8000 :                     
 AS V1.42 Beta [Bld 118] - source file main.asm - page 2 - 8/16/2019 1:31:15


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :                                        x86_64-unknown-linux - |
 ART_PRINTFONT :                B29 C |  ART_PRINTFONT_E :             1729 C |
 BANK_0 :                      FFFD - |  BANK_1 :                      FFFE - |
 BANK_2 :                      FFFF - |  BANK_CTRL :                   FFFC - |
*BIGENDIAN :                      0 - |  BITJOY1 :                        4 - |
 BITJOY2 :                        5 - |  BITJOYDOWN :                     1 - |
 BITJOYLEFT :                     2 - |  BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - |  BITJOYUP :                       0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
 CHNL_CHIP :                      0 - |  CHNL_EFFARG :                    6 - |
 CHNL_EFFID :                     5 - |  CHNL_EFNEWFREQ :                15 - |
 CHNL_EFNEWVOL :                 12 - |  CHNL_EFPORTAM :                 13 - |
 CHNL_EFVOLSLIDE :               11 - |  CHNL_FREQ :                      9 - |
 CHNL_INS :                       3 - |  CHNL_INSADDR :                   7 - |
 CHNL_INSOPT :                    C - |  CHNL_INSTYPE :                   B - |
 CHNL_NOTE :                      2 - |  CHNL_PSGINDX :                  10 - |
 CHNL_PSGOUTFREQ :               17 - |  CHNL_PSGPAN :                    D - |
 CHNL_PSGVOLBASE :                E - |  CHNL_PSGVOLENV :                 F - |
 CHNL_TYPE :                      1 - |  CHNL_VOL :                       4 - |
*CODEBANK0 :                   1C00 C | *CODEBANK0_E :                 1DEE C |
*CONSTPI :        3.141592653589793 - |  CONTROLLER_1 :                C24D - |
*CONTROLLER_2 :                C24F - |  CURR_NOISEMODE :              C148 C |
 CURR_PSGSTEREO :              C14A C |  CURR_SNDBANK :                C149 C |
 DATABANK0 :                   4000 C | *DATABANK0_E :                 6230 C |
*DATE :                   8/16/2019 - | *FALSE :                          0 - |
*FULLPMMU :                       1 - |  GG_EXT_BITDIR :                  2 - |
 GG_EXT_COMM :                    1 - |  GG_INFO :                        0 - |
 GG_SERIAL :                      5 - | *GG_SERIAL_IN :                   4 - |
*GG_SERIAL_OUT :                  3 - |  GG_STEREO :                      6 - |
 GLBL_LASTORG :                1C00 - |  GLBL_LASTPC :                 1C00 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSFM :                          0 - |
*INSFM3 :                         1 - | *INSFM6 :                         2 - |
 INSPBASS0 :                     E0 - |  INSPBASS1 :                     E1 - |
 INSPBASS2 :                     E2 - |  INSPBASS3 :                     E3 - |
 INSPNOISE0 :                    E4 - |  INSPNOISE1 :                    E5 - |
 INSPNOISE2 :                    E6 - |  INSPNOISE3 :                    E7 - |
 INSPSG :                        80 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - |  INT_EXIT :                      4B C |
*JOY1 :                          10 - | *JOY2 :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
 JOYPAD_1 :                      DC - |  JOYPAD_2 :                      DD - |
*JOYPAD_CTRL :                   3F - | *JOYRIGHT :                       8 - |
*JOYUP :                          1 - | *LISTON :                         3 - |
 LIST_VDPREGS :                 B1E C | *MACEXP :                         7 - |
 MAX_CHNLS :                      4 - |  MAX_MSERAM :                  1000 - |
 MAX_PRNTLIST :                  10 - | *MAX_TRACKS :                     2 - |
*MEMORY_CTRL :                   3E - | *MERCURY :                        0 - |
*MOMCPU :                        80 - | *MOMCPUNAME :                   Z80 - |
 MSRAM_START :                 C000 - |  MS_HINT :                       86 C |
 MS_INIT :                     1800 C |  MS_VINT :                       67 C |
 MUSICBLK_GIGALO :             42B7 C |  MUSICBLK_TESTME :             4013 C |
 MUSICINS_GIGALO :             6220 C |  MUSICINS_TESTME :             427F C |
 MUSICPAT_GIGALO :             42C4 C |  MUSICPAT_TESTME :             4016 C |
*NESTMAX :                      100 - |  ON_HOLD :                        0 C |
 ON_PRESS :                       1 C | *PACKING :                        0 - |
*PADDING :                        1 - |  PAL_FONTNEW :                 1D6E C |
 PAL_PRINTFONT :               1729 C | *PLYR_ANI_CNTR :                  6 C |
*PLYR_ANI_TIMER :                 5 C | *PLYR_FRAME :                     4 C |
*PLYR_X :                         0 C | *PLYR_Y :                         2 C |
 PSGFREQ_LIST :                 7EF C |  PSGINS_00 :                    8E1 C |
 PSGINS_01 :                    8E3 C | *PSGINS_02 :                    8E9 C |
*PSGINS_03 :                    8EC C | *PSGINS_04 :                    8F8 C |
 PSG_CTRL :                      7F - |  RAM_CURRPLYSLOT :             C257 C |
*RAM_CURRSPRX :                C24B C | *RAM_CURRSPRY :                C249 C |
 RAM_CURRTRCKID :              C258 C | *RAM_CURRTRCKVOL :             C25A C |
 RAM_CURRTRCKVOL.LOOP :        1C20 C |  RAM_CURRTRCKVOL.MODIFY_SLOT : 1C71 C |
 RAM_CURRTRCKVOL.MODIFY_TRACK :                                        1C6B C |
 RAM_CURRTRCKVOL.NOCENT :      1CD1 C |  RAM_CURRTRCKVOL.NO_A1 :       1D08 C |
 RAM_CURRTRCKVOL.NO_A2 :       1D1D C |  RAM_CURRTRCKVOL.PLAY_TRACK :  1C7B C |
 RAM_CURRTRCKVOL.SHOW_VALUES : 1C9C C |  RAM_CURRTRCKVOL.SLOT1NOAD :   1C3D C |
 RAM_CURRTRCKVOL.SLOT_1 :      1CA9 C |  RAM_CURRTRCKVOL.SLOT_2 :      1CC2 C |
 RAM_CURRTRCKVOL.STOP_TRACK :  1C96 C |  RAM_CURRTRCKVOL.THIS_VAL :    1CC5 C |
*RAM_GLBL_NULL :               D257 C |  RAM_GLOBAL :                  D257 C |
 RAM_HBLANK :                  C254 C |  RAM_INPUTDATA :               C24D C |
 RAM_LOCAL :                   C257 C |  RAM_MSSOUND :                 C000 C |
 RAM_MSSYSTEM :                C24D C |  RAM_MSVIDEO :                 C14C C |
*RAM_SPRTX :                   C1C9 C | *RAM_SPRTY :                   C189 C |
 RAM_VBLANK :                  C251 C |  RAM_VDPCACHE :                C17E C |
 RAM_VIDPRNTLIST :             C14C C |  RAM_VIDPRNTVRAM :             C17C C |
*RELAXED :                        0 - | *ROM_END :                     8000 C |
 SIZEOF_GLOBAL :               D258 C |  SIZEOF_GLOBAL.VINT :            48 C |
 SIZEOF_INPUT :                   2 C | *SIZEOF_MDRAM :                C005 C |
*SIZEOF_MSRAM :                D258 C |  SIZEOF_MSSND :                C14C C |
 SIZEOF_MSSYS :                C257 C |  SIZEOF_MSVID :                C24D C |
 SNDBUFF_CHNLBUFF_1 :          C040 C |  SNDBUFF_CHNLBUFF_2 :          C0C0 C |
 SNDBUFF_TRACK_1 :             C000 C |  SNDBUFF_TRACK_2 :             C020 C |
 SNDBUFF_USEDCHNLS :           C140 C |  SNDBUFF_USEDCHNLS_2 :         C144 C |
 SNDDRV_READTRACK :             11F C |  SNDDRV_READTRACK.CHIP_SETUP :  310 C |
 SNDDRV_READTRACK.CLRPANFIRST : 2D7 C |
 SNDDRV_READTRACK.DONTUPD_TRCK :                                        1A1 C |
 SNDDRV_READTRACK.DWN_EXFINE :  51F C |  SNDDRV_READTRACK.DWN_FINE :    52F C |
 SNDDRV_READTRACK.EFF_A :       4CF C |  SNDDRV_READTRACK.EFF_B :       4D7 C |
 SNDDRV_READTRACK.EFF_D :       4E7 C |  SNDDRV_READTRACK.EFF_E :       501 C |
 SNDDRV_READTRACK.EFF_F :       541 C |  SNDDRV_READTRACK.EFF_LIST :    499 C |
 SNDDRV_READTRACK.EFF_NULL :    498 C |  SNDDRV_READTRACK.EFF_X :       57A C |
*SNDDRV_READTRACK.EXIT_BUSY :   218 C |  SNDDRV_READTRACK.EXIT_NOTES :  217 C |
 SNDDRV_READTRACK.FM_NORMALCHNL :                                       421 C |
*SNDDRV_READTRACK.FM_TURNOFF :  5F1 C |  SNDDRV_READTRACK.FORCE_ON :    143 C |
 SNDDRV_READTRACK.FREQRN_FM :   5E0 C |  SNDDRV_READTRACK.FREQRN_NOT3 : 5D4 C |
 SNDDRV_READTRACK.FREQRN_PSG :  5E2 C |  SNDDRV_READTRACK.FREQRN_SMPL : 5E1 C |
*SNDDRV_READTRACK.GO_DOWN :     4F1 C |  SNDDRV_READTRACK.GO_UP :       4F7 C |
 SNDDRV_READTRACK.GRAB_INSTSLOT :                                       5AE C |
 SNDDRV_READTRACK.KEEP_CTRL :   1CF C |  SNDDRV_READTRACK.LAST_ENV :    2FB C |
 SNDDRV_READTRACK.LIST_DOEFF :  670 C |  SNDDRV_READTRACK.LOOP_ME :     1AC C |
 SNDDRV_READTRACK.LOWPRIOSET :  3C6 C |  SNDDRV_READTRACK.LOWUNLKSET :  42F C |
*SNDDRV_READTRACK.NEXT_PSG :    30F C |  SNDDRV_READTRACK.NOTYPE3 :     415 C |
 SNDDRV_READTRACK.NOT_NOISE :   28F C |  SNDDRV_READTRACK.NOT_NSE :     637 C |
 SNDDRV_READTRACK.NOT_NSE3 :    627 C |  SNDDRV_READTRACK.NOT_STEREO :  26C C |
 SNDDRV_READTRACK.NO_EFF :      1FB C |  SNDDRV_READTRACK.NO_INST :     1E4 C |
 SNDDRV_READTRACK.NO_MAX :      307 C |  SNDDRV_READTRACK.NO_NEWEFF :   37A C |
 SNDDRV_READTRACK.NO_NEWINST :  361 C |  SNDDRV_READTRACK.NO_NEWVOL :   3B9 C |
 SNDDRV_READTRACK.NO_NOTE :     1DB C |  SNDDRV_READTRACK.NO_NOTEREQ :  39D C |
 SNDDRV_READTRACK.NO_TONE3 :    252 C |  SNDDRV_READTRACK.NO_UPD_FREQ : 2B7 C |
 SNDDRV_READTRACK.NO_VOL :      1ED C |  SNDDRV_READTRACK.PNTOO_LOW :   604 C |
 SNDDRV_READTRACK.PNTOO_MUCH :  5FF C |  SNDDRV_READTRACK.PNTOPPSGV :   610 C |
 SNDDRV_READTRACK.PRTDWN_CONT : 540 C |  SNDDRV_READTRACK.PRTUP_CONT :  579 C |
 SNDDRV_READTRACK.PSGPAN_LIST : 5AA C |  SNDDRV_READTRACK.PSG_EF :      6DD C |
 SNDDRV_READTRACK.PSG_ENVLOPE : 26D C |  SNDDRV_READTRACK.PSG_INSTR :   34E C |
 SNDDRV_READTRACK.ROW_COUNTDWN :                                        21E C |
 SNDDRV_READTRACK.RUN_EFFECT :  657 C |
 SNDDRV_READTRACK.RUN_FREQUENCY :                                       5C4 C |
 SNDDRV_READTRACK.SEARCH_SLOT : 3DA C |
 SNDDRV_READTRACK.SETFM_SAMPLE :                                        444 C |
 SNDDRV_READTRACK.SETFREQ_PSG : 445 C |  SNDDRV_READTRACK.SETPSG_VOL :  6BA C |
 SNDDRV_READTRACK.SET_D :       6A6 C |  SNDDRV_READTRACK.SET_EFFECT :  47F C |
 SNDDRV_READTRACK.SET_E_F :     6C0 C |  SNDDRV_READTRACK.SET_FM_FREQ : 5F3 C |
 SNDDRV_READTRACK.SET_FM_INS :  5F2 C |  SNDDRV_READTRACK.SET_FM_VOL :  5F4 C |
 SNDDRV_READTRACK.SET_FREQUENCY :                                       405 C |
 SNDDRV_READTRACK.SET_PORTAM :  53A C |
 SNDDRV_READTRACK.SET_PSG_FREQ :                                        614 C |
 SNDDRV_READTRACK.SET_PSG_VOL : 5F6 C | *SNDDRV_READTRACK.SET_SAMPL :   5F5 C |
 SNDDRV_READTRACK.SET_STEREO :  256 C |  SNDDRV_READTRACK.SET_TIMER :   214 C |
 SNDDRV_READTRACK.SET_VOL :     30C C |  SNDDRV_READTRACK.SET_VOLUME :  3F7 C |
 SNDDRV_READTRACK.SET_X :       6FB C |  SNDDRV_READTRACK.SKIP_BLOCK :  208 C |
 SNDDRV_READTRACK.STOPSTRCHK :  5A6 C |  SNDDRV_READTRACK.STOP_TRACK :  20C C |
 SNDDRV_READTRACK.TOOLOW :      6F2 C |
*SNDDRV_READTRACK.TRCK_RESTART :                                        15C C |
 SNDDRV_READTRACK.UNLOCK_CHNL : 422 C |  SNDDRV_READTRACK.UP_EXFINE :   562 C |
 SNDDRV_READTRACK.UP_FINE :     56E C |  SNDDRV_READTRACK.USE_NEWEFF :  36E C |
 SNDDRV_READTRACK.USE_NEWINST : 326 C |  SNDDRV_READTRACK.USE_NEWVOL :  3AA C |
 SNDDRV_READTRACK.USE_NOTEREQ : 388 C |  SNDDRV_READTRACK.VOL_ISPSG :   401 C |
 SNDDRV_REQTRACK :              6FC C |  SNDDRV_REQTRACK.REQ01 :        71D C |
 SNDDRV_REQTRACK.REQ02 :        776 C |  SNDDRV_REQTRACK.REQ_LIST :     717 C |
 SNDDRV_RESETCHAN :             77A C |  SNDDRV_RESETCHAN.DONTVOLFM :   7E2 C |
 SNDDRV_RESETCHAN.FM_SHUT :     7E2 C |  SNDDRV_RESETCHAN.INITCHNLS :   798 C |
 SNDDRV_RESETCHAN.LOWPRIO :     787 C |  SNDDRV_RESETCHAN.NEXTTYPE :    78A C |
 SNDDRV_RESETCHAN.NXTFMCHNL :   7CC C |  SOUND_INIT :                    89 C |
 SOUND_INIT.NXTCHNL :            AD C |  SOUND_RUN :                     C1 C |
 SOUND_SETTRACK :                D8 C |  SOUND_SETTRACK.SFX_PRIO :       E4 C |
 SOUND_STOPTRACK :              112 C |  SOUND_STOPTRACK.SFX_PRIO :     11C C |
 STR_TEST :                    1D24 C |  SYSTEM_INIT :                 1749 C |
 SYSTEM_INIT.NOT_GG :          1768 C |  SYSTEM_INPUT :                1796 C |
 SYSTEM_INPUT.NO_GGSTRT :      17A8 C |  SYSTEM_VSYNC :                178E C |
*TIME :                     1:31:15 - |  TRACKDATA_TEST :              1DAE C |
 TRCK_ACTIVE :                   11 - |  TRCK_BLOCKCURR :                 E - |
 TRCK_BLOCKS :                   12 - |  TRCK_INSTR :                    16 - |
*TRCK_MASTERVOL :                 F - |  TRCK_PATTBASE :                 14 - |
 TRCK_PATTREAD :                 18 - |  TRCK_PRIORITY :                 10 - |
 TRCK_PSGNOISE :                  C - | *TRCK_PSGSTEREO :                20 - |
 TRCK_REQBLK :                    0 - | *TRCK_REQCHNLS :                  B - |
 TRCK_REQCURRBLK :                8 - |  TRCK_REQFLAG :                   A - |
 TRCK_REQINS :                    4 - |  TRCK_REQPATT :                   2 - |
 TRCK_REQSNDBNK :                 9 - |  TRCK_REQTEMPO :                  7 - |
 TRCK_REQTICKS :                  6 - |  TRCK_ROWSTEPS :                 1A - |
 TRCK_ROWWAIT :                  1E - |  TRCK_TEMPOBITS :                1D - |
 TRCK_TICKSCURR :                1F - |  TRCK_TICKSMAIN :                1C - |
 TRCK_TICKSREAD :                 D - | *TRUE :                           1 - |
*VARNULLVRAM :                  1FF - |  VDP_CTRL :                      BF - |
 VDP_DATA :                      BE - | *VDP_PALETTE :                 C000 - |
*VERSION :                     142F - |  VIDEO_CLEAR :                  951 C |
 VIDEO_CLEAR.CLRSCRN :          97A C |  VIDEO_CLEAR.MARK_MS :          95C C |
 VIDEO_CLEAR.PAL_CLR :          968 C |  VIDEO_INIT :                   8FE C |
 VIDEO_INIT.LOOP :              90B C |  VIDEO_INITPRINT :              918 C |
 VIDEO_LOADART :                9C1 C |  VIDEO_LOADART.LOOP :           9E0 C |
 VIDEO_LOADPAL :                984 C |  VIDEO_LOADPAL.LOOPMS :         9A3 C |
 VIDEO_LOADPAL.MARK_MS :        99B C |  VIDEO_PRINT :                  9E9 C |
 VIDEO_PRINT.BREQ :             A84 C |  VIDEO_PRINT.DO_NIBBL :         AF7 C |
 VIDEO_PRINT.ENDVAL :           AE8 C |  VIDEO_PRINT.EXIT :             AA0 C |
 VIDEO_PRINT.LOOP :             A23 C |  VIDEO_PRINT.LOOPVAL :          AA4 C |
 VIDEO_PRINT.NEXT :             A47 C |  VIDEO_PRINT.NOADD :            B04 C |
 VIDEO_PRINT.NOBYTE :           AC0 C |  VIDEO_PRINT.NOCENT :           9FE C |
 VIDEO_PRINT.NOWORD :           AD5 C |  VIDEO_PRINT.PUT_BYTE :         AEE C |
 VIDEO_PRINT.SPECIAL :          A55 C | *VIDEO_UPDATE :                 93F C |
 VIDEO_UPDATE.LOOP :            946 C | *V_COUNTER :                     7E - |

    358 symbols
     78 unused symbols

 AS V1.42 Beta [Bld 118] - source file main.asm - page 3 - 8/16/2019 1:31:15


  defined macros:
  ---------------

FINISH                                | INSTRSLOT                            
ROMPAD                                | STRUCT                               

      4 macros

 AS V1.42 Beta [Bld 118] - source file main.asm - page 4 - 8/16/2019 1:31:15


  defined functions:
  ------------------

LOCATE                                |

 AS V1.42 Beta [Bld 118] - source file main.asm - page 5 - 8/16/2019 1:31:15


  codepages:
  ----------

STANDARD (0 changed characters)


0.25 seconds assembly time

   3836 lines source file
   3992 lines incl. macro expansions
      6 passes
      0 errors
      0 warnings
