 AS V1.42 Beta [Bld 118] - source file main.asm - page 1 - 8/22/2019 19:19:08


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; SEGA MASTER SYSTEM GAME TEMPLATE
       4/       0 :                     ; +-----------------------------------------------------------------+
       5/       0 :                     
       6/       0 :                     		!org 0				; [AS] Start at 0
       7/       0 :                     		listing purecode		; [AS] Want listing file, but only the final code in expanded macros
       8/       0 :                     		supmode on 			; [AS] Supervisor mode
       9/       0 :                     		page 0				; [AS] Listing page 0
      10/       0 :                     		cpu Z80				; [AS] Current CPU is Z80
      11/       0 :                     		
      12/       0 :                     ; ====================================================================
      13/       0 :                     ; ----------------------------------------------------------------
      14/       0 :                     ; Include variables
      15/       0 :                     ; ----------------------------------------------------------------
      16/       0 :                     
      17/       0 :                     		include "system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; ---------------------------------------------
(1)    8/       0 :                     ; Functions
(1)    9/       0 :                     ; ---------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; example of function
(1)   12/       0 :                     locate		function b,c,(c&0FFh)|(b<<8&0FF00h)		; Layer,X pos,Y pos for some video routines
(1)   13/       0 :                     
(1)   14/       0 :                     ; ====================================================================
(1)   15/       0 :                     ; ---------------------------------------------
(1)   16/       0 :                     ; Macros
(1)   17/       0 :                     ; ---------------------------------------------
(1)   18/       0 :                     
(1)   19/       0 :                     ; -------------------------------------
(1)   20/       0 :                     ; Reserve memory space
(1)   21/       0 :                     ; -------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   24/       0 :                     GLBL_LASTPC	eval $
(1)   25/       0 :                     GLBL_LASTORG	eval $
(1)   26/       0 :                     		dephase
(1)   27/       0 :                     		phase thisinput
(1)   28/       0 :                     		endm
(1)   29/       0 :                     		
(1)   30/       0 :                     ; -------------------------------------
(1)   31/       0 :                     ; Finish reserve
(1)   32/       0 :                     ; -------------------------------------
(1)   33/       0 :                     
(1)   34/       0 :                     finish		macro				; Then finish
(1)   35/       0 :                     		!org GLBL_LASTORG
(1)   36/       0 :                     		phase GLBL_LASTPC
(1)   37/       0 :                     		endm
(1)   38/       0 :                     
(1)   39/       0 :                     ; -------------------------------------
(1)   40/       0 :                     ; ZERO Fill padding
(1)   41/       0 :                     ; 
(1)   42/       0 :                     ; if AS align doesn't work
(1)   43/       0 :                     ; -------------------------------------
(1)   44/       0 :                     
(1)   45/       0 :                     rompad		macro address			; Zero fill
(1)   46/       0 :                     diff := address - *
(1)   47/       0 :                     		if diff < 0
(1)   48/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   49/       0 :                     		else
(1)   50/       0 :                     			while diff > 1024
(1)   51/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   52/       0 :                     				dc.b [1024]0
(1)   53/       0 :                     diff := diff - 1024
(1)   54/       0 :                     			endm
(1)   55/       0 :                     			dc.b [diff]0
(1)   56/       0 :                     		endif
(1)   57/       0 :                     	endm
(1)   58/       0 :                     
(1)   59/       0 :                     ; ====================================================================
(1)   60/       0 :                     
      18/       0 :                     		include "system/const.asm"	; Variables and constants
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =C000H              MSRAM_START	equ	0C000h		; MS RAM Start
(1)    7/       0 : =1000H              MAX_MSERAM	equ	1000h		; Maximum temporal RAM for screen modes
(1)    8/       0 : =10H                MAX_PRNTLIST	equ	16		; Max print values
(1)    9/       0 :                     
(1)   10/       0 : =1FFH               varNullVram	equ	1FFh
(1)   11/       0 :                     
(1)   12/       0 :                     ; ====================================================================
(1)   13/       0 :                     ; ----------------------------------------------------------------
(1)   14/       0 :                     ; Variables
(1)   15/       0 :                     ; ----------------------------------------------------------------
(1)   16/       0 :                     
(1)   17/       0 :                     ; --------------------------------------------------------
(1)   18/       0 :                     ; System
(1)   19/       0 :                     ; --------------------------------------------------------
(1)   20/       0 :                     
(1)   21/       0 :                     ; ------------------------------------------------
(1)   22/       0 :                     ; Controller buttons
(1)   23/       0 :                     ; ------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 : =7H                 bitJoyStart	equ 7
(1)   26/       0 : =4H                 bitJoy1		equ 4
(1)   27/       0 : =5H                 bitJoy2		equ 5
(1)   28/       0 : =3H                 bitJoyRight	equ 3
(1)   29/       0 : =2H                 bitJoyLeft	equ 2
(1)   30/       0 : =1H                 bitJoyDown	equ 1
(1)   31/       0 : =0H                 bitJoyUp	equ 0
(1)   32/       0 :                     
(1)   33/       0 : =1H                 JoyUp		equ 01h
(1)   34/       0 : =2H                 JoyDown 	equ 02h
(1)   35/       0 : =4H                 JoyLeft		equ 04h
(1)   36/       0 : =8H                 JoyRight	equ 08h
(1)   37/       0 : =10H                Joy1		equ 10h
(1)   38/       0 : =20H                Joy2		equ 20h
(1)   39/       0 :                     
(1)   40/       0 :                     ; --------------------------------------------------------
(1)   41/       0 :                     ; Sound
(1)   42/       0 :                     ; --------------------------------------------------------
(1)   43/       0 :                     
(1)   44/       0 :                     ; settings
(1)   45/       0 : =4H                 MAX_CHNLS	equ 4
(1)   46/       0 : =2H                 MAX_TRACKS	equ 2
(1)   47/       0 :                     
(1)   48/       0 :                     ; Track structure
(1)   49/       0 : =0H                 trck_ReqBlk	equ 00h		; word
(1)   50/       0 : =2H                 trck_ReqPatt	equ 02h		; word
(1)   51/       0 : =4H                 trck_ReqIns	equ 04h		; word
(1)   52/       0 : =6H                 trck_ReqTicks	equ 06h
(1)   53/       0 : =7H                 trck_ReqTempo	equ 07h
(1)   54/       0 : =8H                 trck_ReqCurrBlk	equ 08h
(1)   55/       0 : =9H                 trck_ReqSndBnk	equ 09h
(1)   56/       0 : =AH                 trck_ReqFlag	equ 0Ah
(1)   57/       0 : =BH                 trck_ReqChnls	equ 0Bh
(1)   58/       0 : =CH                 trck_PsgNoise	equ 0Ch
(1)   59/       0 : =DH                 trck_TicksRead	equ 0Dh
(1)   60/       0 : =EH                 trck_BlockCurr	equ 0Eh
(1)   61/       0 : =FH                 trck_MasterVol	equ 0Fh
(1)   62/       0 : =10H                trck_Priority	equ 10h
(1)   63/       0 : =11H                trck_Active	equ 11h
(1)   64/       0 : =12H                trck_Blocks	equ 12h		; word
(1)   65/       0 : =14H                trck_PattBase	equ 14h		; word
(1)   66/       0 : =16H                trck_Instr	equ 16h		; word
(1)   67/       0 : =18H                trck_PattRead	equ 18h		; word
(1)   68/       0 : =1AH                trck_RowSteps	equ 1Ah		; word
(1)   69/       0 : =1CH                trck_TicksMain 	equ 1Ch
(1)   70/       0 : =1DH                trck_TempoBits	equ 1Dh
(1)   71/       0 : =1EH                trck_RowWait	equ 1Eh
(1)   72/       0 : =1FH                trck_TicksCurr	equ 1Fh
(1)   73/       0 : =20H                trck_PsgStereo	equ 20h
(1)   74/       0 : =21H                trck_Volume	equ 21h
(1)   75/       0 :                     
(1)   76/       0 :                     ; channel buffers
(1)   77/       0 : =0H                 chnl_Chip	equ 0
(1)   78/       0 : =1H                 chnl_Type	equ 1
(1)   79/       0 : =2H                 chnl_Note	equ 2
(1)   80/       0 : =3H                 chnl_Ins	equ 3
(1)   81/       0 : =4H                 chnl_Vol	equ 4
(1)   82/       0 : =5H                 chnl_EffId	equ 5
(1)   83/       0 : =6H                 chnl_EffArg	equ 6
(1)   84/       0 : =7H                 chnl_InsAddr	equ 7		; word
(1)   85/       0 : =9H                 chnl_Freq	equ 09h		; word
(1)   86/       0 : =BH                 chnl_InsType	equ 0Bh
(1)   87/       0 : =CH                 chnl_InsOpt	equ 0Ch
(1)   88/       0 : =DH                 chnl_PsgPan	equ 0Dh
(1)   89/       0 : =EH                 chnl_PsgVolBase	equ 0Eh
(1)   90/       0 : =FH                 chnl_PsgVolEnv	equ 0Fh
(1)   91/       0 : =10H                chnl_PsgIndx	equ 10h
(1)   92/       0 : =11H                chnl_EfVolSlide	equ 11h
(1)   93/       0 : =12H                chnl_EfNewVol	equ 12h
(1)   94/       0 : =13H                chnl_EfPortam	equ 13h		; word
(1)   95/       0 : =15H                chnl_EfNewFreq	equ 15h		; word
(1)   96/       0 : =17H                chnl_PsgOutFreq	equ 17h		; word
(1)   97/       0 :                     
(1)   98/       0 :                     ; ====================================================================
(1)   99/       0 :                     ; ----------------------------------------------------------------
(1)  100/       0 :                     ; Alias
(1)  101/       0 :                     ; ----------------------------------------------------------------
(1)  102/       0 :                     
(1)  103/       0 : =C24DH              Controller_1	equ RAM_InputData
(1)  104/       0 : =C24FH              Controller_2	equ RAM_InputData+sizeof_input
(1)  105/       0 :                     
(1)  106/       0 : =C000H              VDP_PALETTE	equ 0C000h				; Palette
(1)  107/       0 :                     
(1)  108/       0 :                     ; ====================================================================
(1)  109/       0 :                     ; ----------------------------------------------------------------
(1)  110/       0 :                     ; Structures
(1)  111/       0 :                     ; ----------------------------------------------------------------
(1)  112/       0 :                     
(1)  113/       0 :                     ; Controller
(1)  114/       0 : (MACRO)             		struct 0
(1)  114/       0 : =0H                 GLBL_LASTPC     eval $
(1)  114/       0 : =0H                 GLBL_LASTORG    eval $
(1)  114/       0 :                                     dephase
(1)  114/       0 :                                     phase 0
(1)  115/       0 :                     on_hold		ds 1
(1)  116/       1 :                     on_press	ds 1
(1)  117/       2 :                     sizeof_input	ds 1
(1)  118/       3 : (MACRO)             		finish
(1)  118/       0 :                                     !org GLBL_LASTORG
(1)  118/       0 :                                     phase GLBL_LASTPC
(1)  119/       0 :                     
(1)  120/       0 :                     ; ====================================================================
(1)  121/       0 :                     ; ----------------------------------------------------------------
(1)  122/       0 :                     ; Master System RAM
(1)  123/       0 :                     ;
(1)  124/       0 :                     ; Note: 0DFFCh-0DFFFh (0FFFCh-0FFFFh)
(1)  125/       0 :                     ; is reserved for bankswitch
(1)  126/       0 :                     ; ----------------------------------------------------------------
(1)  127/       0 :                     
(1)  128/       0 :                     ; This looks bad but it works as intended
(1)  129/       0 :                     
(1)  130/       0 :                     	; First pass, empty sizes
(1)  131/       0 : (MACRO)             		struct MSRAM_START		; Set struct at start of our base RAM
(1)  131/       0 : =0H                 GLBL_LASTPC     eval $
(1)  131/       0 : =0H                 GLBL_LASTORG    eval $
(1)  131/       0 :                                     dephase
(1)  131/    C000 :                                     phase MSRAM_START
(1)  140/    C000 :                     	
(1)  141/    C000 :                     	; Second pass, sizes are set
(1)  142/    C000 :                     RAM_MsSound	ds sizeof_mssnd-RAM_MsSound
(1)  143/    C14C :                     RAM_MsVideo	ds sizeof_msvid-RAM_MsVideo
(1)  144/    C24D :                     RAM_MsSystem	ds sizeof_mssys-RAM_MsSystem
(1)  145/    C257 :                     RAM_Local	ds MAX_MSERAM
(1)  146/    D257 :                     RAM_Global	ds sizeof_global-RAM_Global
(1)  147/    D258 :                     sizeof_msram	ds 1
(1)  149/    D259 :                     	
(1)  150/    D259 :                     	; --------------------------------
(1)  151/    D259 :                     	; Report RAM usage
(1)  152/    D259 :                     	; on pass 7
(1)  156/    D259 : (MACRO)             		finish
(1)  156/    C000 :                                     !org GLBL_LASTORG
(1)  156/       0 :                                     phase GLBL_LASTPC
(1)  157/       0 :                     
(1)  158/       0 :                     ; ====================================================================
(1)  159/       0 :                     ; ----------------------------------------------------------------
(1)  160/       0 :                     ; System RAM
(1)  161/       0 :                     ; ----------------------------------------------------------------
(1)  162/       0 :                     
(1)  163/       0 : (MACRO)             		struct RAM_MsSystem
(1)  163/       0 : =0H                 GLBL_LASTPC     eval $
(1)  163/       0 : =0H                 GLBL_LASTORG    eval $
(1)  163/       0 :                                     dephase
(1)  163/    C24D :                                     phase RAM_MSSYSTEM
(1)  164/    C24D :                     RAM_InputData	ds sizeof_input*2		; 2 controller buffers
(1)  165/    C251 :                     RAM_VBlank	ds 3
(1)  166/    C254 :                     RAM_HBlank	ds 3
(1)  167/    C257 :                     sizeof_mssys	ds 1
(1)  168/    C258 : (MACRO)             		finish
(1)  168/    C24D :                                     !org GLBL_LASTORG
(1)  168/       0 :                                     phase GLBL_LASTPC
(1)  169/       0 :                     
(1)  170/       0 :                     ; ====================================================================
(1)  171/       0 :                     ; ----------------------------------------------------------------
(1)  172/       0 :                     ; Video cache RAM
(1)  173/       0 :                     ; ----------------------------------------------------------------
(1)  174/       0 :                     
(1)  175/       0 : (MACRO)             		struct RAM_MsVideo
(1)  175/       0 : =0H                 GLBL_LASTPC     eval $
(1)  175/       0 : =0H                 GLBL_LASTORG    eval $
(1)  175/       0 :                                     dephase
(1)  175/    C14C :                                     phase RAM_MSVIDEO
(1)  176/    C14C :                     RAM_VidPrntList	ds MAX_PRNTLIST*3		; VDP address (WORD), type (BYTE)
(1)  177/    C17C :                     RAM_VidPrntVram	ds 2				; Current VRAM address for the Print routines
(1)  178/    C17E :                     RAM_VdpCache	ds 11
(1)  179/    C189 :                     RAM_SprtY	ds 64				; Y list
(1)  180/    C1C9 :                     RAM_SprtX	ds 64*2				; X list + char
(1)  181/    C249 :                     RAM_CurrSprY	ds 2
(1)  182/    C24B :                     RAM_CurrSprX	ds 2
(1)  183/    C24D :                     sizeof_msvid	ds 1
(1)  184/    C24E : (MACRO)             		finish
(1)  184/    C14C :                                     !org GLBL_LASTORG
(1)  184/       0 :                                     phase GLBL_LASTPC
(1)  185/       0 :                     		
(1)  186/       0 :                     ; ====================================================================
(1)  187/       0 :                     ; ----------------------------------------------------------------
(1)  188/       0 :                     ; Sound buffer RAM
(1)  189/       0 :                     ; ----------------------------------------------------------------
(1)  190/       0 :                     
(1)  191/       0 : (MACRO)             			struct RAM_MsSound
(1)  191/       0 : =0H                 GLBL_LASTPC     eval $
(1)  191/       0 : =0H                 GLBL_LASTORG    eval $
(1)  191/       0 :                                     dephase
(1)  191/    C000 :                                     phase RAM_MSSOUND
(1)  192/    C000 :                     SndBuff_Track_1		ds 20h
(1)  193/    C020 :                     SndBuff_Track_2		ds 20h
(1)  194/    C040 :                     SndBuff_ChnlBuff_1	ds 20h*MAX_CHNLS
(1)  195/    C0C0 :                     SndBuff_ChnlBuff_2	ds 20h*MAX_CHNLS
(1)  196/    C140 :                     SndBuff_UsedChnls	ds MAX_CHNLS
(1)  197/    C144 :                     SndBuff_UsedChnls_2	ds MAX_CHNLS
(1)  198/    C148 :                     curr_NoiseMode		ds 1
(1)  199/    C149 :                     curr_SndBank		ds 1
(1)  200/    C14A : 01 00               curr_PsgStereo		dw 1			; Game gear only: current and past values
(1)  201/    C14C :                     sizeof_mssnd		ds 1
(1)  202/    C14D : (MACRO)             			finish
(1)  202/    C000 :                                     !org GLBL_LASTORG
(1)  202/       0 :                                     phase GLBL_LASTPC
(1)  203/       0 :                     
      19/       0 :                     		include "system/map.asm"	; Memory map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Memory map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; Banks are 4000h bytes long
(1)    7/       0 : =FFFCH              bank_ctrl	equ	0FFFCh
(1)    8/       0 : =FFFDH              bank_0		equ	0FFFDh		; First 1Kbytes (0000h-0400h) are locked to protect interrupts
(1)    9/       0 : =FFFEH              bank_1		equ	0FFFEh		;
(1)   10/       0 : =FFFFH              bank_2		equ	0FFFFh		; If bit 3 is set, Cartridge RAM will be mapped here instead.
(1)   11/       0 :                     
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     ; Ports
(1)   14/       0 :                     ; 
(1)   15/       0 :                     ; Remainder: only use these with IN and OUT
(1)   16/       0 :                     ; R - Read
(1)   17/       0 :                     ; W - Write
(1)   18/       0 :                     ; ----------------------------------------------------------------
(1)   19/       0 :                     
(1)   20/       0 : =3EH                memory_ctrl	equ	03Eh		; 
(1)   21/       0 : =3FH                joypad_ctrl	equ	03Fh		; R  | 
(1)   22/       0 : =7EH                v_counter	equ	07Eh
(1)   23/       0 : =7FH                psg_ctrl	equ	07Fh		; RW | if WRITE: psg register | if READ: h_counter
(1)   24/       0 : =BEH                vdp_data	equ	0BEh
(1)   25/       0 : =BFH                vdp_ctrl	equ	0BFh
(1)   26/       0 : =DCH                joypad_1	equ	0DCh
(1)   27/       0 : =DDH                joypad_2	equ	0DDh
(1)   28/       0 :                     
(1)   29/       0 :                     ; ------------------------------------------------
(1)   30/       0 :                     ; GAME GEAR ONLY
(1)   31/       0 :                     ; on Master System they probably just return -1
(1)   32/       0 :                     ; ------------------------------------------------
(1)   33/       0 :                     
(1)   34/       0 : =0H                 gg_info		equ	00h		; R  | SRN00000b (S-GG Start button | R-Region | N-NTSC/PAL)
(1)   35/       0 : =1H                 gg_ext_comm	equ	01h		; RW | EXT data if 7-bit mode is set
(1)   36/       0 : =2H                 gg_ext_bitdir	equ	02h		; RW | EXT data directions
(1)   37/       0 : =3H                 gg_serial_out	equ	03h		; RW | Serial data SEND port
(1)   38/       0 : =4H                 gg_serial_in	equ	04h		; R  | Serial data RECIEVE port
(1)   39/       0 : =5H                 gg_serial	equ	05h		; RW | Serial settings
(1)   40/       0 : =6H                 gg_stereo	equ	06h		;  W | PSG Stereo bits, set 0FFh if using Game Gear
(1)   41/       0 :                     
      20/       0 :                     		include "game/global.asm"	; Global variables and RAM
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Put your global structs/values here
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; --------------------------------------------------------
(1)    8/       0 :                     ; Structures
(1)    9/       0 :                     ; --------------------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; ====================================================================
(1)   12/       0 :                     ; --------------------------------------------------------
(1)   13/       0 :                     ; RAM
(1)   14/       0 :                     ; --------------------------------------------------------
(1)   15/       0 :                     
(1)   16/       0 : (MACRO)             		struct RAM_Global
(1)   16/       0 : =0H                 GLBL_LASTPC     eval $
(1)   16/       0 : =0H                 GLBL_LASTORG    eval $
(1)   16/       0 :                                     dephase
(1)   16/    D257 :                                     phase RAM_GLOBAL
(1)   17/    D257 :                     RAM_Glbl_Null	ds 1
(1)   18/    D258 :                     sizeof_global	ds 1
(1)   19/    D259 : (MACRO)             		finish
(1)   19/    D257 :                                     !org GLBL_LASTORG
(1)   19/       0 :                                     phase GLBL_LASTPC
(1)   20/       0 :                     		
(1)   21/       0 :                     
      21/       0 :                     
      22/       0 :                     ; ====================================================================
      23/       0 :                     ; DEFAULT BANK 0
      24/       0 :                     ; 0000-3FFFh
      25/       0 :                     ; 
      26/       0 :                     ; (0000-0400h is unaffected)
      27/       0 :                     ; ====================================================================
      28/       0 :                     
      29/       0 : F3                  		di				; Disable interrupts
      30/       1 : ED 56               		im	1			; Interrput mode 1 (standard)
      31/       3 : C3 00 18            		jp	MS_Init			; Go to MS_Init
      32/       6 :                     
      33/       6 :                     ; ====================================================================
      34/       6 :                     ; ----------------------------------------------------------------
      35/       6 :                     ; RST routines will go here (starting at 0008h)
      36/       6 :                     ; 
      37/       6 :                     ; aligned by 8
      38/       6 :                     ; ----------------------------------------------------------------
      39/       6 :                     
      40/       6 :                     		align 8
      41/       8 :                     
      42/       8 :                     ; ====================================================================
      43/       8 :                     ; ----------------------------------------------------------------
      44/       8 :                     ; VBlank and HBlank
      45/       8 :                     ; 
      46/       8 :                     ; located at 38h
      47/       8 :                     ; ----------------------------------------------------------------
      48/       8 :                     
      49/       8 :                     		align 38h
      50/      38 : F3                  		di
      51/      39 : F5                  		push	af
      52/      3A : DB BF               		in	a,(vdp_ctrl)
      53/      3C : 07                  		rlca
      54/      3D : DA 48 00            		jp	c,.vint
      55/      40 : F6 80               		or	80h
      56/      42 : C2 48 00            		jp	nz,.vint
      57/      45 : C3 54 C2            		jp	(RAM_HBlank)
      58/      48 :                     .vint:
      59/      48 : C3 51 C2            		jp	(RAM_VBlank)
      60/      4B :                     Int_Exit:
      61/      4B : F1                  		pop	af
      62/      4C : FB                  		ei
      63/      4D : C9                  		ret
      64/      4E :                     
      65/      4E :                     ; ====================================================================
      66/      4E :                     ; ----------------------------------------------------------------
      67/      4E :                     ; Master System PAUSE Button interrupt
      68/      4E :                     ; 
      69/      4E :                     ; at address 0066h
      70/      4E :                     ; ----------------------------------------------------------------
      71/      4E :                     
      72/      4E :                     		align 66h
      73/      66 : C9                  		ret
      74/      67 :                     
      75/      67 :                     ; ====================================================================
      76/      67 :                     ; ----------------------------------------------------------------
      77/      67 :                     ; Default VBlank
      78/      67 :                     ; ----------------------------------------------------------------
      79/      67 :                     
      80/      67 :                     MS_VInt:
      81/      67 : DD E5               		push	ix
      82/      69 : FD E5               		push	iy
      83/      6B : C5                  		push	bc
      84/      6C : D5                  		push	de
      85/      6D : E5                  		push	hl
      86/      6E : D9                  		exx
      87/      6F : C5                  		push	bc
      88/      70 : D5                  		push	de
      89/      71 : E5                  		push	hl
      90/      72 :                     		
      91/      72 : CD AC 17            		call	System_Input
      92/      75 : CD C1 00            		call	Sound_Run
      93/      78 :                     
      94/      78 : E1                  		pop	hl
      95/      79 : D1                  		pop	de
      96/      7A : C1                  		pop	bc
      97/      7B : D9                  		exx
      98/      7C : E1                  		pop	hl
      99/      7D : D1                  		pop	de
     100/      7E : C1                  		pop	bc
     101/      7F : FD E1               		pop	iy
     102/      81 : DD E1               		pop	ix
     103/      83 : C3 4B 00            		jp	Int_Exit
     104/      86 :                     		
     105/      86 :                     ; ====================================================================
     106/      86 :                     ; ----------------------------------------------------------------
     107/      86 :                     ; Default HBlank
     108/      86 :                     ; ----------------------------------------------------------------
     109/      86 :                     
     110/      86 :                     MS_HInt:
     111/      86 : C3 4B 00            		jp	Int_Exit
     112/      89 :                     
     113/      89 :                     ; ====================================================================
     114/      89 :                     ; ----------------------------------------------------------------
     115/      89 :                     ; System functions
     116/      89 :                     ; ----------------------------------------------------------------
     117/      89 :                     
     118/      89 :                     		include "system/sound.asm"	; Sound
(1)    1/      89 :                     ; ====================================================================
(1)    2/      89 :                     ; ----------------------------------------------------------------
(1)    3/      89 :                     ; Sound
(1)    4/      89 :                     ; ----------------------------------------------------------------
(1)    5/      89 :                     
(1)    6/      89 :                     ; ============================================================
(1)    7/      89 :                     ; --------------------------------------------------------
(1)    8/      89 :                     ; Init Sound
(1)    9/      89 :                     ; --------------------------------------------------------
(1)   10/      89 :                     
(1)   11/      89 :                     Sound_Init:
(1)   12/      89 : 3E 9F               		ld	a,09Fh
(1)   13/      8B : D3 7F               		out	(psg_ctrl),a			; Set PSG1 Volume to OFF
(1)   14/      8D : 3E BF               		ld	a,0BFh
(1)   15/      8F : D3 7F               		out	(psg_ctrl),a			; Set PSG2 Volume to OFF
(1)   16/      91 : 3E DF               		ld	a,0DFh
(1)   17/      93 : D3 7F               		out	(psg_ctrl),a			; Set PSG3 Volume to OFF
(1)   18/      95 : 3E FF               		ld	a,0FFh
(1)   19/      97 : D3 7F               		out	(psg_ctrl),a			; Set NOISE Volume to OFF
(1)   20/      99 :                     		; YM silence goes here
(1)   21/      99 :                     	
(1)   22/      99 :                     	; Set LOW priority to the BGM track buffer
(1)   23/      99 : 3E 01               		ld	a,1
(1)   24/      9B : 32 30 C0            		ld	(SndBuff_Track_2+trck_Priority),a
(1)   25/      9E :                     		
(1)   26/      9E :                     	; Init the first 4 channels as PSG
(1)   27/      9E : DD 21 40 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   28/      A2 : FD 21 C0 C0         		ld	iy,SndBuff_ChnlBuff_2
(1)   29/      A6 : 06 04               		ld	b,4
(1)   30/      A8 : 11 20 00            		ld	de,20h
(1)   31/      AB : 3E 80               		ld	a,80h
(1)   32/      AD :                     .nxtchnl:
(1)   33/      AD : DD 77 00            		ld	(ix+chnl_Chip),a
(1)   34/      B0 : FD 77 00            		ld	(iy+chnl_Chip),a
(1)   35/      B3 : C6 20               		add 	a,20h
(1)   36/      B5 : DD 19               		add 	ix,de
(1)   37/      B7 : FD 19               		add 	iy,de
(1)   38/      B9 : 10 F2               		djnz	.nxtchnl
(1)   39/      BB : 3E FF               		ld	a,-1
(1)   40/      BD : 32 4A C1            		ld	(curr_PsgStereo),a
(1)   41/      C0 :                     
(1)   42/      C0 :                     	; FM regs go here
(1)   43/      C0 : C9                  		ret
(1)   44/      C1 :                     
(1)   45/      C1 :                     ; ============================================================
(1)   46/      C1 :                     ; --------------------------------------------------------
(1)   47/      C1 :                     ; Init Sound
(1)   48/      C1 :                     ; --------------------------------------------------------
(1)   49/      C1 :                     
(1)   50/      C1 :                     Sound_Run:
(1)   51/      C1 :                     ; 		ld	a,(curr_SndBank)		; TODO: set bankswitch
(1)   52/      C1 :                     ; 		rst 	8
(1)   53/      C1 : FD 21 00 C0         		ld	iy,SndBuff_Track_1
(1)   54/      C5 : DD 21 40 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   55/      C9 : CD 2F 01            		call	SndDrv_ReadTrack
(1)   56/      CC : FD 21 20 C0         		ld	iy,SndBuff_Track_2
(1)   57/      D0 : DD 21 C0 C0         		ld	ix,SndBuff_ChnlBuff_2
(1)   58/      D4 : C3 2F 01            		jp	SndDrv_ReadTrack
(1)   59/      D7 :                     ; 		ld	a,(curr_SndBank)		; TODO: return bankswitch
(1)   60/      D7 :                     ; 		rst 	8
(1)   61/      D7 : C9                  		ret
(1)   62/      D8 :                     
(1)   63/      D8 :                     ; ===================================================================
(1)   64/      D8 :                     ; ----------------------------------------------------
(1)   65/      D8 :                     ; Subs
(1)   66/      D8 :                     ; ----------------------------------------------------
(1)   67/      D8 :                     
(1)   68/      D8 :                     ; --------------------------------------------------------
(1)   69/      D8 :                     ; Sound_SetTrack
(1)   70/      D8 :                     ; 
(1)   71/      D8 :                     ; Input:
(1)   72/      D8 :                     ; hl | Track data array:
(1)   73/      D8 :                     ; 		dw blocks
(1)   74/      D8 :                     ;		dw pattern
(1)   75/      D8 :                     ;		dw instruments
(1)   76/      D8 :                     ;		
(1)   77/      D8 :                     ;  a | Track slot
(1)   78/      D8 :                     ;  b | Music bank
(1)   79/      D8 :                     ;  c | Block start
(1)   80/      D8 :                     ;  d | Tempo bits
(1)   81/      D8 :                     ;  e | Ticks
(1)   82/      D8 :                     ; --------------------------------------------------------
(1)   83/      D8 :                     
(1)   84/      D8 :                     Sound_SetTrack:
(1)   85/      D8 : FD 21 00 C0         		ld	iy,SndBuff_Track_1
(1)   86/      DC : B7                  		or	a
(1)   87/      DD : CA E4 00            		jp	z,.sfx_prio
(1)   88/      E0 : FD 21 20 C0         		ld	iy,SndBuff_Track_2
(1)   89/      E4 :                     .sfx_prio:
(1)   90/      E4 : FD 70 09            		ld	(iy+trck_ReqSndBnk),b
(1)   91/      E7 : FD 71 08            		ld	(iy+trck_ReqCurrBlk),c
(1)   92/      EA : FD 72 07            		ld	(iy+trck_ReqTempo),d
(1)   93/      ED : FD 73 06            		ld	(iy+trck_ReqTicks),e
(1)   94/      F0 :                     
(1)   95/      F0 : 7E                  		ld	a,(hl)
(1)   96/      F1 : FD 77 00            		ld	(iy+trck_ReqBlk),a
(1)   97/      F4 : 23                  		inc 	hl
(1)   98/      F5 : 7E                  		ld	a,(hl)
(1)   99/      F6 : FD 77 01            		ld	(iy+(trck_ReqBlk+1)),a
(1)  100/      F9 : 23                  		inc 	hl
(1)  101/      FA :                     
(1)  102/      FA : 7E                  		ld	a,(hl)
(1)  103/      FB : FD 77 02            		ld	(iy+trck_ReqPatt),a
(1)  104/      FE : 23                  		inc 	hl
(1)  105/      FF : 7E                  		ld	a,(hl)
(1)  106/     100 : FD 77 03            		ld	(iy+(trck_ReqPatt+1)),a
(1)  107/     103 : 23                  		inc 	hl
(1)  108/     104 :                     		
(1)  109/     104 : 7E                  		ld	a,(hl)
(1)  110/     105 : FD 77 04            		ld	(iy+trck_ReqIns),a
(1)  111/     108 : 23                  		inc 	hl
(1)  112/     109 : 7E                  		ld	a,(hl)
(1)  113/     10A : FD 77 05            		ld	(iy+(trck_ReqIns+1)),a
(1)  114/     10D :                     
(1)  115/     10D : FD 36 0A 01         		ld	(iy+trck_ReqFlag),1		; Request $01, set and play song
(1)  116/     111 : C9                  		ret
(1)  117/     112 :                     	
(1)  118/     112 :                     ; --------------------------------------------------------
(1)  119/     112 :                     ; Sound_SetVolume
(1)  120/     112 :                     ; 
(1)  121/     112 :                     ; Input:
(1)  122/     112 :                     ;  a | Track slot
(1)  123/     112 :                     ;  c | Sound volume
(1)  124/     112 :                     ; --------------------------------------------------------
(1)  125/     112 :                     
(1)  126/     112 :                     Sound_SetVolume:
(1)  127/     112 : FD 21 00 C0         		ld	iy,SndBuff_Track_1
(1)  128/     116 : B7                  		or	a
(1)  129/     117 : CA 1E 01            		jp	z,.sfx_prio
(1)  130/     11A : FD 21 20 C0         		ld	iy,SndBuff_Track_2
(1)  131/     11E :                     .sfx_prio:
(1)  132/     11E : FD 71 21            		ld	(iy+trck_Volume),c
(1)  133/     121 : C9                  		ret
(1)  134/     122 :                     		
(1)  135/     122 :                     ; --------------------------------------------------------
(1)  136/     122 :                     ; Sound_Stop
(1)  137/     122 :                     ; 
(1)  138/     122 :                     ; Input:
(1)  139/     122 :                     ;  a | Track slot
(1)  140/     122 :                     ; --------------------------------------------------------
(1)  141/     122 :                     
(1)  142/     122 :                     Sound_StopTrack:
(1)  143/     122 : 21 0A C0            		ld	hl,SndBuff_Track_1+trck_ReqFlag
(1)  144/     125 : B7                  		or	a
(1)  145/     126 : CA 2C 01            		jp	z,.sfx_prio
(1)  146/     129 : 21 2A C0            		ld	hl,SndBuff_Track_2+trck_ReqFlag
(1)  147/     12C :                     .sfx_prio:
(1)  148/     12C : 36 02               		ld	(hl),2		; Request $02
(1)  149/     12E : C9                  		ret
(1)  150/     12F :                     
(1)  151/     12F :                     ; ===================================================================
(1)  152/     12F :                     ; ------------------------------------
(1)  153/     12F :                     ; Read track
(1)  154/     12F :                     ; 
(1)  155/     12F :                     ; iy - Pattern buffer
(1)  156/     12F :                     ; ix - Channel list
(1)  157/     12F :                     ; ------------------------------------
(1)  158/     12F :                     
(1)  159/     12F :                     SndDrv_ReadTrack:
(1)  160/     12F : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1)  161/     132 : B7                  		or	a
(1)  162/     133 : C4 12 07            		call	nz,SndDrv_ReqTrack
(1)  163/     136 : FD 7E 11            		ld	a,(iy+trck_Active)
(1)  164/     139 : B7                  		or	a
(1)  165/     13A : C8                  		ret	z
(1)  166/     13B :                     
(1)  167/     13B : FD 7E 1D            		ld	a,(iy+trck_TempoBits)
(1)  168/     13E : 0F                  		rrca
(1)  169/     13F : FD 77 1D            		ld	(iy+trck_TempoBits),a
(1)  170/     142 : DA 53 01            		jp	c,.force_on
(1)  171/     145 : FD 7E 0D            		ld	a,(iy+trck_TicksRead)
(1)  172/     148 : 3D                  		dec	a
(1)  173/     149 : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  174/     14C : F0                  		ret	p
(1)  175/     14D : FD 7E 1F            		ld	a,(iy+trck_TicksCurr)		; save Ticks
(1)  176/     150 : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  177/     153 :                     .force_on:
(1)  178/     153 : FD 7E 1E            		ld	a,(iy+trck_RowWait)		; row countdown
(1)  179/     156 : 3D                  		dec	a
(1)  180/     157 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  181/     15A : F2 2E 02            		jp	p,.row_countdwn
(1)  182/     15D : FD 36 1E 00         		ld	(iy+trck_RowWait),0
(1)  183/     161 :                     		
(1)  184/     161 :                     ; ------------------------------
(1)  185/     161 :                     ; check for new track data
(1)  186/     161 :                     ; ------------------------------
(1)  187/     161 :                     
(1)  188/     161 : FD 5E 1A            		ld	e,(iy+trck_RowSteps)		; Row finished?
(1)  189/     164 : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  190/     167 : 7B                  		ld	a,e
(1)  191/     168 : B2                  		or	d
(1)  192/     169 : C2 B1 01            		jp	nz,.dontupd_trck
(1)  193/     16C :                     .trck_restart:
(1)  194/     16C : 11 00 00            		ld	de,0
(1)  195/     16F : FD 5E 0E            		ld	e,(iy+trck_BlockCurr)
(1)  196/     172 : FD 6E 12            		ld	l,(iy+trck_Blocks)
(1)  197/     175 : FD 66 13            		ld	h,(iy+(trck_Blocks+1))
(1)  198/     178 : 4D                  		ld	c,l				; bc - copy of hl
(1)  199/     179 : 44                  		ld	b,h
(1)  200/     17A : 19                  		add 	hl,de
(1)  201/     17B : 7E                  		ld	a,(hl)
(1)  202/     17C : FE FE               		cp	0FEh
(1)  203/     17E : CC 18 02            		call	z,.skip_block
(1)  204/     181 : FE FF               		cp	0FFh				; End of song marker? 0FFh
(1)  205/     183 : CA 1C 02            		jp	z,.stop_track
(1)  206/     186 : 87                  		add 	a,a
(1)  207/     187 : 87                  		add 	a,a
(1)  208/     188 : 23                  		inc 	hl
(1)  209/     189 : FD 34 0E            		inc 	(iy+trck_BlockCurr)
(1)  210/     18C : 11 00 00            		ld	de,0
(1)  211/     18F : 5F                  		ld	e,a
(1)  212/     190 : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  213/     193 : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  214/     196 : 19                  		add 	hl,de
(1)  215/     197 : 4E                  		ld	c,(hl)
(1)  216/     198 : 23                  		inc 	hl
(1)  217/     199 : 46                  		ld	b,(hl)
(1)  218/     19A : 23                  		inc 	hl
(1)  219/     19B : 5E                  		ld	e,(hl)
(1)  220/     19C : 23                  		inc 	hl
(1)  221/     19D : 56                  		ld	d,(hl)
(1)  222/     19E : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  223/     1A1 : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  224/     1A4 : 09                  		add 	hl,bc
(1)  225/     1A5 : FD 75 18            		ld	(iy+trck_PattRead),l
(1)  226/     1A8 : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  227/     1AB : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  228/     1AE : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  229/     1B1 :                     .dontupd_trck:
(1)  230/     1B1 : FD 6E 18            		ld	l,(iy+trck_PattRead)		; Set last read point
(1)  231/     1B4 : FD 66 19            		ld	h,(iy+(trck_PattRead+1))
(1)  232/     1B7 :                     
(1)  233/     1B7 :                     ; ------------------------------
(1)  234/     1B7 :                     ; Check timer or note data
(1)  235/     1B7 :                     ; ------------------------------
(1)  236/     1B7 : 7E                  		ld	a,(hl)
(1)  237/     1B8 : B7                  		or	a
(1)  238/     1B9 : F2 24 02            		jp	p,.set_timer
(1)  239/     1BC :                     .loop_me:
(1)  240/     1BC : 23                  		inc	hl
(1)  241/     1BD : 4F                  		ld	c,a
(1)  242/     1BE : E6 3F               		and	00111111b
(1)  243/     1C0 : 11 00 00            		ld	de,0			; size 20h
(1)  244/     1C3 : 5F                  		ld	e,a
(1)  245/     1C4 : E6 18               		and	00011000b
(1)  246/     1C6 : 0F                  		rrca
(1)  247/     1C7 : 0F                  		rrca
(1)  248/     1C8 : 0F                  		rrca
(1)  249/     1C9 : 57                  		ld	d,a
(1)  250/     1CA : 7B                  		ld	a,e
(1)  251/     1CB : E6 07               		and	00000111b
(1)  252/     1CD : 0F                  		rrca
(1)  253/     1CE : 0F                  		rrca
(1)  254/     1CF : 0F                  		rrca
(1)  255/     1D0 : 5F                  		ld	e,a
(1)  256/     1D1 : DD E5               		push	ix			; Save channel buffer
(1)  257/     1D3 : DD 19               		add	ix,de
(1)  258/     1D5 : CB 71               		bit 	6,c
(1)  259/     1D7 : CA DF 01            		jp	z,.keep_ctrl
(1)  260/     1DA : 7E                  		ld	a,(hl)
(1)  261/     1DB : 23                  		inc	hl
(1)  262/     1DC : DD 77 01            		ld	(ix+chnl_Type),a
(1)  263/     1DF :                     .keep_ctrl:
(1)  264/     1DF : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  265/     1E2 : 0F                  		rrca
(1)  266/     1E3 : D2 EB 01            		jp	nc,.no_note
(1)  267/     1E6 : 4E                  		ld	c,(hl)			; Note
(1)  268/     1E7 : 23                  		inc 	hl
(1)  269/     1E8 : DD 71 02            		ld	(ix+chnl_Note),c
(1)  270/     1EB :                     .no_note:
(1)  271/     1EB : 0F                  		rrca				; Instrument
(1)  272/     1EC : D2 F4 01            		jp	nc,.no_inst
(1)  273/     1EF : 4E                  		ld	c,(hl)
(1)  274/     1F0 : 23                  		inc 	hl
(1)  275/     1F1 : DD 71 03            		ld	(ix+chnl_Ins),c
(1)  276/     1F4 :                     .no_inst:
(1)  277/     1F4 : 0F                  		rrca				; Volume
(1)  278/     1F5 : D2 FD 01            		jp	nc,.no_vol
(1)  279/     1F8 : 4E                  		ld	c,(hl)
(1)  280/     1F9 : 23                  		inc 	hl
(1)  281/     1FA : DD 71 04            		ld	(ix+chnl_Vol),c
(1)  282/     1FD :                     .no_vol:
(1)  283/     1FD : 0F                  		rrca				; Effect
(1)  284/     1FE : D2 0B 02            		jp	nc,.no_eff
(1)  285/     201 : 4E                  		ld	c,(hl)
(1)  286/     202 : 23                  		inc 	hl
(1)  287/     203 : DD 71 05            		ld	(ix+chnl_EffId),c
(1)  288/     206 : 4E                  		ld	c,(hl)
(1)  289/     207 : 23                  		inc 	hl
(1)  290/     208 : DD 71 06            		ld	(ix+chnl_EffArg),c
(1)  291/     20B :                     .no_eff:
(1)  292/     20B : CD 20 03            		call	.chip_setup
(1)  293/     20E : DD E1               		pop	ix			; Restore channel buffer
(1)  294/     210 : 7E                  		ld	a,(hl)
(1)  295/     211 : B7                  		or	a
(1)  296/     212 : CA 27 02            		jp	z,.exit_notes
(1)  297/     215 : C3 BC 01            		jp	.loop_me
(1)  298/     218 :                     		
(1)  299/     218 :                     ; ------------------------------
(1)  300/     218 :                     ; block 0FEh
(1)  301/     218 :                     ; skip block
(1)  302/     218 :                     ; ------------------------------
(1)  303/     218 :                     
(1)  304/     218 :                     ; TODO ver que es esto
(1)  305/     218 :                     ; en OpenMPT
(1)  306/     218 :                     .skip_block:
(1)  307/     218 : FD 34 0E            		inc	(iy+trck_BlockCurr)
(1)  308/     21B : C9                  		ret
(1)  309/     21C :                     		
(1)  310/     21C :                     ; ------------------------------
(1)  311/     21C :                     ; block 0FFh
(1)  312/     21C :                     ; end of tracks
(1)  313/     21C :                     ; ------------------------------
(1)  314/     21C :                     
(1)  315/     21C :                     .stop_track:
(1)  316/     21C : CD 90 07            		call	SndDrv_ResetChan
(1)  317/     21F : FD 36 11 00         		ld	(iy+trck_Active),0
(1)  318/     223 : C9                  		ret
(1)  319/     224 :                     
(1)  320/     224 :                     ; ------------------------------
(1)  321/     224 :                     ; Set ROW wait timer
(1)  322/     224 :                     ; 
(1)  323/     224 :                     ; if a = 00h-7Fh
(1)  324/     224 :                     ; ------------------------------
(1)  325/     224 :                     
(1)  326/     224 :                     .set_timer:
(1)  327/     224 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  328/     227 :                     
(1)  329/     227 :                     ; ------------------------------
(1)  330/     227 :                     ; Note pack exit
(1)  331/     227 :                     ; ------------------------------
(1)  332/     227 :                     
(1)  333/     227 :                     .exit_notes:
(1)  334/     227 : 23                  		inc 	hl
(1)  335/     228 :                     .exit_busy:
(1)  336/     228 : FD 75 18            		ld	(iy+trck_PattRead),l		; Save new read point
(1)  337/     22B : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  338/     22E :                     
(1)  339/     22E :                     ; ------------------------------
(1)  340/     22E :                     ; Decrement rows
(1)  341/     22E :                     ; ------------------------------
(1)  342/     22E :                     
(1)  343/     22E :                     .row_countdwn:
(1)  344/     22E : FD 5E 1A            		ld	e,(iy+trck_RowSteps)
(1)  345/     231 : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  346/     234 : 1B                  		dec 	de
(1)  347/     235 : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  348/     238 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  349/     23B :                     		
(1)  350/     23B :                     ; --------------------------------
(1)  351/     23B :                     ; Update PSG manually
(1)  352/     23B :                     ; --------------------------------
(1)  353/     23B :                     
(1)  354/     23B : CD 7D 02            		call	.psg_envlope
(1)  355/     23E : 11 20 00            		ld	de,20h
(1)  356/     241 : DD 19               		add 	ix,de
(1)  357/     243 : CD 7D 02            		call	.psg_envlope
(1)  358/     246 : 11 40 00            		ld	de,40h			; go to NOISE first
(1)  359/     249 : DD 19               		add 	ix,de
(1)  360/     24B : CD 7D 02            		call	.psg_envlope
(1)  361/     24E : 11 E0 FF            		ld	de,-20h			; back to PSG3
(1)  362/     251 : DD 19               		add 	ix,de
(1)  363/     253 :                     ; 		ld	a,(curr_NoiseMode)
(1)  364/     253 :                     ; 		and	00000011b
(1)  365/     253 :                     ; 		cp	3
(1)  366/     253 :                     ; 		jp	nz,.psg_envlope
(1)  367/     253 :                     ; 		ld	a,0DFh
(1)  368/     253 :                     ; 		out	(psg_ctrl),a
(1)  369/     253 :                     ; 		ret
(1)  370/     253 :                     
(1)  371/     253 : 3A 48 C1            		ld	a,(curr_NoiseMode)
(1)  372/     256 : E6 03               		and	00000011b
(1)  373/     258 : FE 03               		cp	3
(1)  374/     25A : CA 62 02            		jp	z,.no_tone3
(1)  375/     25D : CD 7D 02            		call	.psg_envlope
(1)  376/     260 : 18 04               		jr	.set_stereo
(1)  377/     262 :                     .no_tone3:
(1)  378/     262 : 3E DF               		ld	a,0DFh
(1)  379/     264 : D3 7F               		out	(psg_ctrl),a
(1)  380/     266 :                     .set_stereo:
(1)  381/     266 : DB 00               		in	a,(gg_info)
(1)  382/     268 : E6 1F               		and	1Fh
(1)  383/     26A : C0                  		ret	nz
(1)  384/     26B : 3A 4A C1            		ld	a,(curr_PsgStereo)
(1)  385/     26E : 4F                  		ld	c,a
(1)  386/     26F : 3A 4B C1            		ld	a,(curr_PsgStereo+1)
(1)  387/     272 : B9                  		cp	c
(1)  388/     273 : CA 7C 02            		jp	z,.not_stereo
(1)  389/     276 : 79                  		ld	a,c
(1)  390/     277 : 32 4B C1            		ld	(curr_PsgStereo+1),a
(1)  391/     27A : D3 06               		out	(gg_stereo),a
(1)  392/     27C :                     .not_stereo:
(1)  393/     27C : C9                  		ret
(1)  394/     27D :                     
(1)  395/     27D :                     ; --------------------------------
(1)  396/     27D :                     
(1)  397/     27D :                     .psg_envlope:
(1)  398/     27D : CD EA 03            		call	.search_slot
(1)  399/     280 : D8                  		ret	c
(1)  400/     281 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  401/     284 : B7                  		or	a
(1)  402/     285 : C8                  		ret	z
(1)  403/     286 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  404/     289 : 57                  		ld	d,a
(1)  405/     28A : FE E0               		cp	0E0h
(1)  406/     28C : C2 9F 02            		jp	nz,.not_noise
(1)  407/     28F : 3A 48 C1            		ld	a,(curr_NoiseMode)
(1)  408/     292 : FD 4E 0C            		ld	c,(iy+trck_PsgNoise)
(1)  409/     295 : B9                  		cp	c
(1)  410/     296 : CA 9F 02            		jp	z,.not_noise
(1)  411/     299 : 79                  		ld	a,c
(1)  412/     29A : 32 48 C1            		ld	(curr_NoiseMode),a
(1)  413/     29D : D3 7F               		out	(psg_ctrl),a
(1)  414/     29F :                     .not_noise:
(1)  415/     29F : 7A                  		ld	a,d
(1)  416/     2A0 : F6 1F               		or	1Fh
(1)  417/     2A2 : 5F                  		ld	e,a
(1)  418/     2A3 : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  419/     2A6 : FE FF               		cp	-1
(1)  420/     2A8 : CA 1C 03            		jp	z,.set_vol
(1)  421/     2AB : FE FE               		cp	-2
(1)  422/     2AD : CA 1C 03            		jp	z,.set_vol
(1)  423/     2B0 : FE F6               		cp	-10
(1)  424/     2B2 : CA 1C 03            		jp	z,.set_vol
(1)  425/     2B5 :                     
(1)  426/     2B5 : DD 7E 17            		ld	a,(ix+chnl_PsgOutFreq)
(1)  427/     2B8 : B7                  		or	a
(1)  428/     2B9 : CA C7 02            		jp	z,.no_upd_freq
(1)  429/     2BC : D3 7F               		out	(psg_ctrl),a
(1)  430/     2BE : AF                  		xor	a
(1)  431/     2BF : DD 77 17            		ld	(ix+chnl_PsgOutFreq),a
(1)  432/     2C2 : DD 7E 18            		ld	a,(ix+(chnl_PsgOutFreq+1))
(1)  433/     2C5 : D3 7F               		out	(psg_ctrl),a
(1)  434/     2C7 :                     .no_upd_freq:
(1)  435/     2C7 : DD 7E 0D            		ld	a,(ix+chnl_PsgPan)
(1)  436/     2CA : 4F                  		ld	c,a
(1)  437/     2CB : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  438/     2CE : 06 EE               		ld	b,11101110b
(1)  439/     2D0 : 07                  		rlca
(1)  440/     2D1 : 07                  		rlca
(1)  441/     2D2 : 07                  		rlca
(1)  442/     2D3 : E6 03               		and 	00000011b
(1)  443/     2D5 : 3D                  		dec	a
(1)  444/     2D6 : FA E7 02            		jp	m,.clrpanfirst
(1)  445/     2D9 : CB 00               		rlc 	b
(1)  446/     2DB : 3D                  		dec	a
(1)  447/     2DC : FA E7 02            		jp	m,.clrpanfirst
(1)  448/     2DF : CB 00               		rlc 	b
(1)  449/     2E1 : 3D                  		dec	a
(1)  450/     2E2 : FA E7 02            		jp	m,.clrpanfirst
(1)  451/     2E5 : CB 00               		rlc 	b
(1)  452/     2E7 :                     .clrpanfirst:
(1)  453/     2E7 :                     
(1)  454/     2E7 : 3A 4A C1            		ld	a,(curr_PsgStereo)
(1)  455/     2EA : A0                  		and 	b
(1)  456/     2EB : B1                  		or	c
(1)  457/     2EC : 32 4A C1            		ld	(curr_PsgStereo),a
(1)  458/     2EF :                     		
(1)  459/     2EF : DD 66 08            		ld	h,(ix+(chnl_InsAddr+1))
(1)  460/     2F2 : DD 6E 07            		ld	l,(ix+chnl_InsAddr)
(1)  461/     2F5 : DD 5E 0E            		ld	e,(ix+chnl_PsgVolBase)		; Set volume
(1)  462/     2F8 : 01 00 00            		ld	bc,0
(1)  463/     2FB : DD 4E 10            		ld	c,(ix+chnl_PsgIndx)
(1)  464/     2FE : 09                  		add 	hl,bc
(1)  465/     2FF : 7E                  		ld	a,(hl)
(1)  466/     300 : FE FF               		cp	-1
(1)  467/     302 : CA 0B 03            		jp	z,.last_env
(1)  468/     305 : DD 77 0F            		ld	(ix+chnl_PsgVolEnv),a
(1)  469/     308 : DD 34 10            		inc 	(ix+chnl_PsgIndx)
(1)  470/     30B :                     .last_env:
(1)  471/     30B : DD 7E 0F            		ld	a,(ix+chnl_PsgVolEnv)
(1)  472/     30E : 83                  		add 	a,e
(1)  473/     30F : 5F                  		ld	e,a
(1)  474/     310 : E6 F0               		and	11110000b
(1)  475/     312 : CA 17 03            		jp	z,.no_max
(1)  476/     315 : 1E 0F               		ld	e,00001111b
(1)  477/     317 :                     .no_max:
(1)  478/     317 : 7B                  		ld	a,e
(1)  479/     318 : F6 10               		or	00010000b
(1)  480/     31A : B2                  		or	d
(1)  481/     31B : 5F                  		ld	e,a
(1)  482/     31C :                     .set_vol:
(1)  483/     31C : 7B                  		ld	a,e
(1)  484/     31D : D3 7F               		out	(psg_ctrl),a
(1)  485/     31F :                     .next_psg:
(1)  486/     31F : C9                  		ret
(1)  487/     320 :                     
(1)  488/     320 :                     ; ------------------------------------
(1)  489/     320 :                     ; Set chip
(1)  490/     320 :                     ; 
(1)  491/     320 :                     ; iy - track buffer
(1)  492/     320 :                     ; ix - current channel
(1)  493/     320 :                     ; ------------------------------------
(1)  494/     320 :                     
(1)  495/     320 :                     .chip_setup:
(1)  496/     320 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  497/     323 : E6 07               		and	111b
(1)  498/     325 : FE 03               		cp	3
(1)  499/     327 : C8                  		ret	z			; 03h invalid channel
(1)  500/     328 :                     
(1)  501/     328 :                     ; ---------------------------------------------
(1)  502/     328 :                     ; Track channel list:
(1)  503/     328 :                     ; FM1 FM2 FM4 FM5 FM3 FM6 PSG1 PSG2 PSG3 NOISE
(1)  504/     328 :                     ; ---------------------------------------------
(1)  505/     328 :                     
(1)  506/     328 : E5                  		push	hl
(1)  507/     329 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Instrument
(1)  508/     32C : CB 6F               		bit	5,a
(1)  509/     32E : C2 36 03            		jp	nz,.use_newinst
(1)  510/     331 : E6 02               		and	0010b
(1)  511/     333 : CA 71 03            		jp	z,.no_newinst
(1)  512/     336 :                     .use_newinst:
(1)  513/     336 : CD BE 05            		call	.grab_instslot
(1)  514/     339 : 7E                  		ld	a,(hl)
(1)  515/     33A : FE FF               		cp	-1
(1)  516/     33C : CA 71 03            		jp	z,.no_newinst
(1)  517/     33F : DD 77 0B            		ld	(ix+chnl_InsType),a
(1)  518/     342 : 23                  		inc	hl
(1)  519/     343 : 7E                  		ld	a,(hl)
(1)  520/     344 : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1)  521/     347 : 23                  		inc	hl
(1)  522/     348 : 7E                  		ld	a,(hl)
(1)  523/     349 : DD 77 07            		ld	(ix+chnl_InsAddr),a
(1)  524/     34C : 23                  		inc	hl
(1)  525/     34D : 7E                  		ld	a,(hl)
(1)  526/     34E : DD 77 08            		ld	(ix+(chnl_InsAddr+1)),a
(1)  527/     351 :                     		
(1)  528/     351 : DD 7E 00            		ld	a,(ix+chnl_Chip)	; PSG instr are external
(1)  529/     354 : B7                  		or	a
(1)  530/     355 : FA 5E 03            		jp	m,.psg_instr
(1)  531/     358 : CD 02 06            		call	.set_fm_ins
(1)  532/     35B : C3 71 03            		jp	.no_newinst
(1)  533/     35E :                     .psg_instr:
(1)  534/     35E : FE E0               		cp	0E0h
(1)  535/     360 : C2 71 03            		jp	nz,.no_newinst
(1)  536/     363 : DD 7E 0B            		ld	a,(ix+chnl_InsType)	; Set new noise type
(1)  537/     366 : 4F                  		ld	c,a
(1)  538/     367 : E6 E0               		and 	0E0h
(1)  539/     369 : FE E0               		cp	0E0h
(1)  540/     36B : C2 71 03            		jp	nz,.no_newinst
(1)  541/     36E : FD 71 0C            		ld	(iy+trck_PsgNoise),c	; to TRACK buffer
(1)  542/     371 :                     .no_newinst:
(1)  543/     371 :                     		
(1)  544/     371 :                     	; ---------------------------------------------
(1)  545/     371 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Effect
(1)  546/     374 : CB 7F               		bit	7,a
(1)  547/     376 : C2 7E 03            		jp	nz,.use_neweff
(1)  548/     379 : E6 08               		and	1000b
(1)  549/     37B : CA 8A 03            		jp	z,.no_neweff
(1)  550/     37E :                     .use_neweff:	
(1)  551/     37E : CD 8F 04            		call	.set_effect
(1)  552/     381 : CD EA 03            		call	.search_slot
(1)  553/     384 : DA 8A 03            		jp	c,.no_neweff
(1)  554/     387 : CD 6D 06            		call	.run_effect
(1)  555/     38A :                     .no_neweff:
(1)  556/     38A :                     
(1)  557/     38A :                     	; ---------------------------------------------
(1)  558/     38A : DD 7E 01            		ld	a,(ix+chnl_Type)	; Note
(1)  559/     38D : 5F                  		ld	e,a
(1)  560/     38E : CB 67               		bit	4,a
(1)  561/     390 : C2 98 03            		jp	nz,.use_notereq
(1)  562/     393 : E6 01               		and	0001b
(1)  563/     395 : CA AD 03            		jp	z,.no_notereq
(1)  564/     398 :                     .use_notereq:
(1)  565/     398 : CD BE 05            		call	.grab_instslot
(1)  566/     39B : 7E                  		ld	a,(hl)
(1)  567/     39C : FE FF               		cp	-1
(1)  568/     39E : CA AD 03            		jp	z,.no_notereq
(1)  569/     3A1 :                     
(1)  570/     3A1 : CD 15 04            		call	.set_frequency
(1)  571/     3A4 : CD EA 03            		call	.search_slot
(1)  572/     3A7 : DA AD 03            		jp	c,.no_notereq
(1)  573/     3AA : CD D4 05            		call	.run_frequency
(1)  574/     3AD :                     .no_notereq:
(1)  575/     3AD :                     
(1)  576/     3AD :                     	; ------------------------------------
(1)  577/     3AD : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  578/     3B0 : CB 77               		bit	6,a			; Volume
(1)  579/     3B2 : C2 BA 03            		jp	nz,.use_newvol
(1)  580/     3B5 : E6 04               		and	0100b
(1)  581/     3B7 : CA C9 03            		jp	z,.no_newvol
(1)  582/     3BA :                     .use_newvol:
(1)  583/     3BA : DD 46 04            		ld	b,(ix+chnl_Vol)
(1)  584/     3BD : DD 70 12            		ld	(ix+chnl_EfNewVol),b
(1)  585/     3C0 : CD EA 03            		call	.search_slot
(1)  586/     3C3 : DA C9 03            		jp	c,.no_newvol
(1)  587/     3C6 : CD 07 04            		call	.set_volume
(1)  588/     3C9 :                     .no_newvol:
(1)  589/     3C9 :                     
(1)  590/     3C9 :                     	; ---------------------------------------------
(1)  591/     3C9 :                     	; Mark active SFX channels
(1)  592/     3C9 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  593/     3CC : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  594/     3CF : B7                  		or	a
(1)  595/     3D0 : CA D6 03            		jp	z,.lowprioset
(1)  596/     3D3 : 21 44 C1            		ld	hl,SndBuff_UsedChnls_2
(1)  597/     3D6 :                     .lowprioset:	
(1)  598/     3D6 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  599/     3D9 : B7                  		or	a
(1)  600/     3DA :                     ; 		jp	p,.plusfm
(1)  601/     3DA : 07                  		rlca
(1)  602/     3DB : 07                  		rlca
(1)  603/     3DC : 07                  		rlca
(1)  604/     3DD : E6 03               		and	00000011b
(1)  605/     3DF :                     ; 		add 	a,6
(1)  606/     3DF :                     ; 		jp	.leftfm
(1)  607/     3DF :                     ; .plusfm:
(1)  608/     3DF :                     ; 		bit 	2,a
(1)  609/     3DF :                     ; 		jp	z,.leftfm
(1)  610/     3DF :                     ; 		dec	a
(1)  611/     3DF :                     ; .leftfm:
(1)  612/     3DF : 11 00 00            		ld	de,0
(1)  613/     3E2 : 5F                  		ld	e,a
(1)  614/     3E3 : 19                  		add 	hl,de
(1)  615/     3E4 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  616/     3E7 : 77                  		ld	(hl),a
(1)  617/     3E8 :                     
(1)  618/     3E8 :                     	; ---------------------------------------------
(1)  619/     3E8 :                     
(1)  620/     3E8 : E1                  		pop	hl
(1)  621/     3E9 : C9                  		ret
(1)  622/     3EA :                     
(1)  623/     3EA :                     ; ------------------------------------
(1)  624/     3EA :                     ; Check if slot is busy
(1)  625/     3EA :                     ; 
(1)  626/     3EA :                     ; Returns:
(1)  627/     3EA :                     ;  c - Channel is busy
(1)  628/     3EA :                     ; nc - Channel is free or
(1)  629/     3EA :                     ;      ignore (BGM only)
(1)  630/     3EA :                     ; ------------------------------------
(1)  631/     3EA :                     
(1)  632/     3EA :                     .search_slot:
(1)  633/     3EA : 3F                  		ccf
(1)  634/     3EB : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  635/     3EE : B7                  		or	a
(1)  636/     3EF : C8                  		ret 	z
(1)  637/     3F0 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  638/     3F3 : B7                  		or	a
(1)  639/     3F4 :                     ; 		jp	p,.srchfm
(1)  640/     3F4 : 07                  		rlca
(1)  641/     3F5 : 07                  		rlca
(1)  642/     3F6 : 07                  		rlca
(1)  643/     3F7 : E6 03               		and	00000011b
(1)  644/     3F9 :                     ; 		add 	a,6
(1)  645/     3F9 :                     ; 		jp	.gosrch
(1)  646/     3F9 :                     ; .srchfm:
(1)  647/     3F9 :                     ; 		bit 	2,a
(1)  648/     3F9 :                     ; 		jp	z,.gosrch
(1)  649/     3F9 :                     ; 		dec	a
(1)  650/     3F9 :                     ; .gosrch:
(1)  651/     3F9 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  652/     3FC : 11 00 00            		ld	de,0
(1)  653/     3FF : 5F                  		ld	e,a
(1)  654/     400 : 19                  		add 	hl,de
(1)  655/     401 : 7E                  		ld	a,(hl)
(1)  656/     402 : 3F                  		ccf
(1)  657/     403 : B7                  		or	a
(1)  658/     404 : C8                  		ret	z
(1)  659/     405 : 37                  		scf
(1)  660/     406 : C9                  		ret
(1)  661/     407 :                     
(1)  662/     407 :                     ; ---------------------------------------------
(1)  663/     407 :                     ; These routines only update the channel
(1)  664/     407 :                     ; buffer
(1)  665/     407 :                     ; ---------------------------------------------
(1)  666/     407 :                     
(1)  667/     407 :                     ; -----------------------------------
(1)  668/     407 :                     ; Set volume
(1)  669/     407 :                     ; 
(1)  670/     407 :                     ; FM note: call this AFTER 
(1)  671/     407 :                     ; updating the instrument data regs
(1)  672/     407 :                     ; 
(1)  673/     407 :                     ; b - chnl_Vol
(1)  674/     407 :                     ; -----------------------------------
(1)  675/     407 :                     
(1)  676/     407 :                     .set_volume:
(1)  677/     407 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  678/     40A : B7                  		or	a
(1)  679/     40B : FA 11 04            		jp	m,.vol_ispsg
(1)  680/     40E : C3 04 06            		jp	.set_fm_vol
(1)  681/     411 :                     .vol_ispsg:
(1)  682/     411 : 78                  		ld	a,b
(1)  683/     412 : C3 06 06            		jp	.set_psg_vol
(1)  684/     415 :                     
(1)  685/     415 :                     ; ------------------------------------
(1)  686/     415 :                     ; Set channel frequency
(1)  687/     415 :                     ; ------------------------------------
(1)  688/     415 :                     
(1)  689/     415 :                     .set_frequency:
(1)  690/     415 : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1)  691/     418 : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1)  692/     41B : 78                  		ld	a,b
(1)  693/     41C : B7                  		or	a			; Type 080h/0E0h?
(1)  694/     41D : F2 25 04            		jp	p,.notype3
(1)  695/     420 : CB 79               		bit 	7,c			; PSG channel?
(1)  696/     422 : C2 55 04            		jp	nz,.setfreq_psg
(1)  697/     425 :                     .notype3:
(1)  698/     425 : 78                  		ld	a,b
(1)  699/     426 : FE 02               		cp	2			; Type 2?
(1)  700/     428 : C2 31 04            		jp	nz,.fm_normalchnl
(1)  701/     42B : 79                  		ld	a,c			; Channel 6?
(1)  702/     42C : FE 06               		cp	6
(1)  703/     42E : CA 54 04            		jp	z,.setfm_sample
(1)  704/     431 :                     
(1)  705/     431 :                     ; -------------------------------------
(1)  706/     431 :                     ; FM frequency
(1)  707/     431 :                     ; -------------------------------------
(1)  708/     431 :                     
(1)  709/     431 :                     .fm_normalchnl:
(1)  710/     431 : C9                  		ret
(1)  711/     432 :                     
(1)  712/     432 :                     ; 		ld	a,(ix+chnl_Note)
(1)  713/     432 :                     ; 		cp	-10
(1)  714/     432 :                     ; 		jp	z,.unlock_chnl
(1)  715/     432 :                     ; 		cp	-2
(1)  716/     432 :                     ; 		jp	z,.fm_turnoff
(1)  717/     432 :                     ; 		cp	-1
(1)  718/     432 :                     ; 		jp	z,.fm_turnoff
(1)  719/     432 :                     ; 
(1)  720/     432 :                     ; 		ld	hl,fmFreq_List
(1)  721/     432 :                     ; 		ld	de,0
(1)  722/     432 :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  723/     432 :                     ; 		add	a,a
(1)  724/     432 :                     ; 		ld	e,a
(1)  725/     432 :                     ; 		add	hl,de
(1)  726/     432 :                     ; 		ld	a,(hl)
(1)  727/     432 :                     ; 		ld	(ix+chnl_Freq),a
(1)  728/     432 :                     ; 		inc	hl
(1)  729/     432 :                     ; 		ld	a,(hl)
(1)  730/     432 :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  731/     432 :                     ; 		ret
(1)  732/     432 :                     
(1)  733/     432 :                     ; -------------------------------------
(1)  734/     432 :                     ; Unlock current channel
(1)  735/     432 :                     ; -------------------------------------
(1)  736/     432 :                     
(1)  737/     432 :                     .unlock_chnl:
(1)  738/     432 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  739/     435 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  740/     438 : B7                  		or	a
(1)  741/     439 : CA 3F 04            		jp	z,.lowunlkset
(1)  742/     43C : 21 44 C1            		ld	hl,SndBuff_UsedChnls_2
(1)  743/     43F :                     .lowunlkset:	
(1)  744/     43F : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  745/     442 : B7                  		or	a
(1)  746/     443 :                     ; 		jp	p,.uplusfm
(1)  747/     443 : 07                  		rlca
(1)  748/     444 : 07                  		rlca
(1)  749/     445 : 07                  		rlca
(1)  750/     446 : E6 03               		and	00000011b
(1)  751/     448 :                     ; 		add 	a,6
(1)  752/     448 :                     ; 		jp	.uleftfm
(1)  753/     448 :                     ; .uplusfm:
(1)  754/     448 :                     ; 		bit 	2,a
(1)  755/     448 :                     ; 		jp	z,.uleftfm
(1)  756/     448 :                     ; 		dec	a
(1)  757/     448 :                     ; .uleftfm:
(1)  758/     448 : 11 00 00            		ld	de,0
(1)  759/     44B : 5F                  		ld	e,a
(1)  760/     44C : 19                  		add 	hl,de
(1)  761/     44D : 36 00               		ld	(hl),0
(1)  762/     44F : DD 36 01 00         		ld	(ix+chnl_Type),0
(1)  763/     453 :                     		
(1)  764/     453 :                     ; 		ld	a,(ix+chnl_Chip)
(1)  765/     453 :                     ; 		rlca
(1)  766/     453 :                     ; 		rlca
(1)  767/     453 :                     ; 		rlca
(1)  768/     453 :                     ; 		and	00000011b
(1)  769/     453 :                     ; 		ld	d,00010001b
(1)  770/     453 :                     ; 		dec	a
(1)  771/     453 :                     ; 		jp	m,.unlkrestpan
(1)  772/     453 :                     ; 		rlc 	d
(1)  773/     453 :                     ; 		dec	a
(1)  774/     453 :                     ; 		jp	m,.unlkrestpan
(1)  775/     453 :                     ; 		rlc 	d
(1)  776/     453 :                     ; 		dec	a
(1)  777/     453 :                     ; 		jp	m,.unlkrestpan
(1)  778/     453 :                     ; 		rlc 	d
(1)  779/     453 :                     ; .unlkrestpan:
(1)  780/     453 :                     ; 		ld	(ix+chnl_PsgPan),d
(1)  781/     453 : C9                  		ret
(1)  782/     454 :                     		
(1)  783/     454 :                     ; -------------------------------------
(1)  784/     454 :                     ; Set FM6 sample
(1)  785/     454 :                     ; -------------------------------------
(1)  786/     454 :                     
(1)  787/     454 :                     .setfm_sample:
(1)  788/     454 : C9                  		ret
(1)  789/     455 :                     
(1)  790/     455 :                     ; 		ld	a,(ix+chnl_Note)
(1)  791/     455 :                     ; 		cp	-10
(1)  792/     455 :                     ; 		jp	z,.unlock_chnl
(1)  793/     455 :                     ; 		cp	-2
(1)  794/     455 :                     ; 		ret	z
(1)  795/     455 :                     ; 		cp	-1
(1)  796/     455 :                     ; 		ret	z
(1)  797/     455 :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  798/     455 :                     ; 		add 	a,a
(1)  799/     455 :                     ; 		ld	de,0
(1)  800/     455 :                     ; 		ld	e,a
(1)  801/     455 :                     ; 		ld	hl,wavFreq_List
(1)  802/     455 :                     ; 		add 	hl,de
(1)  803/     455 :                     ; 		ld	a,(hl)
(1)  804/     455 :                     ; 		inc 	hl
(1)  805/     455 :                     ; 		ld	(ix+chnl_Freq),a
(1)  806/     455 :                     ; 		ld	a,(hl)
(1)  807/     455 :                     ; 		inc 	hl
(1)  808/     455 :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  809/     455 :                     ; 		ret
(1)  810/     455 :                     		
(1)  811/     455 :                     ; -------------------------------------
(1)  812/     455 :                     ; PSG frequency
(1)  813/     455 :                     ; -------------------------------------
(1)  814/     455 :                     
(1)  815/     455 :                     .setfreq_psg:
(1)  816/     455 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  817/     458 : 47                  		ld	b,a
(1)  818/     459 : F6 1F               		or	01Fh
(1)  819/     45B : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  820/     45E : FE F6               		cp	-10
(1)  821/     460 : CA 32 04            		jp	z,.unlock_chnl
(1)  822/     463 : FE FE               		cp	-2
(1)  823/     465 : C8                  		ret	z
(1)  824/     466 : FE FF               		cp	-1
(1)  825/     468 : C8                  		ret	z
(1)  826/     469 :                     
(1)  827/     469 : 21 00 00            		ld	hl,0
(1)  828/     46C : 87                  		add 	a,a
(1)  829/     46D : 11 00 00            		ld	de,0
(1)  830/     470 : 5F                  		ld	e,a
(1)  831/     471 : 19                  		add 	hl,de
(1)  832/     472 : DD 7E 0C            		ld	a,(ix+chnl_InsOpt)
(1)  833/     475 : 87                  		add	a,a
(1)  834/     476 : 11 00 00            		ld	de,0
(1)  835/     479 : 5F                  		ld	e,a
(1)  836/     47A : 19                  		add 	hl,de
(1)  837/     47B : 54                  		ld	d,h
(1)  838/     47C : 5D                  		ld	e,l	
(1)  839/     47D : 21 05 08            		ld	hl,psgFreq_List
(1)  840/     480 : 19                  		add	hl,de
(1)  841/     481 : 7E                  		ld	a,(hl)
(1)  842/     482 : DD 77 09            		ld	(ix+chnl_Freq),a
(1)  843/     485 : 23                  		inc 	hl
(1)  844/     486 : 7E                  		ld	a,(hl)
(1)  845/     487 : DD 77 0A            		ld	(ix+(chnl_Freq+1)),a
(1)  846/     48A : DD 36 10 00         		ld	(ix+chnl_PsgIndx),0
(1)  847/     48E : C9                  		ret
(1)  848/     48F :                     		
(1)  849/     48F :                     ; -------------------------------------
(1)  850/     48F :                     ; Set effects
(1)  851/     48F :                     ; 
(1)  852/     48F :                     ; updates to buffer only
(1)  853/     48F :                     ; -------------------------------------
(1)  854/     48F :                     
(1)  855/     48F :                     .set_effect:
(1)  856/     48F : 11 00 00            		ld	de,0
(1)  857/     492 : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1)  858/     495 : 87                  		add 	a,a
(1)  859/     496 : E6 FE               		and	11111110b
(1)  860/     498 : 5F                  		ld	e,a
(1)  861/     499 : 21 A9 04            		ld	hl,.eff_list
(1)  862/     49C : 19                  		add	hl,de
(1)  863/     49D : DD 46 00            		ld	b,(ix+chnl_Chip)
(1)  864/     4A0 : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1)  865/     4A3 : 7E                  		ld	a,(hl)
(1)  866/     4A4 : 23                  		inc	hl
(1)  867/     4A5 : 66                  		ld	h,(hl)
(1)  868/     4A6 : 6F                  		ld	l,a
(1)  869/     4A7 : E9                  		jp	(hl)
(1)  870/     4A8 :                     .eff_null:
(1)  871/     4A8 : C9                  		ret
(1)  872/     4A9 :                     .eff_list:
(1)  873/     4A9 : A8 04               		dw .eff_null
(1)  874/     4AB : DF 04               		dw .eff_A	; A | Set ticks
(1)  875/     4AD : E7 04               		dw .eff_B	; B | Jump to block (SET OUTSIDE)
(1)  876/     4AF : A8 04               		dw .eff_null	; C | Break to row (unsupported)
(1)  877/     4B1 : F7 04               		dw .eff_D	; D | Volume slide
(1)  878/     4B3 : 11 05               		dw .eff_E	; E | Portametro down
(1)  879/     4B5 : 51 05               		dw .eff_F	; F | Portametro up
(1)  880/     4B7 : A8 04               		dw .eff_null	; G
(1)  881/     4B9 : A8 04               		dw .eff_null	; H
(1)  882/     4BB : A8 04               		dw .eff_null	; I
(1)  883/     4BD : A8 04               		dw .eff_null	; J	
(1)  884/     4BF : A8 04               		dw .eff_null	; K
(1)  885/     4C1 : A8 04               		dw .eff_null	; L
(1)  886/     4C3 : A8 04               		dw .eff_null	; M
(1)  887/     4C5 : A8 04               		dw .eff_null	; N
(1)  888/     4C7 : A8 04               		dw .eff_null	; O
(1)  889/     4C9 : A8 04               		dw .eff_null	; P
(1)  890/     4CB : A8 04               		dw .eff_null	; Q
(1)  891/     4CD : A8 04               		dw .eff_null	; R
(1)  892/     4CF : A8 04               		dw .eff_null	; S
(1)  893/     4D1 : A8 04               		dw .eff_null	; T
(1)  894/     4D3 : A8 04               		dw .eff_null	; U
(1)  895/     4D5 : A8 04               		dw .eff_null	; V
(1)  896/     4D7 : A8 04               		dw .eff_null	; W
(1)  897/     4D9 : 8A 05               		dw .eff_X	; X
(1)  898/     4DB : A8 04               		dw .eff_null	; Y
(1)  899/     4DD : A8 04               		dw .eff_null	; Z
(1)  900/     4DF :                     
(1)  901/     4DF :                     ; -------------------------------------
(1)  902/     4DF :                     ; Effect A - Set ticks
(1)  903/     4DF :                     ; -------------------------------------
(1)  904/     4DF :                     
(1)  905/     4DF :                     .eff_A:
(1)  906/     4DF : 0D                  		dec 	c
(1)  907/     4E0 : FD 71 1F            		ld	(iy+trck_TicksCurr),c
(1)  908/     4E3 : FD 71 0D            		ld	(iy+trck_TicksRead),c
(1)  909/     4E6 : C9                  		ret
(1)  910/     4E7 :                     
(1)  911/     4E7 :                     ; -------------------------------------
(1)  912/     4E7 :                     ; Effect B - Set block
(1)  913/     4E7 :                     ; -------------------------------------
(1)  914/     4E7 :                     
(1)  915/     4E7 :                     .eff_B:
(1)  916/     4E7 : FD 71 0E            		ld	(iy+trck_BlockCurr),c
(1)  917/     4EA : 11 01 00            		ld	de,1			; Finish row
(1)  918/     4ED : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  919/     4F0 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  920/     4F3 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  921/     4F6 : C9                  		ret
(1)  922/     4F7 :                     
(1)  923/     4F7 :                     ; -------------------------------------
(1)  924/     4F7 :                     ; Effect D - Volume slide
(1)  925/     4F7 :                     ; -------------------------------------
(1)  926/     4F7 :                     
(1)  927/     4F7 :                     .eff_D:
(1)  928/     4F7 : 79                  		ld	a,c
(1)  929/     4F8 : E6 F0               		and	11110000b		; X0h - slide up
(1)  930/     4FA : C2 07 05            		jp	nz,.go_up
(1)  931/     4FD : 79                  		ld	a,c
(1)  932/     4FE : E6 0F               		and	00001111b		; 0Xh - slide down
(1)  933/     500 : C8                  		ret	z			; 00h - slide continue
(1)  934/     501 :                     .go_down:
(1)  935/     501 : 2F                  		cpl
(1)  936/     502 : 3C                  		inc	a
(1)  937/     503 : DD 77 11            		ld	(ix+chnl_EfVolSlide),a
(1)  938/     506 : C9                  		ret
(1)  939/     507 :                     .go_up:
(1)  940/     507 : 0F                  		rrca
(1)  941/     508 : 0F                  		rrca
(1)  942/     509 : 0F                  		rrca
(1)  943/     50A : 0F                  		rrca
(1)  944/     50B : E6 0F               		and	00001111b
(1)  945/     50D : DD 77 11            		ld	(ix+chnl_EfVolSlide),a
(1)  946/     510 : C9                  		ret
(1)  947/     511 :                     
(1)  948/     511 :                     ; -------------------------------------
(1)  949/     511 :                     ; Effect E - Portametro down
(1)  950/     511 :                     ; 
(1)  951/     511 :                     ; NOTE: not accurate
(1)  952/     511 :                     ; -------------------------------------
(1)  953/     511 :                     
(1)  954/     511 :                     .eff_E:
(1)  955/     511 : 79                  		ld	a,c
(1)  956/     512 : B7                  		or	a
(1)  957/     513 : CA 50 05            		jp	z,.prtdwn_cont
(1)  958/     516 : E6 F0               		and	11110000b
(1)  959/     518 : FE E0               		cp	0E0h
(1)  960/     51A : CA 2F 05            		jp	z,.dwn_exfine
(1)  961/     51D : FE F0               		cp	0F0h
(1)  962/     51F : CA 3F 05            		jp	z,.dwn_fine
(1)  963/     522 :                     		
(1)  964/     522 :                     ; Normal
(1)  965/     522 : 79                  		ld	a,c
(1)  966/     523 : E6 1F               		and	00011111b
(1)  967/     525 : 87                  		add	a,a
(1)  968/     526 : 2F                  		cpl
(1)  969/     527 : 3C                  		inc	a
(1)  970/     528 : 11 FF FF            		ld	de,-1
(1)  971/     52B : 5F                  		ld	e,a
(1)  972/     52C : C3 4A 05            		jp	.set_portam
(1)  973/     52F :                     .dwn_exfine:
(1)  974/     52F : 11 FF FF            		ld	de,-1
(1)  975/     532 : 79                  		ld	a,c
(1)  976/     533 : E6 0F               		and	00001111b
(1)  977/     535 : 2F                  		cpl
(1)  978/     536 : 3C                  		inc	a
(1)  979/     537 : CB 2F               		sra	a
(1)  980/     539 : CB 2F               		sra	a
(1)  981/     53B : 5F                  		ld	e,a
(1)  982/     53C : C3 4A 05            		jp	.set_portam
(1)  983/     53F :                     .dwn_fine:
(1)  984/     53F : 11 FF FF            		ld	de,-1
(1)  985/     542 : 79                  		ld	a,c
(1)  986/     543 : E6 0F               		and	00001111b
(1)  987/     545 : 2F                  		cpl
(1)  988/     546 : 3C                  		inc	a
(1)  989/     547 : CB 2F               		sra	a
(1)  990/     549 : 5F                  		ld	e,a
(1)  991/     54A :                     
(1)  992/     54A :                     ; shared with effects E and F
(1)  993/     54A :                     .set_portam:
(1)  994/     54A : DD 72 14            		ld	(ix+(chnl_EfPortam+1)),d
(1)  995/     54D : DD 73 13            		ld	(ix+chnl_EfPortam),e
(1)  996/     550 :                     
(1)  997/     550 :                     .prtdwn_cont:
(1)  998/     550 : C9                  		ret
(1)  999/     551 :                     
(1) 1000/     551 :                     ; -------------------------------------
(1) 1001/     551 :                     ; Effect F - Portametro up
(1) 1002/     551 :                     ; 
(1) 1003/     551 :                     ; NOTE: not accurate
(1) 1004/     551 :                     ; -------------------------------------
(1) 1005/     551 :                     
(1) 1006/     551 :                     .eff_F:
(1) 1007/     551 : 79                  		ld	a,c
(1) 1008/     552 : B7                  		or	a
(1) 1009/     553 : CA 89 05            		jp	z,.prtup_cont
(1) 1010/     556 : E6 F0               		and	11110000b
(1) 1011/     558 : FE E0               		cp	0E0h
(1) 1012/     55A : CA 72 05            		jp	z,.up_exfine
(1) 1013/     55D : FE F0               		cp	0F0h
(1) 1014/     55F : CA 7E 05            		jp	z,.up_fine
(1) 1015/     562 :                     		
(1) 1016/     562 :                     ; Normal
(1) 1017/     562 : 79                  		ld	a,c
(1) 1018/     563 : E6 1F               		and	00011111b
(1) 1019/     565 : 57                  		ld	d,a
(1) 1020/     566 : 87                  		add	a,a
(1) 1021/     567 : 87                  		add	a,a
(1) 1022/     568 : 5F                  		ld	e,a
(1) 1023/     569 : 7A                  		ld	a,d
(1) 1024/     56A : 07                  		rlca
(1) 1025/     56B : 07                  		rlca	
(1) 1026/     56C : E6 03               		and	00000011b
(1) 1027/     56E : 57                  		ld	d,a
(1) 1028/     56F : C3 4A 05            		jp	.set_portam
(1) 1029/     572 :                     .up_exfine:
(1) 1030/     572 : 11 00 00            		ld	de,0
(1) 1031/     575 : 79                  		ld	a,c
(1) 1032/     576 : E6 0F               		and	00001111b
(1) 1033/     578 : CB 2F               		sra	a
(1) 1034/     57A : 5F                  		ld	e,a
(1) 1035/     57B : C3 4A 05            		jp	.set_portam
(1) 1036/     57E :                     .up_fine:
(1) 1037/     57E : 11 00 00            		ld	de,0
(1) 1038/     581 : 79                  		ld	a,c
(1) 1039/     582 : E6 0F               		and	00001111b
(1) 1040/     584 : 87                  		add	a,a
(1) 1041/     585 : 5F                  		ld	e,a
(1) 1042/     586 : C3 4A 05            		jp	.set_portam
(1) 1043/     589 :                     .prtup_cont:
(1) 1044/     589 : C9                  		ret
(1) 1045/     58A :                     		
(1) 1046/     58A :                     ; -------------------------------------
(1) 1047/     58A :                     ; Effect X - Set panning
(1) 1048/     58A :                     ; -------------------------------------
(1) 1049/     58A :                     
(1) 1050/     58A :                     .eff_X:
(1) 1051/     58A : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1052/     58D : B7                  		or	a
(1) 1053/     58E : F0                  		ret 	p
(1) 1054/     58F : 47                  		ld	b,a
(1) 1055/     590 :                     		
(1) 1056/     590 : 11 00 00            		ld	de,0
(1) 1057/     593 : 21 BA 05            		ld	hl,.psgpan_list
(1) 1058/     596 : 79                  		ld	a,c
(1) 1059/     597 : 07                  		rlca
(1) 1060/     598 : 07                  		rlca
(1) 1061/     599 : E6 03               		and 	00000011b
(1) 1062/     59B : 5F                  		ld	e,a
(1) 1063/     59C : 19                  		add	hl,de
(1) 1064/     59D : 78                  		ld	a,b
(1) 1065/     59E : 07                  		rlca
(1) 1066/     59F : 07                  		rlca
(1) 1067/     5A0 : 07                  		rlca
(1) 1068/     5A1 : E6 03               		and	00000011b
(1) 1069/     5A3 : 56                  		ld	d,(hl)
(1) 1070/     5A4 : 3D                  		dec	a
(1) 1071/     5A5 : FA B6 05            		jp	m,.stopstrchk
(1) 1072/     5A8 : CB 02               		rlc 	d
(1) 1073/     5AA : 3D                  		dec	a
(1) 1074/     5AB : FA B6 05            		jp	m,.stopstrchk
(1) 1075/     5AE : CB 02               		rlc 	d
(1) 1076/     5B0 : 3D                  		dec	a
(1) 1077/     5B1 : FA B6 05            		jp	m,.stopstrchk
(1) 1078/     5B4 : CB 02               		rlc 	d
(1) 1079/     5B6 :                     .stopstrchk:
(1) 1080/     5B6 : DD 72 0D            		ld	(ix+chnl_PsgPan),d
(1) 1081/     5B9 : C9                  		ret
(1) 1082/     5BA :                     
(1) 1083/     5BA :                     .psgpan_list:
(1) 1084/     5BA : 10                  		db 00010000b	; 000h
(1) 1085/     5BB : 10                  		db 00010000b	; 000h
(1) 1086/     5BC : 11                  		db 00010001b	; 080h
(1) 1087/     5BD : 01                  		db 00000001b	; 0C0h
(1) 1088/     5BE :                     
(1) 1089/     5BE :                     ; ---------------------------------------------
(1) 1090/     5BE :                     ; Grab instrument from slot
(1) 1091/     5BE :                     ; 
(1) 1092/     5BE :                     ; Output
(1) 1093/     5BE :                     ; hl - current instrument
(1) 1094/     5BE :                     ; ---------------------------------------------
(1) 1095/     5BE :                     
(1) 1096/     5BE :                     .grab_instslot:
(1) 1097/     5BE : FD 6E 16            		ld	l,(iy+trck_Instr)
(1) 1098/     5C1 : FD 66 17            		ld	h,(iy+(trck_Instr+1))
(1) 1099/     5C4 : DD 7E 03            		ld	a,(ix+chnl_Ins)
(1) 1100/     5C7 : 3D                  		dec 	a
(1) 1101/     5C8 : 47                  		ld	b,a
(1) 1102/     5C9 : 87                  		add 	a,a
(1) 1103/     5CA : 87                  		add 	a,a
(1) 1104/     5CB : 4F                  		ld	c,a
(1) 1105/     5CC : 78                  		ld	a,b
(1) 1106/     5CD : 07                  		rlca
(1) 1107/     5CE : 07                  		rlca
(1) 1108/     5CF : E6 03               		and	3
(1) 1109/     5D1 : 47                  		ld	b,a
(1) 1110/     5D2 : 09                  		add	hl,bc
(1) 1111/     5D3 : C9                  		ret
(1) 1112/     5D4 :                     
(1) 1113/     5D4 :                     ; ---------------------------------------------
(1) 1114/     5D4 :                     ; These routines send the result data from
(1) 1115/     5D4 :                     ; the channel buffer to their respective
(1) 1116/     5D4 :                     ; sound chips
(1) 1117/     5D4 :                     ; ---------------------------------------------
(1) 1118/     5D4 :                     
(1) 1119/     5D4 :                     .run_frequency:
(1) 1120/     5D4 : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1) 1121/     5D7 : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1) 1122/     5DA : 78                  		ld	a,b
(1) 1123/     5DB : B7                  		or	a			; Type 080h/0E0h?
(1) 1124/     5DC : F2 E4 05            		jp	p,.freqrn_not3
(1) 1125/     5DF : CB 79               		bit 	7,c			; PSG channel?
(1) 1126/     5E1 : C2 F2 05            		jp	nz,.freqrn_psg
(1) 1127/     5E4 :                     .freqrn_not3:
(1) 1128/     5E4 : 78                  		ld	a,b
(1) 1129/     5E5 : FE 02               		cp	2				; Type 2?
(1) 1130/     5E7 : C2 F0 05            		jp	nz,.freqrn_fm
(1) 1131/     5EA : 79                  		ld	a,c				; Channel 6?
(1) 1132/     5EB : FE 06               		cp	6
(1) 1133/     5ED : CA F1 05            		jp	z,.freqrn_smpl
(1) 1134/     5F0 :                     .freqrn_fm:
(1) 1135/     5F0 : C9                  		ret
(1) 1136/     5F1 :                     ; 		ld	e,(ix+chnl_Chip)
(1) 1137/     5F1 :                     ; 		bit	7,e
(1) 1138/     5F1 :                     ; 		ret	nz
(1) 1139/     5F1 :                     ; 		ld	d,28h
(1) 1140/     5F1 :                     ; 		call	SndDrv_FmSet_1			; KEYS OFF
(1) 1141/     5F1 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1142/     5F1 :                     ; 		cp	-2
(1) 1143/     5F1 :                     ; 		ret	z
(1) 1144/     5F1 :                     ; 		cp	-1
(1) 1145/     5F1 :                     ; 		ret	z
(1) 1146/     5F1 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1147/     5F1 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1148/     5F1 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1149/     5F1 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1150/     5F1 :                     ; 		call	.set_fm_freq
(1) 1151/     5F1 :                     ; 		ld	e,(ix+chnl_FmRegKeys)		; KEYS ON
(1) 1152/     5F1 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1153/     5F1 :                     ; 		or	e
(1) 1154/     5F1 :                     ; 		ld	e,a
(1) 1155/     5F1 :                     ; 		ld	d,28h
(1) 1156/     5F1 :                     ; 		jp	SndDrv_FmSet_1
(1) 1157/     5F1 :                     
(1) 1158/     5F1 :                     .freqrn_smpl:
(1) 1159/     5F1 : C9                  		ret
(1) 1160/     5F2 :                     ; 		ld	e,040h
(1) 1161/     5F2 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1162/     5F2 :                     ; 		cp	-2
(1) 1163/     5F2 :                     ; 		jp	z,.set_smpflag
(1) 1164/     5F2 :                     ; 		cp	-1
(1) 1165/     5F2 :                     ; 		jp	z,.set_smpflag
(1) 1166/     5F2 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1167/     5F2 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1168/     5F2 :                     ; 		ld	a,h
(1) 1169/     5F2 :                     ; 		or	l
(1) 1170/     5F2 :                     ; 		ret	z
(1) 1171/     5F2 :                     ; 	; Play SAMPLE
(1) 1172/     5F2 :                     ; 		ld	de,2806h
(1) 1173/     5F2 :                     ; 		call	SndDrv_FmSet_1
(1) 1174/     5F2 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1175/     5F2 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1176/     5F2 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1177/     5F2 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1178/     5F2 :                     ; 		ld	a,l
(1) 1179/     5F2 :                     ; 		ld	(Sample_Speed),a
(1) 1180/     5F2 :                     ; 		ld	a,h
(1) 1181/     5F2 :                     ; 		ld	(Sample_Speed+1),a
(1) 1182/     5F2 :                     ; 		ld	a,(ix+chnl_SmplFlags)
(1) 1183/     5F2 :                     ; 		rlca
(1) 1184/     5F2 :                     ; 		or	1
(1) 1185/     5F2 :                     ; 		ld	e,a
(1) 1186/     5F2 :                     ; .set_smpflag:
(1) 1187/     5F2 :                     ; 		ld	a,e
(1) 1188/     5F2 :                     ; 		ld	(Sample_Flags),a
(1) 1189/     5F2 :                     ; 		ret
(1) 1190/     5F2 :                     
(1) 1191/     5F2 :                     .freqrn_psg:
(1) 1192/     5F2 : DD 66 0A            		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1193/     5F5 : DD 6E 09            		ld	l,(ix+chnl_Freq)
(1) 1194/     5F8 : DD 74 16            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1195/     5FB : DD 75 15            		ld	(ix+chnl_EfNewFreq),l
(1) 1196/     5FE : C3 2A 06            		jp	.set_psg_freq
(1) 1197/     601 :                     
(1) 1198/     601 :                     ; ------------------------------------
(1) 1199/     601 :                     ; Turn FM volume regs down
(1) 1200/     601 :                     ; TL = 07Fh
(1) 1201/     601 :                     ; 
(1) 1202/     601 :                     ; ix - current channel
(1) 1203/     601 :                     ; ------------------------------------
(1) 1204/     601 :                     
(1) 1205/     601 :                     .fm_turnoff:
(1) 1206/     601 : C9                  		ret
(1) 1207/     602 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1208/     602 :                     ; 		ld	c,a
(1) 1209/     602 :                     ; 		cp	6
(1) 1210/     602 :                     ; 		jp	nz,.not_dac
(1) 1211/     602 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1212/     602 :                     ; 		cp	2
(1) 1213/     602 :                     ; 		jp	nz,.not_dac
(1) 1214/     602 :                     ; 		ld	a,40h
(1) 1215/     602 :                     ; 		ld	(Sample_Flags),a
(1) 1216/     602 :                     ; .not_dac:
(1) 1217/     602 :                     ; 		ld	a,c
(1) 1218/     602 :                     ; 		or	a
(1) 1219/     602 :                     ; 		ret	m
(1) 1220/     602 :                     ; 		
(1) 1221/     602 :                     ; .fm_settloff:
(1) 1222/     602 :                     ; 		ld	e,a
(1) 1223/     602 :                     ; 		ld	d,28h
(1) 1224/     602 :                     ; 		call	SndDrv_FmSet_1
(1) 1225/     602 :                     ; 		ld	a,e
(1) 1226/     602 :                     ; 		and	11b
(1) 1227/     602 :                     ; 		or	40h
(1) 1228/     602 :                     ; 		ld	e,7Fh
(1) 1229/     602 :                     ; 		ld	d,a
(1) 1230/     602 :                     ; 		call	SndDrv_FmAutoSet
(1) 1231/     602 :                     ; 		inc	d
(1) 1232/     602 :                     ; 		inc	d
(1) 1233/     602 :                     ; 		inc	d
(1) 1234/     602 :                     ; 		inc	d
(1) 1235/     602 :                     ; 		call	SndDrv_FmAutoSet
(1) 1236/     602 :                     ; 		inc	d
(1) 1237/     602 :                     ; 		inc	d
(1) 1238/     602 :                     ; 		inc	d
(1) 1239/     602 :                     ; 		inc	d
(1) 1240/     602 :                     ; 		call	SndDrv_FmAutoSet
(1) 1241/     602 :                     ; 		inc	d
(1) 1242/     602 :                     ; 		inc	d
(1) 1243/     602 :                     ; 		inc	d
(1) 1244/     602 :                     ; 		inc	d
(1) 1245/     602 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1246/     602 :                     
(1) 1247/     602 :                     ; ------------------------------------
(1) 1248/     602 :                     ; FM normal registers
(1) 1249/     602 :                     ; 
(1) 1250/     602 :                     ; NOTE: call this first BEFORE
(1) 1251/     602 :                     ; modyfing the volume
(1) 1252/     602 :                     ; 
(1) 1253/     602 :                     ; ix - current channel
(1) 1254/     602 :                     ; ------------------------------------
(1) 1255/     602 :                     
(1) 1256/     602 :                     .set_fm_ins:
(1) 1257/     602 : C9                  		ret
(1) 1258/     603 :                     ; 		ld	c,(ix+chnl_Chip)
(1) 1259/     603 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1260/     603 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1261/     603 :                     ; 		ld	a,h
(1) 1262/     603 :                     ; 		or	l
(1) 1263/     603 :                     ; 		ret	z
(1) 1264/     603 :                     ; 		ld	a,c			; FM6?
(1) 1265/     603 :                     ; 		cp	6
(1) 1266/     603 :                     ; 		jp	nz,.no_chnl6
(1) 1267/     603 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1268/     603 :                     ; 		cp	2			; Type 2?
(1) 1269/     603 :                     ; 		jp	z,.set_sampl
(1) 1270/     603 :                     ; 		ld	a,40h			; IF type != 2, stop sample to unlock FM6
(1) 1271/     603 :                     ; 		ld	(Sample_Flags),a
(1) 1272/     603 :                     ; .no_chnl6:
(1) 1273/     603 :                     ; 		ld	a,c
(1) 1274/     603 :                     ; 		and	11b
(1) 1275/     603 :                     ; 		or	30h
(1) 1276/     603 :                     ; 		ld	d,a
(1) 1277/     603 :                     ; 		ld	b,1Ch/4
(1) 1278/     603 :                     ; .fmfiles:
(1) 1279/     603 :                     ; 		ld	e,(hl)
(1) 1280/     603 :                     ; 		inc 	hl
(1) 1281/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1282/     603 :                     ; 		inc 	d
(1) 1283/     603 :                     ; 		inc 	d
(1) 1284/     603 :                     ; 		inc 	d
(1) 1285/     603 :                     ; 		inc 	d
(1) 1286/     603 :                     ; 		ld	e,(hl)
(1) 1287/     603 :                     ; 		inc 	hl
(1) 1288/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1289/     603 :                     ; 		inc 	d
(1) 1290/     603 :                     ; 		inc 	d
(1) 1291/     603 :                     ; 		inc 	d
(1) 1292/     603 :                     ; 		inc 	d
(1) 1293/     603 :                     ; 		ld	e,(hl)
(1) 1294/     603 :                     ; 		inc 	hl
(1) 1295/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1296/     603 :                     ; 		inc 	d
(1) 1297/     603 :                     ; 		inc 	d
(1) 1298/     603 :                     ; 		inc 	d
(1) 1299/     603 :                     ; 		inc 	d
(1) 1300/     603 :                     ; 		ld	e,(hl)
(1) 1301/     603 :                     ; 		inc 	hl
(1) 1302/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1303/     603 :                     ; 		inc 	d
(1) 1304/     603 :                     ; 		inc 	d
(1) 1305/     603 :                     ; 		inc 	d
(1) 1306/     603 :                     ; 		inc 	d
(1) 1307/     603 :                     ; 		djnz	.fmfiles
(1) 1308/     603 :                     ; 
(1) 1309/     603 :                     ; 		ld	d,0B0h
(1) 1310/     603 :                     ; 		ld	a,c
(1) 1311/     603 :                     ; 		and	11b
(1) 1312/     603 :                     ; 		or	d
(1) 1313/     603 :                     ; 		ld	d,a
(1) 1314/     603 :                     ; 		ld	e,(hl)			; 0B0h
(1) 1315/     603 :                     ; 		ld	(ix+chnl_FmRegB0),e
(1) 1316/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1317/     603 :                     ; 		inc 	hl
(1) 1318/     603 :                     ; 		ld	e,(hl)			; 0B4h
(1) 1319/     603 :                     ; 		ld	d,0B4h
(1) 1320/     603 :                     ; 		ld	a,c
(1) 1321/     603 :                     ; 		and	11b
(1) 1322/     603 :                     ; 		or	d
(1) 1323/     603 :                     ; 		ld	d,a
(1) 1324/     603 :                     ; 		ld	a,(hl)
(1) 1325/     603 :                     ; 		ld	(ix+chnl_FmRegB4),a	
(1) 1326/     603 :                     ; 		or	(ix+chnl_PsgPan)		; FM panning
(1) 1327/     603 :                     ; 		ld	e,a
(1) 1328/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1329/     603 :                     ; 		inc 	hl
(1) 1330/     603 :                     ; 		ld	e,(hl)			; FM3 flag
(1) 1331/     603 :                     ; 		inc 	hl
(1) 1332/     603 :                     ; 		ld	a,(hl)			; 028h
(1) 1333/     603 :                     ; 		inc 	hl
(1) 1334/     603 :                     ; 		ld	(ix+chnl_FmRegKeys),a
(1) 1335/     603 :                     ; 
(1) 1336/     603 :                     ; 		ld	a,c
(1) 1337/     603 :                     ; 		cp	2			; Channel 3?
(1) 1338/     603 :                     ; 		ret	nz
(1) 1339/     603 :                     ; 		ld	e,0
(1) 1340/     603 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1341/     603 :                     ; 		cp	1			; Type 1?
(1) 1342/     603 :                     ; 		jp	nz,.set_fm3reg
(1) 1343/     603 :                     ; 		ld	d,0A6h			; OP1
(1) 1344/     603 :                     ; 		ld	e,(hl)
(1) 1345/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1346/     603 :                     ; 		inc 	hl
(1) 1347/     603 :                     ; 		ld	d,0A2h
(1) 1348/     603 :                     ; 		ld	e,(hl)
(1) 1349/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1350/     603 :                     ; 		inc 	hl
(1) 1351/     603 :                     ; 		ld	d,0ACh			; OP2
(1) 1352/     603 :                     ; 		ld	e,(hl)
(1) 1353/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1354/     603 :                     ; 		inc 	hl
(1) 1355/     603 :                     ; 		ld	d,0A8h
(1) 1356/     603 :                     ; 		ld	e,(hl)
(1) 1357/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1358/     603 :                     ; 		inc 	hl
(1) 1359/     603 :                     ; 		ld	d,0ADh			; OP3
(1) 1360/     603 :                     ; 		ld	e,(hl)
(1) 1361/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1362/     603 :                     ; 		inc 	hl
(1) 1363/     603 :                     ; 		ld	d,0A9h
(1) 1364/     603 :                     ; 		ld	e,(hl)
(1) 1365/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1366/     603 :                     ; 		inc 	hl
(1) 1367/     603 :                     ; 		ld	d,0AEh			; OP4
(1) 1368/     603 :                     ; 		ld	e,(hl)
(1) 1369/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1370/     603 :                     ; 		inc 	hl
(1) 1371/     603 :                     ; 		ld	d,0AAh
(1) 1372/     603 :                     ; 		ld	e,(hl)
(1) 1373/     603 :                     ; 		call	SndDrv_FmAutoSet
(1) 1374/     603 :                     ; 		ld	e,(ix+chnl_FmRegKeys)	; KEYS ON
(1) 1375/     603 :                     ; 		ld	a,c
(1) 1376/     603 :                     ; 		and	111b
(1) 1377/     603 :                     ; 		or	e
(1) 1378/     603 :                     ; 		ld	e,a
(1) 1379/     603 :                     ; 		ld	d,28h
(1) 1380/     603 :                     ; 		call	SndDrv_FmSet_1
(1) 1381/     603 :                     ; 		ld	e,40h
(1) 1382/     603 :                     ; .set_fm3reg:
(1) 1383/     603 :                     ; 		ld	d,27h
(1) 1384/     603 :                     ; 		jp	SndDrv_FmSet_1
(1) 1385/     603 :                      
(1) 1386/     603 :                     ; ------------------------------------
(1) 1387/     603 :                     ; Set FM frequency
(1) 1388/     603 :                     ; 
(1) 1389/     603 :                     ; hl - frequency
(1) 1390/     603 :                     ; ------------------------------------
(1) 1391/     603 :                     
(1) 1392/     603 :                     .set_fm_freq:
(1) 1393/     603 : C9                  		ret
(1) 1394/     604 :                     ; 		ld	d,(ix+chnl_Chip)
(1) 1395/     604 :                     ; 		ld	e,(ix+chnl_InsType)
(1) 1396/     604 :                     ; 		ld	a,d
(1) 1397/     604 :                     ; 		cp	6			; Check channel 6
(1) 1398/     604 :                     ; 		jp	nz,.no_chnl6f
(1) 1399/     604 :                     ; 		ld	a,e
(1) 1400/     604 :                     ; 		cp	2
(1) 1401/     604 :                     ; 		ret	z
(1) 1402/     604 :                     ; .no_chnl6f:
(1) 1403/     604 :                     ; 		ld	a,d
(1) 1404/     604 :                     ; 		cp	2			; Check channel 3
(1) 1405/     604 :                     ; 		jp	nz,.no_chnl3f
(1) 1406/     604 :                     ; 		ld	a,e
(1) 1407/     604 :                     ; 		cp	1			; CH3 OP regs are already
(1) 1408/     604 :                     ; 		ret	z			; set from the instrument data
(1) 1409/     604 :                     ; .no_chnl3f:
(1) 1410/     604 :                     ; 
(1) 1411/     604 :                     ; 		ld	e,d
(1) 1412/     604 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1413/     604 :                     ; 		cp	-10
(1) 1414/     604 :                     ; 		jp	z,.set_keycut
(1) 1415/     604 :                     ; 		cp	-1
(1) 1416/     604 :                     ; 		ret	z
(1) 1417/     604 :                     ; 		cp	-2
(1) 1418/     604 :                     ; 		jp	nz,.no_keycut
(1) 1419/     604 :                     ; .set_keycut:
(1) 1420/     604 :                     ; 		ld	a,d
(1) 1421/     604 :                     ; 		jp	.fm_settloff
(1) 1422/     604 :                     ; .no_keycut:
(1) 1423/     604 :                     ; 		ld	a,e
(1) 1424/     604 :                     ; 		and	11b
(1) 1425/     604 :                     ; 		ld	b,a
(1) 1426/     604 :                     ; 		ld	a,0A4h
(1) 1427/     604 :                     ; 		or	b
(1) 1428/     604 :                     ; 		ld	d,a
(1) 1429/     604 :                     ; 		ld	e,h
(1) 1430/     604 :                     ; 		call	SndDrv_FmAutoSet
(1) 1431/     604 :                     ; 		dec 	d
(1) 1432/     604 :                     ; 		dec 	d
(1) 1433/     604 :                     ; 		dec	d
(1) 1434/     604 :                     ; 		dec 	d
(1) 1435/     604 :                     ; 		ld	e,l
(1) 1436/     604 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1437/     604 :                     
(1) 1438/     604 :                     ; ------------------------------------
(1) 1439/     604 :                     ; Set FM Volume
(1) 1440/     604 :                     ; 
(1) 1441/     604 :                     ; This one might blow your mind
(1) 1442/     604 :                     ; ------------------------------------
(1) 1443/     604 :                     
(1) 1444/     604 :                     .set_fm_vol:
(1) 1445/     604 : C9                  		ret
(1) 1446/     605 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1447/     605 :                     ; 		ld	e,a
(1) 1448/     605 :                     ; 		cp	6
(1) 1449/     605 :                     ; 		jp	nz,.notdac
(1) 1450/     605 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1451/     605 :                     ; 		cp	2
(1) 1452/     605 :                     ; 		ret	z
(1) 1453/     605 :                     ; .notdac:
(1) 1454/     605 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1455/     605 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1456/     605 :                     ; 		ld	a,h
(1) 1457/     605 :                     ; 		or	l
(1) 1458/     605 :                     ; 		ret	z
(1) 1459/     605 :                     ; 		inc 	hl			; Skip 30h
(1) 1460/     605 :                     ; 		inc 	hl
(1) 1461/     605 :                     ; 		inc 	hl
(1) 1462/     605 :                     ; 		inc 	hl
(1) 1463/     605 :                     ; 		ld	a,b
(1) 1464/     605 :                     ; 		cp	40h
(1) 1465/     605 :                     ; 		jp	c,.too_much
(1) 1466/     605 :                     ; 		ld	a,40h
(1) 1467/     605 :                     ; .too_much:
(1) 1468/     605 :                     ; 		or	a
(1) 1469/     605 :                     ; 		jp	p,.too_low
(1) 1470/     605 :                     ; 		xor	a
(1) 1471/     605 :                     ; .too_low:
(1) 1472/     605 :                     ; 		sub 	a,40h
(1) 1473/     605 :                     ; 		cpl
(1) 1474/     605 :                     ; 		inc 	a
(1) 1475/     605 :                     ; 		ld	(ix+chnl_FmVolBase),a
(1) 1476/     605 :                     ; 		ld	c,(ix+chnl_FmVolBase)
(1) 1477/     605 :                     ; 		ld	d,40h			; 40h
(1) 1478/     605 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1479/     605 :                     ; 		and	11b
(1) 1480/     605 :                     ; 		or	d
(1) 1481/     605 :                     ; 		ld	d,a
(1) 1482/     605 :                     ; 		ld	a,(ix+chnl_FmRegB0)
(1) 1483/     605 :                     ; 		and	111b
(1) 1484/     605 :                     ; 		ld	b,a
(1) 1485/     605 :                     ; 		cp	7
(1) 1486/     605 :                     ; 		jp	nz,.tl_lv1
(1) 1487/     605 :                     ; 		ld	a,(hl)
(1) 1488/     605 :                     ; 		add 	a,c
(1) 1489/     605 :                     ; 		or	a
(1) 1490/     605 :                     ; 		jp	p,.tl_lv1_tm
(1) 1491/     605 :                     ; 		ld	a,7Fh
(1) 1492/     605 :                     ; .tl_lv1_tm:
(1) 1493/     605 :                     ; 		ld	e,a
(1) 1494/     605 :                     ; 		call	SndDrv_FmAutoSet
(1) 1495/     605 :                     ; .tl_lv1:
(1) 1496/     605 :                     ; 		inc 	hl
(1) 1497/     605 :                     ; 		inc 	d
(1) 1498/     605 :                     ; 		inc 	d
(1) 1499/     605 :                     ; 		inc 	d
(1) 1500/     605 :                     ; 		inc 	d
(1) 1501/     605 :                     ; 		ld	a,b
(1) 1502/     605 :                     ; 		cp	7
(1) 1503/     605 :                     ; 		jp	z,.tl_lv2_ok
(1) 1504/     605 :                     ; 		cp	6
(1) 1505/     605 :                     ; 		jp	z,.tl_lv2_ok
(1) 1506/     605 :                     ; 		cp	5
(1) 1507/     605 :                     ; 		jp	nz,.tl_lv2
(1) 1508/     605 :                     ; .tl_lv2_ok:
(1) 1509/     605 :                     ; 		ld	a,(hl)
(1) 1510/     605 :                     ; 		add 	a,c
(1) 1511/     605 :                     ; 		or	a
(1) 1512/     605 :                     ; 		jp	p,.tl_lv2_tm
(1) 1513/     605 :                     ; 		ld	a,7Fh
(1) 1514/     605 :                     ; .tl_lv2_tm:
(1) 1515/     605 :                     ; 		ld	e,a
(1) 1516/     605 :                     ; 		call	SndDrv_FmAutoSet
(1) 1517/     605 :                     ; .tl_lv2:
(1) 1518/     605 :                     ; 		inc 	hl
(1) 1519/     605 :                     ; 		inc 	d
(1) 1520/     605 :                     ; 		inc 	d
(1) 1521/     605 :                     ; 		inc 	d
(1) 1522/     605 :                     ; 		inc 	d
(1) 1523/     605 :                     ; 		ld	a,b
(1) 1524/     605 :                     ; 		and	100b
(1) 1525/     605 :                     ; 		or	a
(1) 1526/     605 :                     ; 		jp	z,.tl_lv3
(1) 1527/     605 :                     ; 		ld	a,(hl)
(1) 1528/     605 :                     ; 		add 	a,c
(1) 1529/     605 :                     ; 		or	a
(1) 1530/     605 :                     ; 		jp	p,.tl_lv3_tm
(1) 1531/     605 :                     ; 		ld	a,7Fh
(1) 1532/     605 :                     ; .tl_lv3_tm:
(1) 1533/     605 :                     ; 		ld	e,a
(1) 1534/     605 :                     ; 		call	SndDrv_FmAutoSet
(1) 1535/     605 :                     ; .tl_lv3:
(1) 1536/     605 :                     ; 		inc 	hl
(1) 1537/     605 :                     ; 		inc 	d
(1) 1538/     605 :                     ; 		inc 	d
(1) 1539/     605 :                     ; 		inc 	d
(1) 1540/     605 :                     ; 		inc 	d
(1) 1541/     605 :                     ; 		ld	a,(hl)
(1) 1542/     605 :                     ; 		add 	a,c
(1) 1543/     605 :                     ; 		or	a
(1) 1544/     605 :                     ; 		jp	p,.tl_lv4_tm
(1) 1545/     605 :                     ; 		ld	a,7Fh
(1) 1546/     605 :                     ; .tl_lv4_tm:
(1) 1547/     605 :                     ; 		ld	e,a
(1) 1548/     605 :                     ; 		inc 	hl
(1) 1549/     605 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1550/     605 :                     
(1) 1551/     605 :                     ; ------------------------------------
(1) 1552/     605 :                     
(1) 1553/     605 :                     .set_sampl:
(1) 1554/     605 : C9                  		ret
(1) 1555/     606 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1556/     606 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1557/     606 :                     ; 
(1) 1558/     606 :                     ; 		ld	e,(hl)
(1) 1559/     606 :                     ; 		inc 	hl
(1) 1560/     606 :                     ; 		ld	d,(hl)
(1) 1561/     606 :                     ; 		inc 	hl
(1) 1562/     606 :                     ; 		ld	a,(hl)
(1) 1563/     606 :                     ; 		inc 	hl
(1) 1564/     606 :                     ; 		ld	(Sample_Start),de
(1) 1565/     606 :                     ; 		ld	(Sample_Start+2),a
(1) 1566/     606 :                     ; 
(1) 1567/     606 :                     ; 		ld	e,(hl)
(1) 1568/     606 :                     ; 		inc 	hl
(1) 1569/     606 :                     ; 		ld	d,(hl)
(1) 1570/     606 :                     ; 		inc 	hl
(1) 1571/     606 :                     ; 		ld	a,(hl)
(1) 1572/     606 :                     ; 		inc 	hl
(1) 1573/     606 :                     ; 		ld	(Sample_End),de
(1) 1574/     606 :                     ; 		ld	(Sample_End+2),a
(1) 1575/     606 :                     ; 		
(1) 1576/     606 :                     ; 		ld	e,(hl)
(1) 1577/     606 :                     ; 		inc 	hl
(1) 1578/     606 :                     ; 		ld	d,(hl)
(1) 1579/     606 :                     ; 		inc 	hl
(1) 1580/     606 :                     ; 		ld	a,(hl)
(1) 1581/     606 :                     ; 		inc 	hl
(1) 1582/     606 :                     ; 		ld	(Sample_Loop),de
(1) 1583/     606 :                     ; 		ld	(Sample_Loop+2),a
(1) 1584/     606 :                     ; 		
(1) 1585/     606 :                     ; 		ld	a,(hl)
(1) 1586/     606 :                     ; 		ld	(ix+chnl_SmplFlags),a
(1) 1587/     606 :                     ; 		ret
(1) 1588/     606 :                     		
(1) 1589/     606 :                     ; --------------------------------------------
(1) 1590/     606 :                     ; Set PSG Volume
(1) 1591/     606 :                     ; --------------------------------------------
(1) 1592/     606 :                     
(1) 1593/     606 :                     .set_psg_vol:
(1) 1594/     606 : FD 86 21            		add	a,(iy+trck_Volume)
(1) 1595/     609 : 1E 00               		ld	e,0
(1) 1596/     60B : FE 40               		cp	40h
(1) 1597/     60D : DA 12 06            		jp	c,.pntoo_much
(1) 1598/     610 : 3E 40               		ld	a,40h
(1) 1599/     612 :                     .pntoo_much:
(1) 1600/     612 : B7                  		or	a
(1) 1601/     613 : F2 17 06            		jp	p,.pntoo_low
(1) 1602/     616 : AF                  		xor	a
(1) 1603/     617 :                     .pntoo_low:
(1) 1604/     617 : FE 40               		cp	40h
(1) 1605/     619 : CA 23 06            		jp	z,.pntoppsgv
(1) 1606/     61C : 3D                  		dec 	a
(1) 1607/     61D : 0F                  		rrca
(1) 1608/     61E : 0F                  		rrca
(1) 1609/     61F : 2F                  		cpl
(1) 1610/     620 : E6 0F               		and	00001111b
(1) 1611/     622 : 5F                  		ld	e,a
(1) 1612/     623 :                     .pntoppsgv:
(1) 1613/     623 : 7B                  		ld	a,e
(1) 1614/     624 : E6 0F               		and	00001111b
(1) 1615/     626 : DD 77 0E            		ld	(ix+chnl_PsgVolBase),a
(1) 1616/     629 : C9                  		ret
(1) 1617/     62A :                     
(1) 1618/     62A :                     ; --------------------------------------------
(1) 1619/     62A :                     ; Set PSG Frequency
(1) 1620/     62A :                     ; 
(1) 1621/     62A :                     ; hl - frequency
(1) 1622/     62A :                     ; --------------------------------------------
(1) 1623/     62A :                     
(1) 1624/     62A :                     .set_psg_freq:
(1) 1625/     62A : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1626/     62D : E6 E0               		and	11100000b
(1) 1627/     62F : 47                  		ld	b,a
(1) 1628/     630 : FE C0               		cp	0C0h
(1) 1629/     632 : C2 3D 06            		jp	nz,.not_nse3
(1) 1630/     635 : FD 7E 0C            		ld	a,(iy+trck_PsgNoise)
(1) 1631/     638 : E6 03               		and	3
(1) 1632/     63A : FE 03               		cp	3
(1) 1633/     63C : C8                  		ret	z
(1) 1634/     63D :                     .not_nse3:
(1) 1635/     63D : 78                  		ld	a,b
(1) 1636/     63E : FE E0               		cp	0E0h
(1) 1637/     640 : C2 4D 06            		jp	nz,.not_nse
(1) 1638/     643 : DD 7E 0B            		ld	a,(ix+chnl_InsType)
(1) 1639/     646 : E6 03               		and	011b
(1) 1640/     648 : FE 03               		cp	3
(1) 1641/     64A : C0                  		ret	nz
(1) 1642/     64B : 06 C0               		ld	b,0C0h
(1) 1643/     64D :                     .not_nse:
(1) 1644/     64D : 7C                  		ld	a,h
(1) 1645/     64E : B5                  		or	l
(1) 1646/     64F : C8                  		ret	z
(1) 1647/     650 :                     		
(1) 1648/     650 : 7D                  		ld	a,l
(1) 1649/     651 : 57                  		ld	d,a
(1) 1650/     652 : E6 0F               		and 	00001111b
(1) 1651/     654 : B0                  		or	b
(1) 1652/     655 : 5F                  		ld	e,a
(1) 1653/     656 : 7D                  		ld	a,l
(1) 1654/     657 : 0F                  		rrca
(1) 1655/     658 : 0F                  		rrca
(1) 1656/     659 : 0F                  		rrca
(1) 1657/     65A : 0F                  		rrca
(1) 1658/     65B : E6 0F               		and	00001111b
(1) 1659/     65D : 57                  		ld	d,a
(1) 1660/     65E : 7C                  		ld	a,h
(1) 1661/     65F : 0F                  		rrca
(1) 1662/     660 : 0F                  		rrca
(1) 1663/     661 : 0F                  		rrca
(1) 1664/     662 : 0F                  		rrca
(1) 1665/     663 : E6 30               		and	00110000b
(1) 1666/     665 : B2                  		or	d
(1) 1667/     666 : DD 77 18            		ld	(ix+(chnl_PsgOutFreq+1)),a
(1) 1668/     669 : DD 73 17            		ld	(ix+chnl_PsgOutFreq),e
(1) 1669/     66C : C9                  		ret
(1) 1670/     66D :                     
(1) 1671/     66D :                     ; --------------------------------
(1) 1672/     66D :                     ; Run effects
(1) 1673/     66D :                     ; 
(1) 1674/     66D :                     ; apply effects on the channels
(1) 1675/     66D :                     ; if unlocked
(1) 1676/     66D :                     ; --------------------------------
(1) 1677/     66D :                     
(1) 1678/     66D :                     .run_effect:
(1) 1679/     66D : 11 00 00            		ld	de,0
(1) 1680/     670 : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1) 1681/     673 : 87                  		add 	a,a
(1) 1682/     674 : E6 FE               		and	11111110b
(1) 1683/     676 : 5F                  		ld	e,a
(1) 1684/     677 : 21 86 06            		ld	hl,.list_doeff
(1) 1685/     67A : 19                  		add	hl,de
(1) 1686/     67B : DD 46 00            		ld	b,(ix+chnl_Chip)
(1) 1687/     67E : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1) 1688/     681 : 7E                  		ld	a,(hl)
(1) 1689/     682 : 23                  		inc	hl
(1) 1690/     683 : 66                  		ld	h,(hl)
(1) 1691/     684 : 6F                  		ld	l,a
(1) 1692/     685 : E9                  		jp	(hl)
(1) 1693/     686 :                     .list_doeff:
(1) 1694/     686 : A8 04               		dw .eff_null
(1) 1695/     688 : A8 04               		dw .eff_null	; A | Set ticks
(1) 1696/     68A : A8 04               		dw .eff_null	; B | Jump to block
(1) 1697/     68C : A8 04               		dw .eff_null	; C | Break to row (not possible here)
(1) 1698/     68E : BC 06               		dw .set_D	; D | Volume slide
(1) 1699/     690 : D6 06               		dw .set_E_F	; E
(1) 1700/     692 : D6 06               		dw .set_E_F	; F
(1) 1701/     694 : A8 04               		dw .eff_null	; G
(1) 1702/     696 : A8 04               		dw .eff_null	; H
(1) 1703/     698 : A8 04               		dw .eff_null	; I
(1) 1704/     69A : A8 04               		dw .eff_null	; J	
(1) 1705/     69C : A8 04               		dw .eff_null	; K
(1) 1706/     69E : A8 04               		dw .eff_null	; L
(1) 1707/     6A0 : A8 04               		dw .eff_null	; M
(1) 1708/     6A2 : A8 04               		dw .eff_null	; N
(1) 1709/     6A4 : A8 04               		dw .eff_null	; O
(1) 1710/     6A6 : A8 04               		dw .eff_null	; P
(1) 1711/     6A8 : A8 04               		dw .eff_null	; Q
(1) 1712/     6AA : A8 04               		dw .eff_null	; R
(1) 1713/     6AC : A8 04               		dw .eff_null	; S
(1) 1714/     6AE : A8 04               		dw .eff_null	; T
(1) 1715/     6B0 : A8 04               		dw .eff_null	; U
(1) 1716/     6B2 : A8 04               		dw .eff_null	; V
(1) 1717/     6B4 : A8 04               		dw .eff_null	; W
(1) 1718/     6B6 : 11 07               		dw .set_X	; X
(1) 1719/     6B8 : A8 04               		dw .eff_null	; Y
(1) 1720/     6BA : A8 04               		dw .eff_null	; Z
(1) 1721/     6BC :                     
(1) 1722/     6BC :                     ; ------------------------------------
(1) 1723/     6BC :                     ; Effect D - Volume slide
(1) 1724/     6BC :                     ; ------------------------------------
(1) 1725/     6BC :                     
(1) 1726/     6BC :                     .set_D:
(1) 1727/     6BC : DD 7E 12            		ld	a,(ix+chnl_EfNewVol)
(1) 1728/     6BF : DD 86 11            		add 	a,(ix+chnl_EfVolSlide)
(1) 1729/     6C2 : DD 77 12            		ld	(ix+chnl_EfNewVol),a
(1) 1730/     6C5 : CB 78               		bit	7,b
(1) 1731/     6C7 : C2 D0 06            		jp	nz,.setpsg_vol
(1) 1732/     6CA : DD 46 12            		ld	b,(ix+chnl_EfNewVol)
(1) 1733/     6CD : C3 04 06            		jp	.set_fm_vol
(1) 1734/     6D0 :                     .setpsg_vol:
(1) 1735/     6D0 : DD 7E 12            		ld	a,(ix+chnl_EfNewVol)
(1) 1736/     6D3 : C3 06 06            		jp	.set_psg_vol
(1) 1737/     6D6 :                     
(1) 1738/     6D6 :                     ; ------------------------------------
(1) 1739/     6D6 :                     ; Effect E - Portametro down
(1) 1740/     6D6 :                     ; ------------------------------------
(1) 1741/     6D6 :                     
(1) 1742/     6D6 :                     .set_E_F:
(1) 1743/     6D6 : DD CB 00 7E         		bit	7,(ix+chnl_Chip)
(1) 1744/     6DA : C2 F3 06            		jp	nz,.psg_EF
(1) 1745/     6DD :                     		
(1) 1746/     6DD : DD 56 14            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1747/     6E0 : DD 5E 13            		ld	e,(ix+chnl_EfPortam)
(1) 1748/     6E3 : DD 66 16            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1749/     6E6 : DD 6E 15            		ld	l,(ix+chnl_EfNewFreq)
(1) 1750/     6E9 : 19                  		add 	hl,de
(1) 1751/     6EA : DD 74 16            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1752/     6ED : DD 75 15            		ld	(ix+chnl_EfNewFreq),l
(1) 1753/     6F0 : C3 03 06            		jp	.set_fm_freq
(1) 1754/     6F3 :                     
(1) 1755/     6F3 :                     .psg_EF:
(1) 1756/     6F3 : DD 56 14            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1757/     6F6 : DD 5E 13            		ld	e,(ix+chnl_EfPortam)
(1) 1758/     6F9 : DD 66 16            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1759/     6FC : DD 6E 15            		ld	l,(ix+chnl_EfNewFreq)
(1) 1760/     6FF : 37                  		scf
(1) 1761/     700 : ED 52               		sbc 	hl,de
(1) 1762/     702 : F2 08 07            		jp	p,.toolow
(1) 1763/     705 : 21 00 00            		ld	hl,0
(1) 1764/     708 :                     .toolow:
(1) 1765/     708 : DD 74 16            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1766/     70B : DD 75 15            		ld	(ix+chnl_EfNewFreq),l
(1) 1767/     70E : C3 2A 06            		jp	.set_psg_freq
(1) 1768/     711 :                     		
(1) 1769/     711 :                     ; ------------------------------------
(1) 1770/     711 :                     ; Effect X - Set panning (FM ONLY)
(1) 1771/     711 :                     ; ------------------------------------
(1) 1772/     711 :                     
(1) 1773/     711 :                     .set_X:
(1) 1774/     711 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1775/     711 :                     ; 		or	a
(1) 1776/     711 :                     ; 		ret 	p
(1) 1777/     711 :                     ; 		rlca
(1) 1778/     711 :                     ; 		rlca
(1) 1779/     711 :                     ; 		rlca
(1) 1780/     711 :                     ; 		and	00000011b
(1) 1781/     711 :                     ; 
(1) 1782/     711 :                     ; 		ld	d,11101110b
(1) 1783/     711 :                     ; 		ld	e,(ix+chnl_PsgPan)
(1) 1784/     711 :                     ; 		dec	a
(1) 1785/     711 :                     ; 		jp	m,.stopstrchk
(1) 1786/     711 :                     ; 		rlc 	d
(1) 1787/     711 :                     ; 		rlc	e
(1) 1788/     711 :                     ; 		dec	a
(1) 1789/     711 :                     ; 		jp	m,.stopstrchk
(1) 1790/     711 :                     ; 		rlc 	d
(1) 1791/     711 :                     ; 		rlc	e
(1) 1792/     711 :                     ; 		dec	a
(1) 1793/     711 :                     ; 		jp	m,.stopstrchk
(1) 1794/     711 :                     ; 		rlc 	d
(1) 1795/     711 :                     ; 		rlc 	e
(1) 1796/     711 :                     ; .stopstrchk:
(1) 1797/     711 :                     ; 		ld	a,(curr_PsgStereo)
(1) 1798/     711 :                     ; 		and 	d
(1) 1799/     711 :                     ; 		or	e
(1) 1800/     711 :                     ; 		ld	(curr_PsgStereo),a
(1) 1801/     711 : C9                  		ret
(1) 1802/     712 :                     		
(1) 1803/     712 :                     ; 		ld	a,(iy+trck_PsgStereo)
(1) 1804/     712 :                     
(1) 1805/     712 :                     ; 		ret
(1) 1806/     712 :                     ; 		ld	d,0B4h
(1) 1807/     712 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1808/     712 :                     ; 		and	11b
(1) 1809/     712 :                     ; 		or	d
(1) 1810/     712 :                     ; 		ld	d,a
(1) 1811/     712 :                     ; 		ld	a,(ix+chnl_FmRegB4)
(1) 1812/     712 :                     ; 		or	(ix+chnl_PsgPan)
(1) 1813/     712 :                     ; 		ld	e,a
(1) 1814/     712 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1815/     712 :                     
(1) 1816/     712 :                     ; ===================================================================
(1) 1817/     712 :                     ; ----------------------------------------------------
(1) 1818/     712 :                     ; Subs
(1) 1819/     712 :                     ; ----------------------------------------------------
(1) 1820/     712 :                     
(1) 1821/     712 :                     ; ------------------------------------
(1) 1822/     712 :                     ; Track request
(1) 1823/     712 :                     ; ------------------------------------
(1) 1824/     712 :                     
(1) 1825/     712 :                     SndDrv_ReqTrack:
(1) 1826/     712 : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1) 1827/     715 : FD 36 0A 00         		ld	(iy+trck_ReqFlag),0
(1) 1828/     719 : FD 36 0C E0         		ld	(iy+trck_PsgNoise),0E0h
(1) 1829/     71D : 07                  		rlca
(1) 1830/     71E : E6 FE               		and	11111110b
(1) 1831/     720 : 11 00 00            		ld	de,0
(1) 1832/     723 : 5F                  		ld	e,a
(1) 1833/     724 : 21 2D 07            		ld	hl,.req_list
(1) 1834/     727 : 19                  		add	hl,de
(1) 1835/     728 : 7E                  		ld	a,(hl)
(1) 1836/     729 : 23                  		inc	hl
(1) 1837/     72A : 66                  		ld	h,(hl)
(1) 1838/     72B : 6F                  		ld	l,a
(1) 1839/     72C : E9                  		jp	(hl)
(1) 1840/     72D :                     .req_list:
(1) 1841/     72D : 00 00               		dw 0
(1) 1842/     72F : 33 07               		dw .req01
(1) 1843/     731 : 8C 07               		dw .req02
(1) 1844/     733 :                     
(1) 1845/     733 :                     ; ------------------------------------
(1) 1846/     733 :                     ; Flag 01h
(1) 1847/     733 :                     ; ------------------------------------
(1) 1848/     733 :                     
(1) 1849/     733 :                     .req01:
(1) 1850/     733 : FD 46 00            		ld	b,(iy+trck_ReqBlk)		; Copy addresses
(1) 1851/     736 : FD 4E 01            		ld	c,(iy+(trck_ReqBlk+1))
(1) 1852/     739 : FD 56 02            		ld	d,(iy+trck_ReqPatt)
(1) 1853/     73C : FD 5E 03            		ld	e,(iy+(trck_ReqPatt+1))
(1) 1854/     73F : FD 66 04            		ld	h,(iy+trck_ReqIns)
(1) 1855/     742 : FD 6E 05            		ld	l,(iy+(trck_ReqIns+1))
(1) 1856/     745 : FD 70 12            		ld	(iy+trck_Blocks),b
(1) 1857/     748 : FD 71 13            		ld	(iy+(trck_Blocks+1)),c
(1) 1858/     74B : FD 72 14            		ld	(iy+trck_PattBase),d
(1) 1859/     74E : FD 73 15            		ld	(iy+(trck_PattBase+1)),e
(1) 1860/     751 : FD 72 18            		ld	(iy+trck_PattRead),d
(1) 1861/     754 : FD 73 19            		ld	(iy+(trck_PattRead+1)),e
(1) 1862/     757 : FD 74 16            		ld	(iy+trck_Instr),h
(1) 1863/     75A : FD 75 17            		ld	(iy+(trck_Instr+1)),l
(1) 1864/     75D : FD 56 06            		ld	d,(iy+trck_ReqTicks)		; Tempo and ticks
(1) 1865/     760 : FD 4E 07            		ld	c,(iy+trck_ReqTempo)
(1) 1866/     763 : FD 46 08            		ld	b,(iy+trck_ReqCurrBlk)
(1) 1867/     766 : FD 7E 09            		ld	a,(iy+trck_ReqSndBnk)
(1) 1868/     769 : FD 72 1F            		ld	(iy+trck_TicksCurr),d
(1) 1869/     76C : FD 72 1C            		ld	(iy+trck_TicksMain),d
(1) 1870/     76F : FD 72 0D            		ld	(iy+trck_TicksRead),d
(1) 1871/     772 : FD 71 1D            		ld	(iy+trck_TempoBits),c
(1) 1872/     775 : FD 70 0E            		ld	(iy+trck_BlockCurr),b
(1) 1873/     778 : 32 49 C1            		ld	(curr_SndBank),a
(1) 1874/     77B : AF                  		xor	a
(1) 1875/     77C : FD 77 1A            		ld	(iy+trck_RowSteps),a
(1) 1876/     77F : FD 77 1B            		ld	(iy+(trck_RowSteps+1)),a		
(1) 1877/     782 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1) 1878/     785 : 3C                  		inc 	a
(1) 1879/     786 : FD 77 11            		ld	(iy+trck_Active),a
(1) 1880/     789 : C3 90 07            		jp	SndDrv_ResetChan
(1) 1881/     78C :                     		
(1) 1882/     78C :                     ; ------------------------------------
(1) 1883/     78C :                     ; Flag 02h
(1) 1884/     78C :                     ; ------------------------------------
(1) 1885/     78C :                     
(1) 1886/     78C :                     .req02:
(1) 1887/     78C : AF                  		xor	a
(1) 1888/     78D : FD 77 11            		ld	(iy+trck_Active),a
(1) 1889/     790 :                     
(1) 1890/     790 :                     ; ------------------------------------
(1) 1891/     790 :                     ; Reset channels and silence them
(1) 1892/     790 :                     ; ------------------------------------
(1) 1893/     790 :                     
(1) 1894/     790 :                     SndDrv_ResetChan:
(1) 1895/     790 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1) 1896/     793 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1) 1897/     796 : B7                  		or	a
(1) 1898/     797 : CA 9D 07            		jp	z,.lowprio
(1) 1899/     79A : 21 44 C1            		ld	hl,SndBuff_UsedChnls_2
(1) 1900/     79D :                     .lowprio:
(1) 1901/     79D : 06 04               		ld	b,MAX_CHNLS
(1) 1902/     79F : AF                  		xor	a
(1) 1903/     7A0 :                     .nexttype:
(1) 1904/     7A0 : 77                  		ld	(hl),a
(1) 1905/     7A1 : 23                  		inc 	hl
(1) 1906/     7A2 : 10 FC               		djnz	.nexttype
(1) 1907/     7A4 :                     		
(1) 1908/     7A4 :                     	; Clean first PSG channels
(1) 1909/     7A4 : DD E5               		push	ix
(1) 1910/     7A6 : 06 04               		ld	b,4			; 4 channels
(1) 1911/     7A8 : AF                  		xor	a
(1) 1912/     7A9 : 11 20 00            		ld	de,20h
(1) 1913/     7AC : 0E 11               		ld	c,00010001b
(1) 1914/     7AE :                     .initchnls:
(1) 1915/     7AE : DD 36 01 00         		ld	(ix+chnl_Type),0	; Note request
(1) 1916/     7B2 : DD 36 02 FE         		ld	(ix+chnl_Note),-2	; Set Note off
(1) 1917/     7B6 : DD 36 04 40         		ld	(ix+chnl_Vol),64	; Max volume
(1) 1918/     7BA : DD 36 12 40         		ld	(ix+chnl_EfNewVol),64
(1) 1919/     7BE : DD 71 0D            		ld	(ix+chnl_PsgPan),c
(1) 1920/     7C1 : DD 77 0B            		ld	(ix+chnl_InsType),a
(1) 1921/     7C4 : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1) 1922/     7C7 : DD 77 11            		ld	(ix+chnl_EfVolSlide),a
(1) 1923/     7CA : DD 77 0F            		ld	(ix+chnl_PsgVolEnv),a
(1) 1924/     7CD : DD 77 10            		ld	(ix+chnl_PsgIndx),a
(1) 1925/     7D0 : CB 01               		rlc 	c
(1) 1926/     7D2 : DD 19               		add 	ix,de
(1) 1927/     7D4 : 10 D8               		djnz	.initchnls
(1) 1928/     7D6 : DD E1               		pop	ix
(1) 1929/     7D8 :                     
(1) 1930/     7D8 :                     ; ------------------------------------
(1) 1931/     7D8 :                     
(1) 1932/     7D8 : DD E5               		push	ix
(1) 1933/     7DA : 11 44 C1            		ld	de,SndBuff_UsedChnls_2
(1) 1934/     7DD : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1) 1935/     7E0 : 06 04               		ld	b,MAX_CHNLS
(1) 1936/     7E2 :                     .nxtfmchnl:
(1) 1937/     7E2 : C5                  		push	bc
(1) 1938/     7E3 : 1A                  		ld	a,(de)
(1) 1939/     7E4 : 4E                  		ld	c,(hl)
(1) 1940/     7E5 : B1                  		or	c
(1) 1941/     7E6 : B7                  		or	a
(1) 1942/     7E7 : C2 F8 07            		jp	nz,.dontvolfm
(1) 1943/     7EA : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1944/     7ED : B7                  		or	a
(1) 1945/     7EE : F2 F8 07            		jp	p,.fm_shut
(1) 1946/     7F1 : F6 1F               		or	01Fh
(1) 1947/     7F3 : D3 7F               		out	(psg_ctrl),a
(1) 1948/     7F5 : C3 F8 07            		jp	.dontvolfm
(1) 1949/     7F8 :                     .fm_shut:
(1) 1950/     7F8 :                     ; 		push 	de
(1) 1951/     7F8 :                     ; 		ld	d,28h
(1) 1952/     7F8 :                     ; 		ld	e,a
(1) 1953/     7F8 :                     ; 		call	SndDrv_FmSet_1
(1) 1954/     7F8 :                     ; 		pop	de
(1) 1955/     7F8 :                     .dontvolfm:
(1) 1956/     7F8 : 23                  		inc 	hl
(1) 1957/     7F9 : 13                  		inc 	de
(1) 1958/     7FA : 01 20 00            		ld	bc,20h
(1) 1959/     7FD : DD 09               		add 	ix,bc
(1) 1960/     7FF : C1                  		pop	bc
(1) 1961/     800 : 10 E0               		djnz	.nxtfmchnl
(1) 1962/     802 : DD E1               		pop	ix
(1) 1963/     804 : C9                  		ret
(1) 1964/     805 :                     
(1) 1965/     805 :                     ; ---------------------------------------------
(1) 1966/     805 :                     ; FM send registers
(1) 1967/     805 :                     ; 
(1) 1968/     805 :                     ; Input:
(1) 1969/     805 :                     ; d - ctrl
(1) 1970/     805 :                     ; e - data
(1) 1971/     805 :                     ; c - channel
(1) 1972/     805 :                     ; ---------------------------------------------
(1) 1973/     805 :                     
(1) 1974/     805 :                     ; SndDrv_FmAutoSet:
(1) 1975/     805 :                     ; 		bit 	2,(ix+chnl_Chip)
(1) 1976/     805 :                     ; 		jp	nz,SndDrv_FmSet_2
(1) 1977/     805 :                     ; 		
(1) 1978/     805 :                     ; SndDrv_FmSet_1:
(1) 1979/     805 :                     ; 		ld	a,d
(1) 1980/     805 :                     ; 		ld	(Zym_ctrl_1),a
(1) 1981/     805 :                     ; 		nop
(1) 1982/     805 :                     ; 		ld	a,e
(1) 1983/     805 :                     ; 		ld	(Zym_data_1),a
(1) 1984/     805 :                     ; 		nop
(1) 1985/     805 :                     ; 		ret
(1) 1986/     805 :                     ; 
(1) 1987/     805 :                     ; SndDrv_FmSet_2:
(1) 1988/     805 :                     ; 		ld	a,d
(1) 1989/     805 :                     ; 		ld	(Zym_ctrl_2),a
(1) 1990/     805 :                     ; 		nop
(1) 1991/     805 :                     ; 		ld	a,e
(1) 1992/     805 :                     ; 		ld	(Zym_data_2),a
(1) 1993/     805 :                     ; 		nop
(1) 1994/     805 :                     ; 		ret
(1) 1995/     805 :                     
(1) 1996/     805 :                     ; ====================================================================
(1) 1997/     805 :                     ; fmFreq_List:	dw 644			; C-0
(1) 1998/     805 :                     ; 		dw 681
(1) 1999/     805 :                     ; 		dw 722
(1) 2000/     805 :                     ; 		dw 765
(1) 2001/     805 :                     ; 		dw 810
(1) 2002/     805 :                     ; 		dw 858
(1) 2003/     805 :                     ; 		dw 910
(1) 2004/     805 :                     ; 		dw 964
(1) 2005/     805 :                     ; 		dw 1021
(1) 2006/     805 :                     ; 		dw 1081
(1) 2007/     805 :                     ; 		dw 1146
(1) 2008/     805 :                     ; 		dw 1214
(1) 2009/     805 :                     ; 		dw 644|800h		; C-1
(1) 2010/     805 :                     ; 		dw 681|800h
(1) 2011/     805 :                     ; 		dw 722|800h
(1) 2012/     805 :                     ; 		dw 765|800h
(1) 2013/     805 :                     ; 		dw 810|800h
(1) 2014/     805 :                     ; 		dw 858|800h
(1) 2015/     805 :                     ; 		dw 910|800h
(1) 2016/     805 :                     ; 		dw 964|800h
(1) 2017/     805 :                     ; 		dw 1021|800h
(1) 2018/     805 :                     ; 		dw 1081|800h
(1) 2019/     805 :                     ; 		dw 1146|800h
(1) 2020/     805 :                     ; 		dw 1214|800h
(1) 2021/     805 :                     ; 		dw 644|1000h		; C-2
(1) 2022/     805 :                     ; 		dw 681|1000h
(1) 2023/     805 :                     ; 		dw 722|1000h
(1) 2024/     805 :                     ; 		dw 765|1000h
(1) 2025/     805 :                     ; 		dw 810|1000h
(1) 2026/     805 :                     ; 		dw 858|1000h
(1) 2027/     805 :                     ; 		dw 910|1000h
(1) 2028/     805 :                     ; 		dw 964|1000h
(1) 2029/     805 :                     ; 		dw 1021|1000h
(1) 2030/     805 :                     ; 		dw 1081|1000h
(1) 2031/     805 :                     ; 		dw 1146|1000h
(1) 2032/     805 :                     ; 		dw 1214|1000h
(1) 2033/     805 :                     ; 		dw 644|1800h		; C-3
(1) 2034/     805 :                     ; 		dw 681|1800h
(1) 2035/     805 :                     ; 		dw 722|1800h
(1) 2036/     805 :                     ; 		dw 765|1800h
(1) 2037/     805 :                     ; 		dw 810|1800h
(1) 2038/     805 :                     ; 		dw 858|1800h
(1) 2039/     805 :                     ; 		dw 910|1800h
(1) 2040/     805 :                     ; 		dw 964|1800h
(1) 2041/     805 :                     ; 		dw 1021|1800h
(1) 2042/     805 :                     ; 		dw 1081|1800h
(1) 2043/     805 :                     ; 		dw 1146|1800h
(1) 2044/     805 :                     ; 		dw 1214|1800h
(1) 2045/     805 :                     ; 		dw 644|2000h		; C-4
(1) 2046/     805 :                     ; 		dw 681|2000h
(1) 2047/     805 :                     ; 		dw 722|2000h
(1) 2048/     805 :                     ; 		dw 765|2000h
(1) 2049/     805 :                     ; 		dw 810|2000h
(1) 2050/     805 :                     ; 		dw 858|2000h
(1) 2051/     805 :                     ; 		dw 910|2000h
(1) 2052/     805 :                     ; 		dw 964|2000h
(1) 2053/     805 :                     ; 		dw 1021|2000h
(1) 2054/     805 :                     ; 		dw 1081|2000h
(1) 2055/     805 :                     ; 		dw 1146|2000h
(1) 2056/     805 :                     ; 		dw 1214|2000h
(1) 2057/     805 :                     ; 		dw 644|2800h		; C-5
(1) 2058/     805 :                     ; 		dw 681|2800h
(1) 2059/     805 :                     ; 		dw 722|2800h
(1) 2060/     805 :                     ; 		dw 765|2800h
(1) 2061/     805 :                     ; 		dw 810|2800h
(1) 2062/     805 :                     ; 		dw 858|2800h
(1) 2063/     805 :                     ; 		dw 910|2800h
(1) 2064/     805 :                     ; 		dw 964|2800h
(1) 2065/     805 :                     ; 		dw 1021|2800h
(1) 2066/     805 :                     ; 		dw 1081|2800h
(1) 2067/     805 :                     ; 		dw 1146|2800h
(1) 2068/     805 :                     ; 		dw 1214|2800h		
(1) 2069/     805 :                     ; 		dw 644|3000h		; C-6
(1) 2070/     805 :                     ; 		dw 681|3000h
(1) 2071/     805 :                     ; 		dw 722|3000h
(1) 2072/     805 :                     ; 		dw 765|3000h
(1) 2073/     805 :                     ; 		dw 810|3000h
(1) 2074/     805 :                     ; 		dw 858|3000h
(1) 2075/     805 :                     ; 		dw 910|3000h
(1) 2076/     805 :                     ; 		dw 964|3000h
(1) 2077/     805 :                     ; 		dw 1021|3000h
(1) 2078/     805 :                     ; 		dw 1081|3000h
(1) 2079/     805 :                     ; 		dw 1146|3000h
(1) 2080/     805 :                     ; 		dw 1214|3000h
(1) 2081/     805 :                     ; 		dw 644|3800h		; C-7
(1) 2082/     805 :                     ; 		dw 681|3800h
(1) 2083/     805 :                     ; 		dw 722|3800h
(1) 2084/     805 :                     ; 		dw 765|3800h
(1) 2085/     805 :                     ; 		dw 810|3800h
(1) 2086/     805 :                     ; 		dw 858|3800h
(1) 2087/     805 :                     ; 		dw 910|3800h
(1) 2088/     805 :                     ; 		dw 964|3800h
(1) 2089/     805 :                     ; 		dw 1021|3800h
(1) 2090/     805 :                     ; 		dw 1081|3800h
(1) 2091/     805 :                     ; 		dw 1146|3800h
(1) 2092/     805 :                     ; 		dw 1214|3800h
(1) 2093/     805 :                     
(1) 2094/     805 :                     psgFreq_List:
(1) 2095/     805 : FF FF               		dw -1		; C-0 $0
(1) 2096/     807 : FF FF               		dw -1
(1) 2097/     809 : FF FF               		dw -1
(1) 2098/     80B : FF FF               		dw -1
(1) 2099/     80D : FF FF               		dw -1
(1) 2100/     80F : FF FF               		dw -1
(1) 2101/     811 : FF FF               		dw -1
(1) 2102/     813 : FF FF               		dw -1
(1) 2103/     815 : FF FF               		dw -1
(1) 2104/     817 : FF FF               		dw -1
(1) 2105/     819 : FF FF               		dw -1
(1) 2106/     81B : FF FF               		dw -1
(1) 2107/     81D : FF FF               		dw -1		; C-1 $C
(1) 2108/     81F : FF FF               		dw -1
(1) 2109/     821 : FF FF               		dw -1
(1) 2110/     823 : FF FF               		dw -1
(1) 2111/     825 : FF FF               		dw -1
(1) 2112/     827 : FF FF               		dw -1
(1) 2113/     829 : FF FF               		dw -1
(1) 2114/     82B : FF FF               		dw -1
(1) 2115/     82D : FF FF               		dw -1
(1) 2116/     82F : FF FF               		dw -1
(1) 2117/     831 : FF FF               		dw -1
(1) 2118/     833 : FF FF               		dw -1
(1) 2119/     835 : FF FF               		dw -1		; C-2 $18
(1) 2120/     837 : FF FF               		dw -1
(1) 2121/     839 : FF FF               		dw -1
(1) 2122/     83B : FF FF               		dw -1
(1) 2123/     83D : FF FF               		dw -1
(1) 2124/     83F : FF FF               		dw -1
(1) 2125/     841 : FF FF               		dw -1
(1) 2126/     843 : FF FF               		dw -1
(1) 2127/     845 : FF FF               		dw -1
(1) 2128/     847 : FF FF               		dw -1
(1) 2129/     849 : FF FF               		dw -1
(1) 2130/     84B : FF FF               		dw -1
(1) 2131/     84D : FF FF               		dw -1		; C-3 $24
(1) 2132/     84F : FF FF               		dw -1
(1) 2133/     851 : FF FF               		dw -1
(1) 2134/     853 : FF FF               		dw -1
(1) 2135/     855 : FF FF               		dw -1
(1) 2136/     857 : FF FF               		dw -1
(1) 2137/     859 : FF FF               		dw -1
(1) 2138/     85B : FF FF               		dw -1
(1) 2139/     85D : FF FF               		dw -1
(1) 2140/     85F : F8 03               		dw 3F8h
(1) 2141/     861 : BF 03               		dw 3BFh
(1) 2142/     863 : 89 03               		dw 389h
(1) 2143/     865 : 56 03               		dw 356h		;C-4 30
(1) 2144/     867 : 26 03               		dw 326h
(1) 2145/     869 : F9 02               		dw 2F9h
(1) 2146/     86B : CE 02               		dw 2CEh
(1) 2147/     86D : A5 02               		dw 2A5h
(1) 2148/     86F : 80 02               		dw 280h
(1) 2149/     871 : 5C 02               		dw 25Ch
(1) 2150/     873 : 3A 02               		dw 23Ah
(1) 2151/     875 : 1A 02               		dw 21Ah
(1) 2152/     877 : FB 01               		dw 1FBh
(1) 2153/     879 : DF 01               		dw 1DFh
(1) 2154/     87B : C4 01               		dw 1C4h
(1) 2155/     87D : AB 01               		dw 1ABh		;C-5 3C
(1) 2156/     87F : 93 01               		dw 193h
(1) 2157/     881 : 7D 01               		dw 17Dh
(1) 2158/     883 : 67 01               		dw 167h
(1) 2159/     885 : 53 01               		dw 153h
(1) 2160/     887 : 40 01               		dw 140h
(1) 2161/     889 : 2E 01               		dw 12Eh
(1) 2162/     88B : 1D 01               		dw 11Dh
(1) 2163/     88D : 0D 01               		dw 10Dh
(1) 2164/     88F : FE 00               		dw 0FEh
(1) 2165/     891 : EF 00               		dw 0EFh
(1) 2166/     893 : E2 00               		dw 0E2h
(1) 2167/     895 : D6 00               		dw 0D6h		;C-6 48
(1) 2168/     897 : C9 00               		dw 0C9h
(1) 2169/     899 : BE 00               		dw 0BEh
(1) 2170/     89B : B4 00               		dw 0B4h
(1) 2171/     89D : A9 00               		dw 0A9h
(1) 2172/     89F : A0 00               		dw 0A0h
(1) 2173/     8A1 : 97 00               		dw 97h
(1) 2174/     8A3 : 8F 00               		dw 8Fh
(1) 2175/     8A5 : 87 00               		dw 87h
(1) 2176/     8A7 : 7F 00               		dw 7Fh
(1) 2177/     8A9 : 78 00               		dw 78h
(1) 2178/     8AB : 71 00               		dw 71h
(1) 2179/     8AD : 6B 00               		dw 6Bh		; C-7 54
(1) 2180/     8AF : 65 00               		dw 65h
(1) 2181/     8B1 : 5F 00               		dw 5Fh
(1) 2182/     8B3 : 5A 00               		dw 5Ah
(1) 2183/     8B5 : 55 00               		dw 55h
(1) 2184/     8B7 : 50 00               		dw 50h
(1) 2185/     8B9 : 4B 00               		dw 4Bh
(1) 2186/     8BB : 47 00               		dw 47h
(1) 2187/     8BD : 43 00               		dw 43h
(1) 2188/     8BF : 40 00               		dw 40h
(1) 2189/     8C1 : 3C 00               		dw 3Ch
(1) 2190/     8C3 : 39 00               		dw 39h
(1) 2191/     8C5 : 36 00               		dw 36h		; C-8 $60
(1) 2192/     8C7 : 33 00               		dw 33h
(1) 2193/     8C9 : 30 00               		dw 30h
(1) 2194/     8CB : 2D 00               		dw 2Dh
(1) 2195/     8CD : 2B 00               		dw 2Bh
(1) 2196/     8CF : 28 00               		dw 28h
(1) 2197/     8D1 : 26 00               		dw 26h
(1) 2198/     8D3 : 24 00               		dw 24h
(1) 2199/     8D5 : 22 00               		dw 22h
(1) 2200/     8D7 : 20 00               		dw 20h
(1) 2201/     8D9 : 1F 00               		dw 1Fh
(1) 2202/     8DB : 1D 00               		dw 1Dh
(1) 2203/     8DD : 1B 00               		dw 1Bh		; C-9 $6C
(1) 2204/     8DF : 1A 00               		dw 1Ah
(1) 2205/     8E1 : 18 00               		dw 18h
(1) 2206/     8E3 : 17 00               		dw 17h
(1) 2207/     8E5 : 16 00               		dw 16h
(1) 2208/     8E7 : 15 00               		dw 15h
(1) 2209/     8E9 : 13 00               		dw 13h
(1) 2210/     8EB : 12 00               		dw 12h
(1) 2211/     8ED : 11 00               		dw 11h
(1) 2212/     8EF : 10 00                		dw 10h
(1) 2213/     8F1 : 09 00                		dw 9h
(1) 2214/     8F3 : 08 00                		dw 8h
(1) 2215/     8F5 : 00 00               		dw 0		; use +60 if using C-5 for tone 3 noise
(1) 2216/     8F7 :                     		
(1) 2217/     8F7 :                     ; wavFreq_List:	dw 100h		; C-0
(1) 2218/     8F7 :                     ; 		dw 100h
(1) 2219/     8F7 :                     ; 		dw 100h
(1) 2220/     8F7 :                     ; 		dw 100h
(1) 2221/     8F7 :                     ; 		dw 100h
(1) 2222/     8F7 :                     ; 		dw 100h
(1) 2223/     8F7 :                     ; 		dw 100h	
(1) 2224/     8F7 :                     ; 		dw 100h
(1) 2225/     8F7 :                     ; 		dw 100h
(1) 2226/     8F7 :                     ; 		dw 100h
(1) 2227/     8F7 :                     ; 		dw 100h
(1) 2228/     8F7 :                     ; 		dw 100h
(1) 2229/     8F7 :                     ; 		dw 100h		; C-1
(1) 2230/     8F7 :                     ; 		dw 100h
(1) 2231/     8F7 :                     ; 		dw 100h
(1) 2232/     8F7 :                     ; 		dw 100h
(1) 2233/     8F7 :                     ; 		dw 100h
(1) 2234/     8F7 :                     ; 		dw 100h
(1) 2235/     8F7 :                     ; 		dw 100h	
(1) 2236/     8F7 :                     ; 		dw 100h
(1) 2237/     8F7 :                     ; 		dw 100h
(1) 2238/     8F7 :                     ; 		dw 100h
(1) 2239/     8F7 :                     ; 		dw 100h
(1) 2240/     8F7 :                     ; 		dw 100h
(1) 2241/     8F7 :                     ; 		dw 100h		; C-2
(1) 2242/     8F7 :                     ; 		dw 100h
(1) 2243/     8F7 :                     ; 		dw 100h
(1) 2244/     8F7 :                     ; 		dw 100h
(1) 2245/     8F7 :                     ; 		dw 100h
(1) 2246/     8F7 :                     ; 		dw 100h
(1) 2247/     8F7 :                     ; 		dw 100h
(1) 2248/     8F7 :                     ; 		dw 100h
(1) 2249/     8F7 :                     ; 		dw 100h
(1) 2250/     8F7 :                     ; 		dw 100h
(1) 2251/     8F7 :                     ; 		dw 100h
(1) 2252/     8F7 :                     ; 		dw 03Bh
(1) 2253/     8F7 :                     ; 		dw 03Eh		; C-3 5512
(1) 2254/     8F7 :                     ; 		dw 043h		; C#3
(1) 2255/     8F7 :                     ; 		dw 046h		; D-3
(1) 2256/     8F7 :                     ; 		dw 049h		; D#3
(1) 2257/     8F7 :                     ; 		dw 04Eh		; E-3
(1) 2258/     8F7 :                     ; 		dw 054h		; F-3
(1) 2259/     8F7 :                     ; 		dw 058h		; F#3
(1) 2260/     8F7 :                     ; 		dw 05Eh		; G-3 8363 -17
(1) 2261/     8F7 :                     ; 		dw 063h		; G#3
(1) 2262/     8F7 :                     ; 		dw 068h		; A-3
(1) 2263/     8F7 :                     ; 		dw 070h		; A#3
(1) 2264/     8F7 :                     ; 		dw 075h		; B-3
(1) 2265/     8F7 :                     ; 		dw 07Fh		; C-4 11025 -12
(1) 2266/     8F7 :                     ; 		dw 088h		; C#4
(1) 2267/     8F7 :                     ; 		dw 08Fh		; D-4
(1) 2268/     8F7 :                     ; 		dw 097h		; D#4
(1) 2269/     8F7 :                     ; 		dw 0A0h		; E-4
(1) 2270/     8F7 :                     ; 		dw 0ADh		; F-4
(1) 2271/     8F7 :                     ; 		dw 0B5h		; F#4
(1) 2272/     8F7 :                     ; 		dw 0C0h		; G-4
(1) 2273/     8F7 :                     ; 		dw 0CCh		; G#4
(1) 2274/     8F7 :                     ; 		dw 0D7h		; A-4
(1) 2275/     8F7 :                     ; 		dw 0E7h		; A#4
(1) 2276/     8F7 :                     ; 		dw 0F0h		; B-4
(1) 2277/     8F7 :                     ; 		dw 100h		; C-5 22050
(1) 2278/     8F7 :                     ; 		dw 110h		; C#5
(1) 2279/     8F7 :                     ; 		dw 120h		; D-5
(1) 2280/     8F7 :                     ; 		dw 12Ch		; D#5
(1) 2281/     8F7 :                     ; 		dw 142h		; E-5
(1) 2282/     8F7 :                     ; 		dw 158h		; F-5
(1) 2283/     8F7 :                     ; 		dw 16Ah		; F#5 32000 +6
(1) 2284/     8F7 :                     ; 		dw 17Eh		; G-5
(1) 2285/     8F7 :                     ; 		dw 190h		; G#5
(1) 2286/     8F7 :                     ; 		dw 1ACh		; A-5
(1) 2287/     8F7 :                     ; 		dw 1C2h		; A#5
(1) 2288/     8F7 :                     ; 		dw 1E0h		; B-5
(1) 2289/     8F7 :                     ; 		dw 1F8h		; C-6 44100 +12
(1) 2290/     8F7 :                     ; 		dw 210h		; C#6
(1) 2291/     8F7 :                     ; 		dw 240h		; D-6
(1) 2292/     8F7 :                     ; 		dw 260h		; D#6
(1) 2293/     8F7 :                     ; 		dw 280h		; E-6
(1) 2294/     8F7 :                     ; 		dw 2A0h		; F-6
(1) 2295/     8F7 :                     ; 		dw 2D0h		; F#6
(1) 2296/     8F7 :                     ; 		dw 2F8h		; G-6
(1) 2297/     8F7 :                     ; 		dw 320h		; G#6
(1) 2298/     8F7 :                     ; 		dw 350h		; A-6
(1) 2299/     8F7 :                     ; 		dw 380h		; A#6
(1) 2300/     8F7 :                     ; 		dw 3C0h		; B-6
(1) 2301/     8F7 :                     ; 		dw 400h		; C-7 88200
(1) 2302/     8F7 :                     ; 		dw 100h
(1) 2303/     8F7 :                     ; 		dw 100h
(1) 2304/     8F7 :                     ; 		dw 100h
(1) 2305/     8F7 :                     ; 		dw 100h
(1) 2306/     8F7 :                     ; 		dw 100h
(1) 2307/     8F7 :                     ; 		dw 100h	
(1) 2308/     8F7 :                     ; 		dw 100h
(1) 2309/     8F7 :                     ; 		dw 100h
(1) 2310/     8F7 :                     ; 		dw 100h
(1) 2311/     8F7 :                     ; 		dw 100h
(1) 2312/     8F7 :                     ; 		dw 100h	
(1) 2313/     8F7 :                     ; 		dw 100h		; C-8
(1) 2314/     8F7 :                     ; 		dw 100h
(1) 2315/     8F7 :                     ; 		dw 100h
(1) 2316/     8F7 :                     ; 		dw 100h
(1) 2317/     8F7 :                     ; 		dw 100h
(1) 2318/     8F7 :                     ; 		dw 100h
(1) 2319/     8F7 :                     ; 		dw 100h	
(1) 2320/     8F7 :                     ; 		dw 100h
(1) 2321/     8F7 :                     ; 		dw 100h
(1) 2322/     8F7 :                     ; 		dw 100h
(1) 2323/     8F7 :                     ; 		dw 100h
(1) 2324/     8F7 :                     ; 		dw 100h	
(1) 2325/     8F7 :                     ; 		dw 100h		; C-9
(1) 2326/     8F7 :                     ; 		dw 100h
(1) 2327/     8F7 :                     ; 		dw 100h
(1) 2328/     8F7 :                     ; 		dw 100h
(1) 2329/     8F7 :                     ; 		dw 100h
(1) 2330/     8F7 :                     ; 		dw 100h
(1) 2331/     8F7 :                     ; 		dw 100h	
(1) 2332/     8F7 :                     ; 		dw 100h
(1) 2333/     8F7 :                     ; 		dw 100h
(1) 2334/     8F7 :                     ; 		dw 100h
(1) 2335/     8F7 :                     ; 		dw 100h
(1) 2336/     8F7 :                     ; 		dw 100h
(1) 2337/     8F7 :                     
(1) 2338/     8F7 :                     ; ====================================================================
(1) 2339/     8F7 :                     ; ----------------------------------------------------------------
(1) 2340/     8F7 :                     ; MUSIC DATA
(1) 2341/     8F7 :                     ; ----------------------------------------------------------------
(1) 2342/     8F7 :                     
(1) 2343/     8F7 :                     ; ----------------------------------------------------
(1) 2344/     8F7 :                     ; PSG Instruments
(1) 2345/     8F7 :                     ; ----------------------------------------------------
(1) 2346/     8F7 :                     
(1) 2347/     8F7 : 00                  PsgIns_00:	db 0
(1) 2348/     8F8 : FF                  		db -1
(1) 2349/     8F9 : 00 02 04 05 06      PsgIns_01:	db 0,2,4,5,6
(1) 2350/     8FE : FF                  		db -1
(1) 2351/     8FF : 00 0F               PsgIns_02:	db 0,15
(1) 2352/     901 : FF                  		db -1
(1) 2353/     902 : 00 00 01 01 02 02   PsgIns_03:	db 0,0,1,1,2,2,3,4,6,10,15
                    03 04 06 0A 0F 
(1) 2354/     90D : FF                  		db -1
(1) 2355/     90E : 00 02 04 06 0A      PsgIns_04:	db 0,2,4,6,10
(1) 2356/     913 : FF                  		db -1
(1) 2357/     914 :                     
     119/     914 :                     		include "system/video.asm"	; Video
(1)    1/     914 :                     ; ====================================================================
(1)    2/     914 :                     ; ----------------------------------------------------------------
(1)    3/     914 :                     ; Video
(1)    4/     914 :                     ; ----------------------------------------------------------------
(1)    5/     914 :                     
(1)    6/     914 :                     ; --------------------------------------------------------
(1)    7/     914 :                     ; Init Video
(1)    8/     914 :                     ; --------------------------------------------------------
(1)    9/     914 :                     
(1)   10/     914 :                     Video_Init:
(1)   11/     914 : CD 67 09            		call	Video_Clear
(1)   12/     917 :                      
(1)   13/     917 : 21 34 0B            		ld      hl,list_vdpregs		; hl - data array for default register data
(1)   14/     91A : 11 7E C1            		ld	de,RAM_VdpCache		; de - VDP cache on RAM
(1)   15/     91D : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   16/     91F : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   17/     921 :                     .loop:
(1)   18/     921 : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   19/     922 : 12                  		ld	(de),a
(1)   20/     923 : 13                  		inc 	de
(1)   21/     924 : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   22/     926 : 79                  		ld	a,c			; Now set the register
(1)   23/     927 : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   24/     929 : 0C                  		inc	c			; Next register to use
(1)   25/     92A : 23                  		inc 	hl			; Next byte from the list
(1)   26/     92B : 10 F4               		djnz    .loop    		; decrement b and jump if b != 0
(1)   27/     92D : C9                  		ret
(1)   28/     92E :                     
(1)   29/     92E :                     ; --------------------------------------------------------
(1)   30/     92E :                     ; Video_InitPrint
(1)   31/     92E :                     ; 
(1)   32/     92E :                     ; Call this before using any on-screen text print
(1)   33/     92E :                     ; 
(1)   34/     92E :                     ; Graphics will be located at in 160h
(1)   35/     92E :                     ; (ASCII starts at 140h)
(1)   36/     92E :                     ; Uses palette line 0
(1)   37/     92E :                     ; --------------------------------------------------------
(1)   38/     92E :                     
(1)   39/     92E :                     Video_InitPrint:
(1)   40/     92E : 11 40 01            		ld	de,140h			; VRAM | Palette 2
(1)   41/     931 : ED 53 7C C1         		ld	(RAM_VidPrntVram),de
(1)   42/     935 : 21 3F 0B            		ld	hl,Art_PrintFont
(1)   43/     938 : 11 00 0C            		ld	de,Art_PrintFont_e-Art_PrintFont
(1)   44/     93B : 01 60 01            		ld	bc,140h+20h
(1)   45/     93E : CD D7 09            		call	Video_LoadArt
(1)   46/     941 :                     		
(1)   47/     941 : 21 3F 17            		ld	hl,Pal_PrintFont
(1)   48/     944 : 06 10               		ld	b,16
(1)   49/     946 : 16 00               		ld	d,0
(1)   50/     948 : CD 9A 09            		call	Video_LoadPal		
(1)   51/     94B : 21 3F 17            		ld	hl,Pal_PrintFont
(1)   52/     94E : 06 06               		ld	b,6
(1)   53/     950 : 16 10               		ld	d,16
(1)   54/     952 : C3 9A 09            		jp	Video_LoadPal
(1)   55/     955 :                     
(1)   56/     955 :                     ; ====================================================================
(1)   57/     955 :                     ; ----------------------------------------------------------------
(1)   58/     955 :                     ; Video subroutines
(1)   59/     955 :                     ; ----------------------------------------------------------------
(1)   60/     955 :                     
(1)   61/     955 :                     ; ---------------------------------
(1)   62/     955 :                     ; Video_Update
(1)   63/     955 :                     ; 
(1)   64/     955 :                     ; Update registers from cache
(1)   65/     955 :                     ; to VDP
(1)   66/     955 :                     ; ---------------------------------
(1)   67/     955 :                     
(1)   68/     955 :                     Video_Update:
(1)   69/     955 : 21 7E C1            		ld      hl,RAM_VdpCache		; hl - data array for default register data
(1)   70/     958 : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   71/     95A : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   72/     95C :                     .loop:
(1)   73/     95C : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   74/     95D : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   75/     95F : 79                  		ld	a,c			; Now set the register
(1)   76/     960 : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   77/     962 : 0C                  		inc	c			; Next register to use
(1)   78/     963 : 23                  		inc 	hl			; Next byte from the list
(1)   79/     964 : 10 F6               		djnz    .loop    		; decrement b and jump if b != 0
(1)   80/     966 : C9                  		ret
(1)   81/     967 :                     
(1)   82/     967 :                     ; --------------------------------------------------------
(1)   83/     967 :                     ; Video_Clear
(1)   84/     967 :                     ; 
(1)   85/     967 :                     ; Clear everything on-screen
(1)   86/     967 :                     ;
(1)   87/     967 :                     ; Uses:
(1)   88/     967 :                     ; hl,bc,de
(1)   89/     967 :                     ; --------------------------------------------------------
(1)   90/     967 :                     
(1)   91/     967 :                     Video_Clear:
(1)   92/     967 : 06 10               		ld	b,16			; Clear pallete
(1)   93/     969 : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)   94/     96B : E6 1F               		and	1Fh
(1)   95/     96D : C2 72 09            		jp	nz,.mark_ms
(1)   96/     970 : CB 20               		sla	b			; Length * 2
(1)   97/     972 :                     .mark_ms:
(1)   98/     972 : 21 00 C0            		ld	hl,0C000h
(1)   99/     975 : 0E BF               		ld	c,vdp_ctrl
(1)  100/     977 : ED 69               		out	(c),l
(1)  101/     979 : ED 61               		out	(c),h
(1)  102/     97B : AF                  		xor	a
(1)  103/     97C : 0E BE               		ld	c,vdp_data
(1)  104/     97E :                     .pal_clr:
(1)  105/     97E : ED 79               		out	(c),a
(1)  106/     980 : 10 FC               		djnz	.pal_clr
(1)  107/     982 :                     	
(1)  108/     982 :                     	; Clear ALL VRAM
(1)  109/     982 : 21 00 40            		ld	hl,4000h		; Clear screen
(1)  110/     985 : 0E BF               		ld	c,vdp_ctrl
(1)  111/     987 : ED 69               		out	(c),l
(1)  112/     989 : ED 61               		out	(c),h
(1)  113/     98B : 21 00 40            		ld	hl,4000h
(1)  114/     98E : 0E BE               		ld	c,vdp_data
(1)  115/     990 :                     .clrscrn:
(1)  116/     990 : AF                  		xor	a
(1)  117/     991 : ED 79               		out	(c),a
(1)  118/     993 : 2B                  		dec 	hl
(1)  119/     994 : 7C                  		ld	a,h
(1)  120/     995 : B5                  		or	l
(1)  121/     996 : C2 90 09            		jp	nz,.clrscrn
(1)  122/     999 : C9                  		ret
(1)  123/     99A :                     		
(1)  124/     99A :                     ; --------------------------------------------------------
(1)  125/     99A :                     ; Video_LoadPal
(1)  126/     99A :                     ; 
(1)  127/     99A :                     ; Load GAME GEAR palette to VDP, auto-converts for
(1)  128/     99A :                     ; Master System
(1)  129/     99A :                     ;
(1)  130/     99A :                     ; NOTE: Color dots will be shown on screen
(1)  131/     99A :                     ; 
(1)  132/     99A :                     ; Input:
(1)  133/     99A :                     ; hl - Palette data
(1)  134/     99A :                     ; b - Number of colors
(1)  135/     99A :                     ; d - Start position
(1)  136/     99A :                     ;
(1)  137/     99A :                     ; Uses:
(1)  138/     99A :                     ; hl,bc,de
(1)  139/     99A :                     ; --------------------------------------------------------
(1)  140/     99A :                     
(1)  141/     99A :                     Video_LoadPal:
(1)  142/     99A : 0E BE               		ld	c,vdp_data
(1)  143/     99C : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)  144/     99E : E6 1F               		and	1Fh
(1)  145/     9A0 : C2 B1 09            		jp	nz,.mark_ms
(1)  146/     9A3 :                     
(1)  147/     9A3 :                     	; Game Gear palette
(1)  148/     9A3 : CB 20               		sla	b
(1)  149/     9A5 : CB 22               		sla	d
(1)  150/     9A7 : 7A                  		ld	a,d
(1)  151/     9A8 : D3 BF               		out	(vdp_ctrl),a
(1)  152/     9AA : 3E C0               		ld	a,0C0h
(1)  153/     9AC : D3 BF               		out	(vdp_ctrl),a
(1)  154/     9AE : ED B3               		otir				; out (hl) to the port at C, increment hl, decrement b
(1)  155/     9B0 : C9                  		ret
(1)  156/     9B1 :                     
(1)  157/     9B1 :                     	; GG to MS convertion
(1)  158/     9B1 :                     .mark_ms:
(1)  159/     9B1 : 0E BF               		ld	c,vdp_ctrl
(1)  160/     9B3 : 3E C0               		ld	a,0C0h
(1)  161/     9B5 : ED 51               		out	(c),d
(1)  162/     9B7 : ED 79               		out	(c),a
(1)  163/     9B9 :                     .loopms:
(1)  164/     9B9 : 7E                  		ld	a,(hl)
(1)  165/     9BA : CB 2F               		sra	a
(1)  166/     9BC : CB 2F               		sra	a
(1)  167/     9BE : E6 03               		and	11b
(1)  168/     9C0 : 57                  		ld	d,a
(1)  169/     9C1 : 7E                  		ld	a,(hl)
(1)  170/     9C2 : 1F                  		rra
(1)  171/     9C3 : 1F                  		rra
(1)  172/     9C4 : 1F                  		rra
(1)  173/     9C5 : 1F                  		rra
(1)  174/     9C6 : E6 0C               		and	1100b
(1)  175/     9C8 : 5F                  		ld	e,a
(1)  176/     9C9 : 23                  		inc	hl
(1)  177/     9CA : 7E                  		ld	a,(hl)
(1)  178/     9CB : 17                  		rla
(1)  179/     9CC : 17                  		rla
(1)  180/     9CD : E6 30               		and	110000b
(1)  181/     9CF : B2                  		or	d
(1)  182/     9D0 : B3                  		or	e
(1)  183/     9D1 : 23                  		inc	hl
(1)  184/     9D2 :                     
(1)  185/     9D2 : D3 BE               		out	(vdp_data),a
(1)  186/     9D4 : 10 E3               		djnz	.loopms
(1)  187/     9D6 : C9                  		ret
(1)  188/     9D7 :                     
(1)  189/     9D7 :                     ; --------------------------------------------------------
(1)  190/     9D7 :                     ; Video_LoadArt
(1)  191/     9D7 :                     ; 
(1)  192/     9D7 :                     ; Load graphics to VRAM
(1)  193/     9D7 :                     ;
(1)  194/     9D7 :                     ; Input:
(1)  195/     9D7 :                     ; hl - Art data
(1)  196/     9D7 :                     ; de - Size
(1)  197/     9D7 :                     ; bc - VRAM (cell)
(1)  198/     9D7 :                     ; --------------------------------------------------------
(1)  199/     9D7 :                     
(1)  200/     9D7 :                     Video_LoadArt:
(1)  201/     9D7 : 78                  		ld	a,b		; Multiply VRAM >> 5
(1)  202/     9D8 : 0F                  		rrca
(1)  203/     9D9 : 0F                  		rrca
(1)  204/     9DA : 0F                  		rrca
(1)  205/     9DB : E6 20               		and	00100000b
(1)  206/     9DD : 47                  		ld	b,a
(1)  207/     9DE : 79                  		ld	a,c
(1)  208/     9DF : 0F                  		rrca
(1)  209/     9E0 : 0F                  		rrca
(1)  210/     9E1 : 0F                  		rrca
(1)  211/     9E2 : E6 1F               		and	00011111b
(1)  212/     9E4 : B0                  		or	b
(1)  213/     9E5 : F6 40               		or	40h		; VRAM write mode
(1)  214/     9E7 : 47                  		ld	b,a
(1)  215/     9E8 : 79                  		ld	a,c
(1)  216/     9E9 : E6 07               		and	00000111b
(1)  217/     9EB : 0F                  		rrca
(1)  218/     9EC : 0F                  		rrca
(1)  219/     9ED : 0F                  		rrca
(1)  220/     9EE : 0E BF               		ld	c,vdp_ctrl
(1)  221/     9F0 : ED 79               		out	(c),a		; a - 00xx
(1)  222/     9F2 : ED 41               		out	(c),b		; b - xx00
(1)  223/     9F4 :                     
(1)  224/     9F4 :                     	; start
(1)  225/     9F4 : 0E BE               		ld	c,vdp_data
(1)  226/     9F6 :                     .loop:
(1)  227/     9F6 : ED A3               		outi
(1)  228/     9F8 : 1B                  		dec 	de
(1)  229/     9F9 : 7B                  		ld	a,e
(1)  230/     9FA : B2                  		or	d
(1)  231/     9FB : C2 F6 09            		jp	nz,.loop
(1)  232/     9FE : C9                  		ret
(1)  233/     9FF :                     
(1)  234/     9FF :                     ; --------------------------------------------------------
(1)  235/     9FF :                     ; Video_Print
(1)  236/     9FF :                     ; 
(1)  237/     9FF :                     ; Print text on screen
(1)  238/     9FF :                     ; Note: doesn't check for OOB
(1)  239/     9FF :                     ; 
(1)  240/     9FF :                     ; Input:
(1)  241/     9FF :                     ; ix - String data
(1)  242/     9FF :                     ; bc - X pos | Y pos
(1)  243/     9FF :                     ; 
(1)  244/     9FF :                     ; Uses
(1)  245/     9FF :                     ; de,hl,iy
(1)  246/     9FF :                     ; --------------------------------------------------------
(1)  247/     9FF :                     
(1)  248/     9FF :                     Video_Print:
(1)  249/     9FF : C5                  		push	bc
(1)  250/     A00 : D5                  		push	de
(1)  251/     A01 : E5                  		push	hl
(1)  252/     A02 : FD E5               		push	iy
(1)  253/     A04 :                     
(1)  254/     A04 : FD 21 4C C1         		ld	iy,RAM_VidPrntList
(1)  255/     A08 : 21 00 38            		ld	hl,3800h
(1)  256/     A0B : DB 00               		in	a,(gg_info)
(1)  257/     A0D : E6 1F               		and	1Fh
(1)  258/     A0F : C2 14 0A            		jp	nz,.nocent
(1)  259/     A12 : 2E CC               		ld	l,0CCh
(1)  260/     A14 :                     .nocent:
(1)  261/     A14 : 11 00 00            		ld	de,0
(1)  262/     A17 : 79                  		ld	a,c		; Y pos left
(1)  263/     A18 : 0F                  		rrca	
(1)  264/     A19 : 0F                  		rrca
(1)  265/     A1A : E6 07               		and	07h
(1)  266/     A1C : 57                  		ld	d,a
(1)  267/     A1D : 78                  		ld	a,b		; X pos + Y pos right YYXXXXXXb
(1)  268/     A1E : E6 1F               		and	1Fh
(1)  269/     A20 : 87                  		add 	a,a
(1)  270/     A21 : 5F                  		ld	e,a
(1)  271/     A22 : 79                  		ld	a,c
(1)  272/     A23 : E6 03               		and	11b
(1)  273/     A25 : 0F                  		rrca
(1)  274/     A26 : 0F                  		rrca
(1)  275/     A27 : B3                  		or	e
(1)  276/     A28 : 5F                  		ld	e,a
(1)  277/     A29 : 19                  		add 	hl,de
(1)  278/     A2A :                     
(1)  279/     A2A :                     	; X/Y pos goes here
(1)  280/     A2A : 0E BF               		ld	c,vdp_ctrl
(1)  281/     A2C : 7C                  		ld	a,h
(1)  282/     A2D : F6 40               		or	40h
(1)  283/     A2F : 67                  		ld	h,a
(1)  284/     A30 : ED 69               		out	(c),l
(1)  285/     A32 : ED 61               		out	(c),h
(1)  286/     A34 : 11 00 00            		ld	de,0
(1)  287/     A37 : 44                  		ld	b,h
(1)  288/     A38 : 4D                  		ld	c,l
(1)  289/     A39 :                     
(1)  290/     A39 :                     	; bc - curr position for values
(1)  291/     A39 :                     	; hl - curr position for jump
(1)  292/     A39 :                     .loop:
(1)  293/     A39 : DD 7E 00            		ld	a,(ix)
(1)  294/     A3C : DD 23               		inc	ix
(1)  295/     A3E : FE 0A               		cp	00Ah		; 00Ah - next line?
(1)  296/     A40 : CA 5D 0A            		jp	z,.next
(1)  297/     A43 : FE 5C               		cp	05Ch		; 05Ch ("\") special?
(1)  298/     A45 : CA 6B 0A            		jp	z,.special		
(1)  299/     A48 : B7                  		or	a		; Zero?
(1)  300/     A49 : CA B6 0A            		jp	z,.exit
(1)  301/     A4C : E5                  		push	hl
(1)  302/     A4D : 2A 7C C1            		ld	hl,(RAM_VidPrntVram)
(1)  303/     A50 : 5F                  		ld	e,a
(1)  304/     A51 : 19                  		add	hl,de
(1)  305/     A52 : 7D                  		ld	a,l
(1)  306/     A53 : D3 BE               		out	(vdp_data),a
(1)  307/     A55 : 7C                  		ld	a,h
(1)  308/     A56 : D3 BE               		out	(vdp_data),a
(1)  309/     A58 : E1                  		pop	hl
(1)  310/     A59 : 03                  		inc 	bc		; Next pos for values
(1)  311/     A5A : 03                  		inc 	bc
(1)  312/     A5B : 18 DC               		jr	.loop
(1)  313/     A5D :                     
(1)  314/     A5D :                     ; Next line
(1)  315/     A5D :                     .next:
(1)  316/     A5D : 11 40 00            		ld	de,40h		; TL add line
(1)  317/     A60 : 19                  		add 	hl,de
(1)  318/     A61 : 44                  		ld	b,h		; Save pos to value beam
(1)  319/     A62 : 4D                  		ld	c,l
(1)  320/     A63 : 7D                  		ld	a,l		; Reset position with new
(1)  321/     A64 : D3 BF               		out	(vdp_ctrl),a
(1)  322/     A66 : 7C                  		ld	a,h
(1)  323/     A67 : D3 BF               		out	(vdp_ctrl),a
(1)  324/     A69 : 18 CE               		jr	.loop
(1)  325/     A6B :                     ; Special
(1)  326/     A6B :                     .special:
(1)  327/     A6B : DD 7E 00            		ld	a,(ix)
(1)  328/     A6E : DD 23               		inc	ix
(1)  329/     A70 : FE 62               		cp	"b"		; Byte?
(1)  330/     A72 : CA 9A 0A            		jp	z,.breq
(1)  331/     A75 : FE 77               		cp	"w"		; Word?
(1)  332/     A77 : C2 39 0A            		jp	nz,.loop
(1)  333/     A7A :                     ; word
(1)  334/     A7A : FD 71 00            		ld	(iy),c		; Set address
(1)  335/     A7D : FD 70 01            		ld	(iy+1),b
(1)  336/     A80 : FD 36 02 02         		ld	(iy+2),2	; Set request
(1)  337/     A84 : FD 23               		inc 	iy		; Next entry
(1)  338/     A86 : FD 23               		inc 	iy
(1)  339/     A88 : FD 23               		inc 	iy
(1)  340/     A8A : 03                  		inc 	bc		; Four cells
(1)  341/     A8B : 03                  		inc 	bc
(1)  342/     A8C : 03                  		inc 	bc
(1)  343/     A8D : 03                  		inc 	bc
(1)  344/     A8E : 03                  		inc 	bc
(1)  345/     A8F : 03                  		inc 	bc
(1)  346/     A90 : 03                  		inc 	bc
(1)  347/     A91 : 03                  		inc 	bc
(1)  348/     A92 : 79                  		ld	a,c
(1)  349/     A93 : D3 BF               		out	(vdp_ctrl),a
(1)  350/     A95 : 78                  		ld	a,b
(1)  351/     A96 : D3 BF               		out	(vdp_ctrl),a
(1)  352/     A98 : 18 9F               		jr	.loop
(1)  353/     A9A :                     ; byte
(1)  354/     A9A :                     .breq:
(1)  355/     A9A : FD 71 00            		ld	(iy),c		; Set address
(1)  356/     A9D : FD 70 01            		ld	(iy+1),b
(1)  357/     AA0 : FD 36 02 01         		ld	(iy+2),1	; Set request
(1)  358/     AA4 : FD 23               		inc 	iy		; Next entry
(1)  359/     AA6 : FD 23               		inc 	iy
(1)  360/     AA8 : FD 23               		inc 	iy
(1)  361/     AAA : 03                  		inc 	bc		; Two cells
(1)  362/     AAB : 03                  		inc 	bc
(1)  363/     AAC : 03                  		inc 	bc
(1)  364/     AAD : 03                  		inc 	bc
(1)  365/     AAE : 79                  		ld	a,c
(1)  366/     AAF : D3 BF               		out	(vdp_ctrl),a
(1)  367/     AB1 : 78                  		ld	a,b
(1)  368/     AB2 : D3 BF               		out	(vdp_ctrl),a
(1)  369/     AB4 : 18 83               		jr	.loop
(1)  370/     AB6 :                     .exit:
(1)  371/     AB6 :                     
(1)  372/     AB6 :                     ; ------------------------------------------------
(1)  373/     AB6 :                     ; Print values
(1)  374/     AB6 :                     ; check MAX_PRNTLIST for maximum values
(1)  375/     AB6 :                     ; 
(1)  376/     AB6 :                     ; vvvv tt
(1)  377/     AB6 :                     ; v - vdp pos
(1)  378/     AB6 :                     ; t - value type
(1)  379/     AB6 :                     ; ------------------------------------------------
(1)  380/     AB6 :                     
(1)  381/     AB6 : FD 21 4C C1         		ld	iy,RAM_VidPrntList
(1)  382/     ABA :                     .loopval:
(1)  383/     ABA : FD 7E 00            		ld	a,(iy)
(1)  384/     ABD : FD 46 01            		ld	b,(iy+1)
(1)  385/     AC0 : B7                  		or	a
(1)  386/     AC1 : CA FE 0A            		jp	z,.endval
(1)  387/     AC4 : 4F                  		ld	c,a
(1)  388/     AC5 :                     
(1)  389/     AC5 :                     	; Check byte
(1)  390/     AC5 : FD 7E 02            		ld	a,(iy+2)
(1)  391/     AC8 : FE 01               		cp	1
(1)  392/     ACA : C2 D6 0A            		jp	nz,.nobyte
(1)  393/     ACD : DD 6E 00            		ld	l,(ix)
(1)  394/     AD0 : DD 66 01            		ld	h,(ix+1)
(1)  395/     AD3 : CD 04 0B            		call	.put_byte
(1)  396/     AD6 :                     .nobyte:
(1)  397/     AD6 : FD 7E 02            		ld	a,(iy+2)
(1)  398/     AD9 : FE 02               		cp	2
(1)  399/     ADB : C2 EB 0A            		jp	nz,.noword
(1)  400/     ADE : DD 6E 00            		ld	l,(ix)
(1)  401/     AE1 : DD 66 01            		ld	h,(ix+1)
(1)  402/     AE4 : CD 04 0B            		call	.put_byte
(1)  403/     AE7 : 23                  		inc 	hl
(1)  404/     AE8 : CD 04 0B            		call	.put_byte
(1)  405/     AEB :                     .noword:
(1)  406/     AEB :                     
(1)  407/     AEB : AF                  		xor	a		; Clear current entry 
(1)  408/     AEC : FD 77 00            		ld	(iy),a		; and move to next
(1)  409/     AEF : FD 77 01            		ld	(iy+1),a
(1)  410/     AF2 : FD 77 02            		ld	(iy+2),a
(1)  411/     AF5 : FD 23               		inc 	iy
(1)  412/     AF7 : FD 23               		inc 	iy
(1)  413/     AF9 : FD 23               		inc 	iy
(1)  414/     AFB : C3 BA 0A            		jp	.loopval
(1)  415/     AFE :                     .endval:	
(1)  416/     AFE : FD E1               		pop	iy
(1)  417/     B00 : E1                  		pop	hl
(1)  418/     B01 : D1                  		pop	de
(1)  419/     B02 : C1                  		pop	bc
(1)  420/     B03 : C9                  		ret
(1)  421/     B04 :                     
(1)  422/     B04 :                     ; draw nibble
(1)  423/     B04 :                     .put_byte:
(1)  424/     B04 : 7E                  		ld	a,(hl)
(1)  425/     B05 : 0F                  		rrca
(1)  426/     B06 : 0F                  		rrca
(1)  427/     B07 : 0F                  		rrca
(1)  428/     B08 : 0F                  		rrca
(1)  429/     B09 : CD 0D 0B            		call	.do_nibbl
(1)  430/     B0C : 7E                  		ld	a,(hl)
(1)  431/     B0D :                     .do_nibbl:
(1)  432/     B0D : E5                  		push	hl
(1)  433/     B0E : 21 00 00            		ld	hl,0
(1)  434/     B11 : E6 0F               		and 	0Fh
(1)  435/     B13 : FE 0A               		cp	0Ah
(1)  436/     B15 : DA 1A 0B            		jp	c,.noadd
(1)  437/     B18 : C6 07               		add 	a,7
(1)  438/     B1A :                     .noadd:
(1)  439/     B1A : 6F                  		ld	l,a
(1)  440/     B1B : ED 5B 7C C1         		ld	de,(RAM_VidPrntVram)	; Start at font VRAM
(1)  441/     B1F : 19                  		add 	hl,de
(1)  442/     B20 : 11 30 00            		ld	de,30h			; at char 0
(1)  443/     B23 : 19                  		add 	hl,de
(1)  444/     B24 : 79                  		ld	a,c			; mark vdp pos
(1)  445/     B25 : D3 BF               		out	(vdp_ctrl),a
(1)  446/     B27 : 78                  		ld	a,b
(1)  447/     B28 : D3 BF               		out	(vdp_ctrl),a
(1)  448/     B2A : 03                  		inc 	bc			; next layer cell
(1)  449/     B2B : 03                  		inc 	bc
(1)  450/     B2C : 7D                  		ld	a,l			; put vram value
(1)  451/     B2D : D3 BE               		out 	(vdp_data),a
(1)  452/     B2F : 7C                  		ld	a,h
(1)  453/     B30 : D3 BE               		out	(vdp_data),a
(1)  454/     B32 : E1                  		pop	hl
(1)  455/     B33 : C9                  		ret
(1)  456/     B34 :                     		
(1)  457/     B34 :                     ; ====================================================================
(1)  458/     B34 :                     ; --------------------------------------------------------
(1)  459/     B34 :                     ; Video data
(1)  460/     B34 :                     ; --------------------------------------------------------
(1)  461/     B34 :                     
(1)  462/     B34 :                     list_vdpregs:
(1)  463/     B34 : 06                  		db      00000110b       ; ---H---- | H-Hint
(1)  464/     B35 : E2                  		db      11100010b       ; -DV---W- | D-Display ON / V-Vint / W-8x16 sprites
(1)  465/     B36 : FF                  		db      11111111b       ;
(1)  466/     B37 : FF                  		db      11111111b       ;
(1)  467/     B38 : FF                  		db      11111111b       ;
(1)  468/     B39 : FF                  		db      11111111b       ;
(1)  469/     B3A : 04                  		db      00000100b       ; -----S-- | S-Sprite VRAM Add ($100)
(1)  470/     B3B : 00                  		db      00000000b       ;
(1)  471/     B3C : 00                  		db      00000000b       ;
(1)  472/     B3D : 00                  		db      00000000b       ;
(1)  473/     B3E : 00                  		db      00000000b       ;
(1)  474/     B3F :                     
(1)  475/     B3F :                     Art_PrintFont:	binclude "system/data/art_prntfont.bin"
(1)  476/    173F :                     Art_PrintFont_e:
(1)  477/    173F :                     Pal_PrintFont:;	binclude "system/data/pal_prntfont.bin"
(1)  478/    173F : 00 00 EE 0E CC 0C   		dw 0000h,0EEEh,0CCCh,0AAAh,0888h,0444h,000Eh,0008h
                    AA 0A 88 08 44 04 
                    0E 00 08 00 
(1)  479/    174F : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  480/    175F :                     
     120/    175F :                     		include "system/setup.asm"	; System
(1)    1/    175F :                     ; ====================================================================
(1)    2/    175F :                     ; ----------------------------------------------------------------
(1)    3/    175F :                     ; System
(1)    4/    175F :                     ; ----------------------------------------------------------------
(1)    5/    175F :                     
(1)    6/    175F :                     ; --------------------------------------------------------
(1)    7/    175F :                     ; Init System
(1)    8/    175F :                     ; --------------------------------------------------------
(1)    9/    175F :                     
(1)   10/    175F :                     System_Init:
(1)   11/    175F :                     	;Clear WORK RAM ($C001 to $DFEF)
(1)   12/    175F : 21 00 C0            		ld      hl,0C000h  		; hl - System RAM
(1)   13/    1762 : 11 01 C0            		ld      de,0C001h  		; de - (System RAM + 1)
(1)   14/    1765 : 01 00 10            		ld      bc,01000h  		; bc - Bytes to copy
(1)   15/    1768 : 36 00               		ld      (hl),0			; Set $00 at first byte of RAM before copying bytes
(1)   16/    176A : ED B0               		ldir				; read (RAM), write to (RAM+1), increment de, hl and decrement bc
(1)   17/    176C :                     
(1)   18/    176C : DB 00               		in	a,(gg_info)		; Read Game Gear extra bits
(1)   19/    176E : E6 1F               		and	1Fh			; only grab 5 bits
(1)   20/    1770 : C2 7E 17            		jp	nz,.not_gg		; If not Zero, don't set extra gg regs
(1)   21/    1773 : 3E FF               		ld      a,11111111b   		; all ones
(1)   22/    1775 : D3 02               		out     (gg_ext_bitdir),a   	; set i/o port 2h (read/write) to all ones
(1)   23/    1777 : D3 06                               out 	(gg_stereo),a		; gg psg stereo full
(1)   24/    1779 : AF                  		xor     a         		; set a to zero
(1)   25/    177A : D3 01               		out     (gg_ext_comm),a   	; set i/o port 1h to zero
(1)   26/    177C : D3 05               		out     (gg_serial),a   	; set i/o port 5h to zero
(1)   27/    177E :                     .not_gg:
(1)   28/    177E : AF                  		xor     a         		; set a to zero
(1)   29/    177F : 32 FC FF            		ld      (bank_ctrl),a		; set bank control register to all zeros
(1)   30/    1782 : 32 FD FF            		ld      (bank_0),a		; set bank reg #0 to all zeros
(1)   31/    1785 : 3C                  		inc	a
(1)   32/    1786 : 32 FE FF            		ld      (bank_1),a		; set bank reg #1 to 0001
(1)   33/    1789 : 3C                  		inc	a
(1)   34/    178A : 32 FF FF            		ld      (bank_2),a		; set bank reg #2 to 0010
(1)   35/    178D :                     		
(1)   36/    178D : 3E C3               		ld	a,0C3h
(1)   37/    178F : 32 51 C2            		ld	(RAM_VBlank),a
(1)   38/    1792 : 32 54 C2            		ld	(RAM_HBlank),a
(1)   39/    1795 : 01 67 00            		ld	bc,MS_VInt
(1)   40/    1798 : 11 86 00            		ld	de,MS_HInt
(1)   41/    179B : ED 43 52 C2         		ld	(RAM_VBlank+1),bc
(1)   42/    179F : ED 53 55 C2         		ld	(RAM_HBlank+1),de
(1)   43/    17A3 : C9                  		ret
(1)   44/    17A4 :                     
(1)   45/    17A4 :                     ; ====================================================================
(1)   46/    17A4 :                     ; ----------------------------------------------------------------
(1)   47/    17A4 :                     ; System subroutines
(1)   48/    17A4 :                     ; ----------------------------------------------------------------
(1)   49/    17A4 :                     
(1)   50/    17A4 :                     ; --------------------------------------------------------
(1)   51/    17A4 :                     ; System_VSync
(1)   52/    17A4 :                     ; 
(1)   53/    17A4 :                     ; Wait for VBlank
(1)   54/    17A4 :                     ; --------------------------------------------------------
(1)   55/    17A4 :                     
(1)   56/    17A4 :                     System_VSync:
(1)   57/    17A4 : DB BF               		in	a,(vdp_ctrl)		; Read VDP Control
(1)   58/    17A6 : E6 80               		and	10000000b		; Get VBlank bit
(1)   59/    17A8 : CA A4 17            		jp	z,System_VSync		; if Zero, keep waiting
(1)   60/    17AB : C9                  		ret
(1)   61/    17AC :                     		
(1)   62/    17AC :                     ; --------------------------------------------------------
(1)   63/    17AC :                     ; System_Input
(1)   64/    17AC :                     ; 
(1)   65/    17AC :                     ; WARNING: Don't call this outside of VBLANK
(1)   66/    17AC :                     ; (call System_VSync first)
(1)   67/    17AC :                     ; 
(1)   68/    17AC :                     ; Uses:
(1)   69/    17AC :                     ; hl,bc
(1)   70/    17AC :                     ; --------------------------------------------------------
(1)   71/    17AC :                     
(1)   72/    17AC :                     System_Input:
(1)   73/    17AC :                      
(1)   74/    17AC :                     ; ---------------------------
(1)   75/    17AC :                     ; Read current controllers
(1)   76/    17AC :                     ; ---------------------------
(1)   77/    17AC :                     
(1)   78/    17AC : 21 4D C2            		ld	hl,RAM_InputData	; hl - Input data stored in RAM
(1)   79/    17AF :                     
(1)   80/    17AF :                     	; Controller 1
(1)   81/    17AF : 06 00               		ld	b,0			; b = 0
(1)   82/    17B1 : DB 00               		in	a,(gg_info)		; Read GG port 00h (START button and region)
(1)   83/    17B3 : 4F                  		ld	c,a			; Copy result to c
(1)   84/    17B4 : E6 1F               		and	1Fh			; only read right 5 bits
(1)   85/    17B6 : C2 BE 17            		jp	nz,.no_ggstrt		; if != 0, skip this
(1)   86/    17B9 : 79                  		ld	a,c			; move our copy to a
(1)   87/    17BA : 2F                  		cpl				; reverse bits
(1)   88/    17BB : E6 80               		and	80h			; only read the MSB
(1)   89/    17BD : 47                  		ld	b,a			; b = Start button bit press
(1)   90/    17BE :                     .no_ggstrt:
(1)   91/    17BE : DB DC               		in      a,(joypad_1)		; Read controller 1 port
(1)   92/    17C0 : 2F                  		cpl				; Reverse bits
(1)   93/    17C1 : E6 3F               		and	00111111b		; Only grab 0012RLDU 
(1)   94/    17C3 : B0                  		or	b			; Merge GG start button if available S012RLDU
(1)   95/    17C4 : 47                  		ld	b,a			; Copy input from a to b
(1)   96/    17C5 : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)   97/    17C6 : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)   98/    17C7 : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)   99/    17C8 : 23                  		inc	hl			; Next RAM byte
(1)  100/    17C9 : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  101/    17CA : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  102/    17CB : 23                  		inc 	hl			; Next controller
(1)  103/    17CC :                      
(1)  104/    17CC :                     	; Controller 2
(1)  105/    17CC : DB DC               		in      a,(joypad_1)		; Read controller 1 port again (for P2's Down/Up)
(1)  106/    17CE : 2F                  		cpl				; Reverse bits, DU??????
(1)  107/    17CF : 07                  		rlca				; U?????D
(1)  108/    17D0 : 07                  		rlca				; ?????DU
(1)  109/    17D1 : E6 03               		and	11b			; 00000DU
(1)  110/    17D3 : 47                  		ld	b,a			; Save copy to b
(1)  111/    17D4 : DB DD               		in      a,(joypad_2)		; Read controller 2 port (for 2/1/Right/Left)
(1)  112/    17D6 : 2F                  		cpl				; Reverse bits, ????21RL
(1)  113/    17D7 : 07                  		rlca				; ???21RL?
(1)  114/    17D8 : 07                  		rlca				; ??21RL??
(1)  115/    17D9 : E6 3C               		and	00111100b		; 0021RL00
(1)  116/    17DB : B0                  		or	b			; Combine results: 0021RLDU
(1)  117/    17DC : 47                  		ld	b,a			; Copy input from a to b
(1)  118/    17DD : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)  119/    17DE : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)  120/    17DF : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)  121/    17E0 : 23                  		inc	hl			; Next RAM byte
(1)  122/    17E1 : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  123/    17E2 : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  124/    17E3 : C9                  		ret
(1)  125/    17E4 :                     		
(1)  126/    17E4 :                     ; ====================================================================
(1)  127/    17E4 :                     ; ----------------------------------------------------------------
(1)  128/    17E4 :                     ; System data
(1)  129/    17E4 :                     ; ----------------------------------------------------------------
(1)  130/    17E4 :                     
     121/    17E4 :                     
     122/    17E4 :                     ; ====================================================================
     123/    17E4 :                     ; ----------------------------------------------------------------
     124/    17E4 :                     ; MS Start
     125/    17E4 :                     ; ----------------------------------------------------------------
     126/    17E4 :                     
     127/    17E4 :                     		align 400h
     128/    1800 :                     MS_Init:
     129/    1800 : 31 F0 DF            		ld	sp,0DFF0h		; Stacks starts at 0DFF0h, goes backwards
     130/    1803 : CD 5F 17            		call	System_Init		; Init System
     131/    1806 : CD 89 00            		call	Sound_Init		; Init Sound
     132/    1809 : CD 14 09            		call	Video_Init		; Init Video
     133/    180C :                     
     134/    180C :                     ; ================================================================
     135/    180C :                     ; ------------------------------------------------------------
     136/    180C :                     ; Your code starts here
     137/    180C :                     ; ------------------------------------------------------------
     138/    180C :                     
     139/    180C :                     		align 400h
     140/    1C00 :                     CodeBank0:
     141/    1C00 :                     		include	"game/code.asm"
(1)    1/    1C00 :                     ; ====================================================================
(1)    2/    1C00 :                     ; ----------------------------------------------------------------
(1)    3/    1C00 :                     ; Structs
(1)    4/    1C00 :                     ; ----------------------------------------------------------------
(1)    5/    1C00 :                     
(1)    6/    1C00 : (MACRO)             		struct 0
(1)    6/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)    6/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)    6/    1C00 :                                     dephase
(1)    6/       0 :                                     phase 0
(1)    7/       0 :                     plyr_x		ds 2
(1)    8/       2 :                     plyr_y		ds 2
(1)    9/       4 :                     plyr_frame	ds 1
(1)   10/       5 :                     plyr_ani_timer	ds 1
(1)   11/       6 :                     plyr_ani_cntr 	ds 1
(1)   12/       7 : (MACRO)             		finish
(1)   12/       0 :                                     !org GLBL_LASTORG
(1)   12/    1C00 :                                     phase GLBL_LASTPC
(1)   13/    1C00 :                     
(1)   14/    1C00 : (MACRO)             		struct RAM_Local
(1)   14/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)   14/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)   14/    1C00 :                                     dephase
(1)   14/    C257 :                                     phase RAM_LOCAL
(1)   15/    C257 :                     RAM_PlyrCurrIds	ds 2
(1)   16/    C259 :                     RAM_PlyrCurrVol	ds 2
(1)   17/    C25B :                     RAM_CurrTrack	ds 1
(1)   18/    C25C :                     RAM_CurrSelect	ds 1
(1)   19/    C25D : (MACRO)             		finish
(1)   19/    C257 :                                     !org GLBL_LASTORG
(1)   19/    1C00 :                                     phase GLBL_LASTPC
(1)   20/    1C00 :                     
(1)   21/    1C00 :                     ; ====================================================================
(1)   22/    1C00 :                     ; ----------------------------------------------------------------
(1)   23/    1C00 :                     ; Main
(1)   24/    1C00 :                     ; ----------------------------------------------------------------
(1)   25/    1C00 :                     
(1)   26/    1C00 : CD 2E 09            		call	Video_InitPrint
(1)   27/    1C03 :                     
(1)   28/    1C03 : 3E 00               		ld	a,0
(1)   29/    1C05 : DD 21 AB 1D         		ld	ix,str_Test
(1)   30/    1C09 : 01 03 02            		ld	bc,0203h
(1)   31/    1C0C : CD FF 09            		call	Video_Print
(1)   32/    1C0F : 21 F5 1D            		ld	hl,pal_FontNew
(1)   33/    1C12 : 06 20               		ld	b,32
(1)   34/    1C14 : 16 00               		ld	d,0
(1)   35/    1C16 : CD 9A 09            		call	Video_LoadPal
(1)   36/    1C19 :                     		
(1)   37/    1C19 : AF                  		xor	a
(1)   38/    1C1A : 32 5B C2            		ld	(RAM_CurrTrack),a
(1)   39/    1C1D : CD DB 1C            		call	.show_values
(1)   40/    1C20 :                     
(1)   41/    1C20 :                     .loop:
(1)   42/    1C20 : CD A4 17            		call	System_VSync
(1)   43/    1C23 : CD AC 17            		call	System_Input
(1)   44/    1C26 : CD C1 00            		call	Sound_Run
(1)   45/    1C29 :                     
(1)   46/    1C29 : 3A 4E C2            		ld	a,(Controller_1+on_press)
(1)   47/    1C2C : 4F                  		ld	c,a
(1)   48/    1C2D : 3A 4D C2            		ld	a,(Controller_1+on_hold)
(1)   49/    1C30 : 47                  		ld	b,a
(1)   50/    1C31 : CB 60               		bit 	bitJoy1,b
(1)   51/    1C33 : C2 56 1C            		jp	nz,.b_hold
(1)   52/    1C36 :                     
(1)   53/    1C36 : 16 01               		ld	d,1
(1)   54/    1C38 : CB 49               		bit	bitJoyDown,c
(1)   55/    1C3A : C4 A1 1C            		call	nz,.modify_track
(1)   56/    1C3D : CB 59               		bit	bitJoyRight,c
(1)   57/    1C3F : C4 97 1C            		call	nz,.modify_select
(1)   58/    1C42 : 16 FF               		ld	d,-1
(1)   59/    1C44 : CB 41               		bit	bitJoyUp,c
(1)   60/    1C46 : C4 A1 1C            		call	nz,.modify_track
(1)   61/    1C49 : CB 51               		bit	bitJoyLeft,c
(1)   62/    1C4B : C4 97 1C            		call	nz,.modify_select
(1)   63/    1C4E : CB 79               		bit	bitJoyStart,c
(1)   64/    1C50 : C4 D5 1C            		call	nz,.stop_track
(1)   65/    1C53 : C3 79 1C            		jp	.refresh
(1)   66/    1C56 :                     		
(1)   67/    1C56 :                     .b_hold:
(1)   68/    1C56 : 21 57 C2            		ld	hl,RAM_PlyrCurrIds
(1)   69/    1C59 : 3A 5C C2            		ld	a,(RAM_CurrSelect)
(1)   70/    1C5C : B7                  		or	a
(1)   71/    1C5D : CA 63 1C            		jp	z,.idmode
(1)   72/    1C60 : 21 59 C2            		ld	hl,RAM_PlyrCurrVol
(1)   73/    1C63 :                     .idmode:
(1)   74/    1C63 : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)   75/    1C66 : B7                  		or	a
(1)   76/    1C67 : CA 6B 1C            		jp	z,.firsttrck
(1)   77/    1C6A : 23                  		inc 	hl
(1)   78/    1C6B :                     .firsttrck:
(1)   79/    1C6B : 16 01               		ld	d,1
(1)   80/    1C6D : CB 59               		bit	bitJoyRight,c
(1)   81/    1C6F : C4 93 1C            		call	nz,.modify_id
(1)   82/    1C72 : 16 FF               		ld	d,-1
(1)   83/    1C74 : CB 51               		bit	bitJoyLeft,c
(1)   84/    1C76 : C4 93 1C            		call	nz,.modify_id
(1)   85/    1C79 :                     		
(1)   86/    1C79 :                     ; exit this
(1)   87/    1C79 :                     .refresh:
(1)   88/    1C79 : 21 57 C2            		ld	hl,RAM_PlyrCurrIds
(1)   89/    1C7C : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)   90/    1C7F : B7                  		or	a
(1)   91/    1C80 : CA 84 1C            		jp	z,.idmode2
(1)   92/    1C83 : 23                  		inc 	hl
(1)   93/    1C84 :                     .idmode2:
(1)   94/    1C84 : CB 69               		bit	bitJoy2,c			; c is lost after this
(1)   95/    1C86 : C4 AB 1C            		call	nz,.play_track
(1)   96/    1C89 : 3A 4E C2            		ld	a,(Controller_1+on_press)	; update values on any press
(1)   97/    1C8C : B7                  		or	a
(1)   98/    1C8D : C4 DB 1C            		call	nz,.show_values
(1)   99/    1C90 : C3 20 1C            		jp	.loop
(1)  100/    1C93 :                     
(1)  101/    1C93 :                     ; ====================================================================
(1)  102/    1C93 :                     ; ----------------------------------------------------------------
(1)  103/    1C93 :                     ; Subs
(1)  104/    1C93 :                     ; ----------------------------------------------------------------
(1)  105/    1C93 :                     
(1)  106/    1C93 :                     ; hl - RAM_PlyrCurrIds
(1)  107/    1C93 :                     
(1)  108/    1C93 :                     .modify_id:
(1)  109/    1C93 : 7E                  		ld	a,(hl)
(1)  110/    1C94 : 82                  		add 	a,d
(1)  111/    1C95 :                     ; 		and	00000011b
(1)  112/    1C95 : 77                  		ld	(hl),a
(1)  113/    1C96 : C9                  		ret
(1)  114/    1C97 :                     .modify_select:
(1)  115/    1C97 : 3A 5C C2            		ld	a,(RAM_CurrSelect)
(1)  116/    1C9A : 82                  		add 	a,d
(1)  117/    1C9B : E6 01               		and	00000001b			; limit
(1)  118/    1C9D : 32 5C C2            		ld	(RAM_CurrSelect),a
(1)  119/    1CA0 : C9                  		ret
(1)  120/    1CA1 :                     .modify_track:
(1)  121/    1CA1 : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  122/    1CA4 : 82                  		add 	a,d
(1)  123/    1CA5 : E6 01               		and	00000001b
(1)  124/    1CA7 : 32 5B C2            		ld	(RAM_CurrTrack),a
(1)  125/    1CAA : C9                  		ret
(1)  126/    1CAB :                     		
(1)  127/    1CAB :                     .play_track:
(1)  128/    1CAB : 7E                  		ld	a,(hl)
(1)  129/    1CAC : 11 00 00            		ld	de,0
(1)  130/    1CAF : 87                  		add 	a,a
(1)  131/    1CB0 : 87                  		add 	a,a
(1)  132/    1CB1 : 87                  		add	a,a
(1)  133/    1CB2 : 87                  		add	a,a
(1)  134/    1CB3 : 5F                  		ld	e,a
(1)  135/    1CB4 : 21 35 1E            		ld	hl,trackData_test
(1)  136/    1CB7 : 19                  		add 	hl,de
(1)  137/    1CB8 : 46                  		ld	b,(hl)
(1)  138/    1CB9 : 23                  		inc 	hl
(1)  139/    1CBA : 4E                  		ld	c,(hl)
(1)  140/    1CBB : 23                  		inc 	hl
(1)  141/    1CBC : 56                  		ld	d,(hl)
(1)  142/    1CBD : 23                  		inc 	hl
(1)  143/    1CBE : 5E                  		ld	e,(hl)
(1)  144/    1CBF : 23                  		inc 	hl
(1)  145/    1CC0 : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  146/    1CC3 : CD D8 00            		call	Sound_SetTrack
(1)  147/    1CC6 :                     		
(1)  148/    1CC6 : 11 00 00            		ld	de,0
(1)  149/    1CC9 : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  150/    1CCC : 5F                  		ld	e,a
(1)  151/    1CCD : 21 59 C2            		ld	hl,RAM_PlyrCurrVol
(1)  152/    1CD0 : 19                  		add 	hl,de
(1)  153/    1CD1 : 4E                  		ld	c,(hl)
(1)  154/    1CD2 : C3 12 01            		jp	Sound_SetVolume
(1)  155/    1CD5 :                     		
(1)  156/    1CD5 :                     .stop_track:
(1)  157/    1CD5 : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  158/    1CD8 : C3 22 01            		jp	Sound_StopTrack
(1)  159/    1CDB :                     
(1)  160/    1CDB :                     ; show values
(1)  161/    1CDB :                     .show_values:
(1)  162/    1CDB : 11 70 01            		ld	de,140h+30h
(1)  163/    1CDE : 3A 5C C2            		ld	a,(RAM_CurrSelect)
(1)  164/    1CE1 : B7                  		or	a
(1)  165/    1CE2 : C2 EF 1C            		jp	nz,.slot_1
(1)  166/    1CE5 : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  167/    1CE8 : B7                  		or	a
(1)  168/    1CE9 : C2 EF 1C            		jp	nz,.slot_1
(1)  169/    1CEC : 11 70 09            		ld	de,140h+30h|800h
(1)  170/    1CEF :                     .slot_1:
(1)  171/    1CEF : 01 08 07            		ld	bc,0708h
(1)  172/    1CF2 : DD 21 57 C2         		ld	ix,RAM_PlyrCurrIds
(1)  173/    1CF6 : CD 4C 1D            		call	.this_val
(1)  174/    1CF9 : DD 23               		inc 	ix
(1)  175/    1CFB : 11 70 01            		ld	de,140h+30h
(1)  176/    1CFE : 3A 5C C2            		ld	a,(RAM_CurrSelect)
(1)  177/    1D01 : B7                  		or	a
(1)  178/    1D02 : C2 0F 1D            		jp	nz,.slot_2
(1)  179/    1D05 : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  180/    1D08 : B7                  		or	a
(1)  181/    1D09 : CA 0F 1D            		jp	z,.slot_2
(1)  182/    1D0C : 11 70 09            		ld	de,140h+30h|800h
(1)  183/    1D0F :                     .slot_2:
(1)  184/    1D0F : 01 0A 07            		ld	bc,070Ah
(1)  185/    1D12 : CD 4C 1D            		call	.this_val
(1)  186/    1D15 :                     		
(1)  187/    1D15 : 11 70 01            		ld	de,140h+30h
(1)  188/    1D18 : 3A 5C C2            		ld	a,(RAM_CurrSelect)
(1)  189/    1D1B : B7                  		or	a
(1)  190/    1D1C : CA 29 1D            		jp	z,.slot_3
(1)  191/    1D1F : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  192/    1D22 : B7                  		or	a
(1)  193/    1D23 : C2 29 1D            		jp	nz,.slot_3
(1)  194/    1D26 : 11 70 09            		ld	de,140h+30h|800h
(1)  195/    1D29 :                     .slot_3:
(1)  196/    1D29 : 01 08 0D            		ld	bc,0D08h
(1)  197/    1D2C : DD 21 59 C2         		ld	ix,RAM_PlyrCurrVol
(1)  198/    1D30 : CD 4C 1D            		call	.this_val
(1)  199/    1D33 : DD 23               		inc 	ix
(1)  200/    1D35 : 11 70 01            		ld	de,140h+30h
(1)  201/    1D38 : 3A 5C C2            		ld	a,(RAM_CurrSelect)
(1)  202/    1D3B : B7                  		or	a
(1)  203/    1D3C : CA 49 1D            		jp	z,.slot_4
(1)  204/    1D3F : 3A 5B C2            		ld	a,(RAM_CurrTrack)
(1)  205/    1D42 : B7                  		or	a
(1)  206/    1D43 : CA 49 1D            		jp	z,.slot_4
(1)  207/    1D46 : 11 70 09            		ld	de,140h+30h|800h
(1)  208/    1D49 :                     .slot_4:
(1)  209/    1D49 : 01 0A 0D            		ld	bc,0D0Ah
(1)  210/    1D4C :                     
(1)  211/    1D4C :                     ; ----------------------------------------
(1)  212/    1D4C :                     ; show current value
(1)  213/    1D4C :                     .this_val:
(1)  214/    1D4C : 21 00 38            		ld	hl,3800h
(1)  215/    1D4F : DB 00               		in	a,(gg_info)
(1)  216/    1D51 : E6 1F               		and	1Fh
(1)  217/    1D53 : C2 58 1D            		jp	nz,.nocent
(1)  218/    1D56 : 2E CC               		ld	l,0CCh
(1)  219/    1D58 :                     .nocent:
(1)  220/    1D58 : D5                  		push	de
(1)  221/    1D59 : 11 00 00            		ld	de,0
(1)  222/    1D5C : 79                  		ld	a,c		; Y pos left
(1)  223/    1D5D : 0F                  		rrca	
(1)  224/    1D5E : 0F                  		rrca
(1)  225/    1D5F : E6 07               		and	07h
(1)  226/    1D61 : 57                  		ld	d,a
(1)  227/    1D62 : 78                  		ld	a,b		; X pos + Y pos right YYXXXXXXb
(1)  228/    1D63 : E6 1F               		and	1Fh
(1)  229/    1D65 : 87                  		add 	a,a
(1)  230/    1D66 : 5F                  		ld	e,a
(1)  231/    1D67 : 79                  		ld	a,c
(1)  232/    1D68 : E6 03               		and	11b
(1)  233/    1D6A : 0F                  		rrca
(1)  234/    1D6B : 0F                  		rrca
(1)  235/    1D6C : B3                  		or	e
(1)  236/    1D6D : 5F                  		ld	e,a
(1)  237/    1D6E : 19                  		add 	hl,de
(1)  238/    1D6F : D1                  		pop	de
(1)  239/    1D70 :                     
(1)  240/    1D70 :                     	; X/Y pos goes here
(1)  241/    1D70 : 0E BF               		ld	c,vdp_ctrl
(1)  242/    1D72 : 7C                  		ld	a,h
(1)  243/    1D73 : F6 40               		or	40h
(1)  244/    1D75 : 67                  		ld	h,a
(1)  245/    1D76 : ED 69               		out	(c),l
(1)  246/    1D78 : ED 61               		out	(c),h
(1)  247/    1D7A :                     
(1)  248/    1D7A : 0E BE               		ld	c,vdp_data
(1)  249/    1D7C : 21 00 00            		ld	hl,0
(1)  250/    1D7F : DD 7E 00            		ld	a,(ix)
(1)  251/    1D82 : 0F                  		rrca
(1)  252/    1D83 : 0F                  		rrca
(1)  253/    1D84 : 0F                  		rrca
(1)  254/    1D85 : 0F                  		rrca
(1)  255/    1D86 : E6 0F               		and	00001111b
(1)  256/    1D88 : FE 0A               		cp	0Ah
(1)  257/    1D8A : DA 8F 1D            		jp	c,.no_A1
(1)  258/    1D8D : C6 07               		add 	a,7
(1)  259/    1D8F :                     .no_A1:
(1)  260/    1D8F : 6F                  		ld	l,a
(1)  261/    1D90 : 19                  		add 	hl,de
(1)  262/    1D91 : ED 69               		out	(c),l
(1)  263/    1D93 : ED 61               		out	(c),h
(1)  264/    1D95 :                     
(1)  265/    1D95 : 21 00 00            		ld	hl,0
(1)  266/    1D98 : DD 7E 00            		ld	a,(ix)
(1)  267/    1D9B : E6 0F               		and	00001111b
(1)  268/    1D9D : FE 0A               		cp	0Ah
(1)  269/    1D9F : DA A4 1D            		jp	c,.no_A2
(1)  270/    1DA2 : C6 07               		add 	a,7
(1)  271/    1DA4 :                     .no_A2:
(1)  272/    1DA4 : 6F                  		ld	l,a
(1)  273/    1DA5 : 19                  		add 	hl,de
(1)  274/    1DA6 : ED 69               		out	(c),l
(1)  275/    1DA8 : ED 61               		out	(c),h
(1)  276/    1DAA : C9                  		ret
(1)  277/    1DAB :                     
(1)  278/    1DAB :                     ; ====================================================================
(1)  279/    1DAB :                     ; ----------------------------------------------------------------
(1)  280/    1DAB :                     ; Small data
(1)  281/    1DAB :                     ; ----------------------------------------------------------------
(1)  282/    1DAB :                     
(1)  283/    1DAB : 50 75 6C 73 65 4D   str_Test:	db "PulseMini tester",0Ah
                    69 6E 69 20 74 65 
                    73 74 65 72 0A 
(1)  284/    1DBC : 56 65 72 20 30 38   		db "Ver 08/2019",0Ah
                    2F 32 30 31 39 0A 
(1)  285/    1DC8 : 0A                  		db 0Ah
(1)  286/    1DC9 : 2D 2D 2D 20 54 72   		db "--- Trk / Vol",0Ah
                    6B 20 2F 20 56 6F 
                    6C 0A 
(1)  287/    1DD7 : 0A                  		db 0Ah
(1)  288/    1DD8 : 53 46 58 20 20 20   		db "SFX          ",0Ah
                    20 20 20 20 20 20 
                    20 0A 
(1)  289/    1DE6 : 0A                  		db 0Ah
(1)  290/    1DE7 : 42 47 4D 20 20 20   		db "BGM          ",0
                    20 20 20 20 20 20 
                    20 00 
(1)  291/    1DF5 :                     
(1)  292/    1DF5 :                     pal_FontNew:
(1)  293/    1DF5 : 00 00 EE 0E CC 0C   		dw 0000h,0EEEh,0CCCh,0AAAh,0888h,0444h,000Eh,0008h
                    AA 0A 88 08 44 04 
                    0E 00 08 00 
(1)  294/    1E05 : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  295/    1E15 : 00 00 AE 00 8C 00   		dw 0000h,00AEh,008Ch,006Ah,0048h,0024h,000Eh,0008h
                    6A 00 48 00 24 00 
                    0E 00 08 00 
(1)  296/    1E25 : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  297/    1E35 :                     		
(1)  298/    1E35 :                     trackData_test:
(1)  299/    1E35 : 01                  		db DataBank0>>14
(1)  300/    1E36 : 00                  		db 0
(1)  301/    1E37 : 00                  		db 0
(1)  302/    1E38 : 03                  		db 3
(1)  303/    1E39 : 13 40               		dw MusicBlk_TestMe
(1)  304/    1E3B : 16 40               		dw MusicPat_TestMe
(1)  305/    1E3D : 7F 42               		dw MusicIns_TestMe
(1)  306/    1E3F : 00 00 00 00         		dw 0,0
(1)  307/    1E43 : 00 00               		dw 0
(1)  308/    1E45 :                     
(1)  309/    1E45 : 01                  		db DataBank0>>14
(1)  310/    1E46 : 00                  		db 0
(1)  311/    1E47 : 00                  		db 0
(1)  312/    1E48 : 02                  		db 2
(1)  313/    1E49 : B7 42               		dw MusicBlk_Gigalo
(1)  314/    1E4B : C4 42               		dw MusicPat_Gigalo
(1)  315/    1E4D : 20 62               		dw MusicIns_Gigalo
(1)  316/    1E4F : 00 00 00 00         		dw 0,0
(1)  317/    1E53 : 00 00               		dw 0
(1)  318/    1E55 :                     		
(1)  319/    1E55 : 01                  		db DataBank0>>14
(1)  320/    1E56 : 00                  		db 0
(1)  321/    1E57 : 00                  		db 0
(1)  322/    1E58 : 03                  		db 3
(1)  323/    1E59 : 13 40               		dw MusicBlk_TestMe
(1)  324/    1E5B : 16 40               		dw MusicPat_TestMe
(1)  325/    1E5D : 7F 42               		dw MusicIns_TestMe
(1)  326/    1E5F : 00 00 00 00         		dw 0,0
(1)  327/    1E63 : 00 00               		dw 0
(1)  328/    1E65 :                     		
(1)  329/    1E65 : 01                  		db DataBank0>>14
(1)  330/    1E66 : 00                  		db 0
(1)  331/    1E67 : 00                  		db 0
(1)  332/    1E68 : 03                  		db 3
(1)  333/    1E69 : 13 40               		dw MusicBlk_TestMe
(1)  334/    1E6B : 16 40               		dw MusicPat_TestMe
(1)  335/    1E6D : 7F 42               		dw MusicIns_TestMe
(1)  336/    1E6F : 00 00 00 00         		dw 0,0
(1)  337/    1E73 : 00 00               		dw 0
(1)  338/    1E75 :                     
     142/    1E75 :                     CodeBank0_e:
     146/    1E75 :                     	
     147/    1E75 :                     ; ====================================================================
     148/    1E75 :                     ; DEFAULT BANK 1
     149/    1E75 :                     ; 4000-7FFFh
     150/    1E75 :                     ; ====================================================================
     151/    1E75 :                     		
     152/    1E75 :                     		align 4000h
     153/    4000 :                     DataBank0:
     154/    4000 :                     		include	"game/data.asm"
(1)    1/    4000 :                     ; ====================================================================
(1)    2/    4000 :                     ; ----------------------------------------------------------------
(1)    3/    4000 :                     ; 
(1)    4/    4000 :                     ; ----------------------------------------------------------------
(1)    5/    4000 :                     
(1)    6/    4000 : 47 41 4D 45 20 44   		db "GAME DATA GOES HERE"
                    41 54 41 20 47 4F 
                    45 53 20 48 45 52 
                    45 
(1)    7/    4013 :                     
(1)    8/    4013 :                     
(1)    9/    4013 :                     
     155/    4013 :                     		include	"game/sound/data.asm"
(1)    1/    4013 :                     ; ================================================================
(1)    2/    4013 :                     ; ------------------------------------------------------------
(1)    3/    4013 :                     ; DATA SECTION
(1)    4/    4013 :                     ; 
(1)    5/    4013 :                     ; SOUND
(1)    6/    4013 :                     ; ------------------------------------------------------------
(1)    7/    4013 :                     
(1)    8/    4013 :                     ; TYPES:
(1)    9/    4013 :                     ;  -1 - ignore
(1)   10/    4013 :                     ;   0 - FM normal
(1)   11/    4013 :                     ;   1 - FM special
(1)   12/    4013 :                     ;   2 - FM sample
(1)   13/    4013 :                     ; $80 - PSG
(1)   14/    4013 :                     ; $E0 - PSG noise
(1)   15/    4013 :                     
(1)   16/    4013 : =0H                 insFM		equ 0
(1)   17/    4013 : =1H                 insFM3		equ 1
(1)   18/    4013 : =2H                 insFM6		equ 2
(1)   19/    4013 : =80H                insPSG		equ 80h
(1)   20/    4013 : =E0H                insPBass0	equ 0E0h
(1)   21/    4013 : =E1H                insPBass1	equ 0E1h
(1)   22/    4013 : =E2H                insPBass2	equ 0E2h
(1)   23/    4013 : =E3H                insPBass3	equ 0E3h		; Grabs PSG3 frequency
(1)   24/    4013 : =E4H                insPNoise0	equ 0E4h
(1)   25/    4013 : =E5H                insPNoise1	equ 0E5h
(1)   26/    4013 : =E6H                insPNoise2	equ 0E6h
(1)   27/    4013 : =E7H                insPNoise3	equ 0E7h		; Grabs PSG3 frequency
(1)   28/    4013 :                     
(1)   29/    4013 :                     instrSlot	macro TYPE,OPT,LABEL
(1)   30/    4013 :                     	if TYPE=-1
(1)   31/    4013 :                     		db -1,-1,-1,-1
(1)   32/    4013 :                     	else
(1)   33/    4013 :                     		db TYPE,OPT
(1)   34/    4013 :                     		dw LABEL
(1)   35/    4013 :                     	endif
(1)   36/    4013 :                     		endm
(1)   37/    4013 :                     
(1)   38/    4013 :                     ; ----------------------------------------------------
(1)   39/    4013 :                     ; Sound bank
(1)   40/    4013 :                     ; ----------------------------------------------------
(1)   41/    4013 :                     		
(1)   42/    4013 :                     ; MusicBlk_Sample:
(1)   43/    4013 :                     ; 		binclude "game/sound/music/musictrck_blk.bin"		; BLOCKS data
(1)   44/    4013 :                     ; MusicPat_Sample:
(1)   45/    4013 :                     ; 		binclude "game/sound/music/musictrck_patt.bin"		; PATTERN data
(1)   46/    4013 :                     ; Instruments staring from number 01
(1)   47/    4013 :                     ; MusicIns_Sample:
(1)   48/    4013 :                     ; 		instrSlot      insFM,0,FmIns_Piano_Small		; FM normal: type,pitch,regdata
(1)   49/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_OpenHat		; FM special (channel 3): type,pitch,regdata+exfreq
(1)   50/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_ClosedHat
(1)   51/    4013 :                     ; 		instrSlot     insFM6,0,.kick				; FM sample (channel 6): type,pitch,custompointer (see below)
(1)   52/    4013 :                     ; 		instrSlot     insFM6,0,.snare
(1)   53/    4013 :                     ; 		instrSlot     insPSG,0,PsgIns_00			; PSG (channels 1-3): type,pitch,envelope data
(1)   54/    4013 :                     ; 		instrSlot insPBass0,0,PsgIns_00				; PSG Noise (channels 1-3): type,pitch,envelope data
(1)   55/    4013 :                     ; 		instrSlot insPBass1,0,PsgIns_00
(1)   56/    4013 :                     ; 		instrSlot insPBass2,0,PsgIns_00
(1)   57/    4013 :                     ; 		instrSlot insPBass3,0,PsgIns_00				; If using bass/noise type 3, NOISE will grab the frequency from chnl 3
(1)   58/    4013 :                     ; 		instrSlot insPNoise0,0,PsgIns_00
(1)   59/    4013 :                     ; 		instrSlot insPNoise1,0,PsgIns_00
(1)   60/    4013 :                     ; 		instrSlot insPNoise2,0,PsgIns_00
(1)   61/    4013 :                     ; 		instrSlot insPNoise3,0,PsgIns_00
(1)   62/    4013 :                     ; if using insFM6 instruments:
(1)   63/    4013 :                     ; .kick:	instrSmpl 0,WavIns_Kick,WavIns_Kick_e,WavIns_Kick	; sample flags (ex. loop), START, END, LOOP
(1)   64/    4013 :                     ; .snare:	instrSmpl 0,WavIns_Snare,WavIns_Snare_e,WavIns_Snare
(1)   65/    4013 :                     
(1)   66/    4013 :                     ; ------------------------------------
(1)   67/    4013 :                     ; Track TESTME
(1)   68/    4013 :                     ; ------------------------------------
(1)   69/    4013 :                     
(1)   70/    4013 :                     MusicBlk_TestMe:
(1)   71/    4013 :                     		binclude "game/sound/music/lasttest_blk.bin"		; BLOCKS data
(1)   72/    4016 :                     MusicPat_TestMe:
(1)   73/    4016 :                     		binclude "game/sound/music/lasttest_patt.bin"		; PATTERN data
(1)   74/    427F :                     MusicIns_TestMe:
(1)   75/    427F : (MACRO)             		instrSlot -1
(1)   75/    427F : FF FF FF FF                         db -1,-1,-1,-1
(1)   76/    4283 : (MACRO)             		instrSlot -1
(1)   76/    4283 : FF FF FF FF                         db -1,-1,-1,-1
(1)   77/    4287 : (MACRO)             		instrSlot -1
(1)   77/    4287 : FF FF FF FF                         db -1,-1,-1,-1
(1)   78/    428B : (MACRO)             		instrSlot -1
(1)   78/    428B : FF FF FF FF                         db -1,-1,-1,-1
(1)   79/    428F : (MACRO)             		instrSlot -1
(1)   79/    428F : FF FF FF FF                         db -1,-1,-1,-1
(1)   80/    4293 : (MACRO)             		instrSlot     insPSG,0,PsgIns_00
(1)   80/    4293 : 80 00                               db INSPSG,0
(1)   80/    4295 : F7 08                               dw PSGINS_00
(1)   81/    4297 : (MACRO)             		instrSlot insPBass0,0,PsgIns_00
(1)   81/    4297 : E0 00                               db INSPBASS0,0
(1)   81/    4299 : F7 08                               dw PSGINS_00
(1)   82/    429B : (MACRO)             		instrSlot insPBass1,0,PsgIns_00
(1)   82/    429B : E1 00                               db INSPBASS1,0
(1)   82/    429D : F7 08                               dw PSGINS_00
(1)   83/    429F : (MACRO)             		instrSlot insPBass2,0,PsgIns_00
(1)   83/    429F : E2 00                               db INSPBASS2,0
(1)   83/    42A1 : F7 08                               dw PSGINS_00
(1)   84/    42A3 : (MACRO)             		instrSlot insPBass3,0,PsgIns_00
(1)   84/    42A3 : E3 00                               db INSPBASS3,0
(1)   84/    42A5 : F7 08                               dw PSGINS_00
(1)   85/    42A7 : (MACRO)             		instrSlot insPNoise0,0,PsgIns_00
(1)   85/    42A7 : E4 00                               db INSPNOISE0,0
(1)   85/    42A9 : F7 08                               dw PSGINS_00
(1)   86/    42AB : (MACRO)             		instrSlot insPNoise1,0,PsgIns_00
(1)   86/    42AB : E5 00                               db INSPNOISE1,0
(1)   86/    42AD : F7 08                               dw PSGINS_00
(1)   87/    42AF : (MACRO)             		instrSlot insPNoise2,0,PsgIns_00
(1)   87/    42AF : E6 00                               db INSPNOISE2,0
(1)   87/    42B1 : F7 08                               dw PSGINS_00
(1)   88/    42B3 : (MACRO)             		instrSlot insPNoise3,0,PsgIns_00
(1)   88/    42B3 : E7 00                               db INSPNOISE3,0
(1)   88/    42B5 : F7 08                               dw PSGINS_00
(1)   89/    42B7 :                     
(1)   90/    42B7 :                     ; ------------------------------------
(1)   91/    42B7 :                     ; Track Gigalo
(1)   92/    42B7 :                     ; ------------------------------------
(1)   93/    42B7 :                     
(1)   94/    42B7 :                     MusicBlk_Gigalo:
(1)   95/    42B7 :                     		binclude "game/sound/music/gigalo_psg_blk.bin"
(1)   96/    42C4 :                     MusicPat_Gigalo:
(1)   97/    42C4 :                     		binclude "game/sound/music/gigalo_psg_patt.bin"
(1)   98/    6220 :                     MusicIns_Gigalo:
(1)   99/    6220 : (MACRO)             		instrSlot     insPSG,0,PsgIns_01
(1)   99/    6220 : 80 00                               db INSPSG,0
(1)   99/    6222 : F9 08                               dw PSGINS_01
(1)  100/    6224 : (MACRO)             		instrSlot insPNoise0,0,PsgIns_01
(1)  100/    6224 : E4 00                               db INSPNOISE0,0
(1)  100/    6226 : F9 08                               dw PSGINS_01
(1)  101/    6228 : (MACRO)             		instrSlot insPNoise1,0,PsgIns_01
(1)  101/    6228 : E5 00                               db INSPNOISE1,0
(1)  101/    622A : F9 08                               dw PSGINS_01
(1)  102/    622C : (MACRO)             		instrSlot insPNoise2,0,PsgIns_01
(1)  102/    622C : E6 00                               db INSPNOISE2,0
(1)  102/    622E : F9 08                               dw PSGINS_01
(1)  103/    6230 :                     
     156/    6230 :                     DataBank0_e:
     160/    6230 :                     	
     161/    6230 :                     ; ============================================================
     162/    6230 :                     ; Header must be at the end of BANK 1
     163/    6230 :                     ; ============================================================
     164/    6230 :                     
     165/    6230 :                     		align 7FF0h			; Align up to 7FF0h (almost at the end of BANK 1)
     166/    7FF0 : 54 4D 52 20 53 45   		db "TMR SEGA  "			; TMR SEGA
                    47 41 20 20 
     167/    7FFA : 00 00               		dw 0				; Checksum (externally calculated)
     168/    7FFC : 00 00               		dw 0				; Serial
     169/    7FFE : 00                  		db 0				; Version
     170/    7FFF : 4C                  		db 4Ch				; ROM size: 32k
     171/    8000 :                     
     172/    8000 :                     ; ====================================================================
     173/    8000 :                     		
     174/    8000 :                     ROM_END:	align 8000h
     175/    8000 :                     
 AS V1.42 Beta [Bld 118] - source file main.asm - page 2 - 8/22/2019 19:19:08


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :                                        x86_64-unknown-linux - |
 ART_PRINTFONT :                B3F C |  ART_PRINTFONT_E :             173F C |
 BANK_0 :                      FFFD - |  BANK_1 :                      FFFE - |
 BANK_2 :                      FFFF - |  BANK_CTRL :                   FFFC - |
*BIGENDIAN :                      0 - |  BITJOY1 :                        4 - |
 BITJOY2 :                        5 - |  BITJOYDOWN :                     1 - |
 BITJOYLEFT :                     2 - |  BITJOYRIGHT :                    3 - |
 BITJOYSTART :                    7 - |  BITJOYUP :                       0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
 CHNL_CHIP :                      0 - |  CHNL_EFFARG :                    6 - |
 CHNL_EFFID :                     5 - |  CHNL_EFNEWFREQ :                15 - |
 CHNL_EFNEWVOL :                 12 - |  CHNL_EFPORTAM :                 13 - |
 CHNL_EFVOLSLIDE :               11 - |  CHNL_FREQ :                      9 - |
 CHNL_INS :                       3 - |  CHNL_INSADDR :                   7 - |
 CHNL_INSOPT :                    C - |  CHNL_INSTYPE :                   B - |
 CHNL_NOTE :                      2 - |  CHNL_PSGINDX :                  10 - |
 CHNL_PSGOUTFREQ :               17 - |  CHNL_PSGPAN :                    D - |
 CHNL_PSGVOLBASE :                E - |  CHNL_PSGVOLENV :                 F - |
 CHNL_TYPE :                      1 - |  CHNL_VOL :                       4 - |
*CODEBANK0 :                   1C00 C | *CODEBANK0_E :                 1E75 C |
*CONSTPI :        3.141592653589793 - |  CONTROLLER_1 :                C24D - |
*CONTROLLER_2 :                C24F - |  CURR_NOISEMODE :              C148 C |
 CURR_PSGSTEREO :              C14A C |  CURR_SNDBANK :                C149 C |
 DATABANK0 :                   4000 C | *DATABANK0_E :                 6230 C |
*DATE :                   8/22/2019 - | *FALSE :                          0 - |
*FULLPMMU :                       1 - |  GG_EXT_BITDIR :                  2 - |
 GG_EXT_COMM :                    1 - |  GG_INFO :                        0 - |
 GG_SERIAL :                      5 - | *GG_SERIAL_IN :                   4 - |
*GG_SERIAL_OUT :                  3 - |  GG_STEREO :                      6 - |
 GLBL_LASTORG :                1C00 - |  GLBL_LASTPC :                 1C00 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSFM :                          0 - |
*INSFM3 :                         1 - | *INSFM6 :                         2 - |
 INSPBASS0 :                     E0 - |  INSPBASS1 :                     E1 - |
 INSPBASS2 :                     E2 - |  INSPBASS3 :                     E3 - |
 INSPNOISE0 :                    E4 - |  INSPNOISE1 :                    E5 - |
 INSPNOISE2 :                    E6 - |  INSPNOISE3 :                    E7 - |
 INSPSG :                        80 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - |  INT_EXIT :                      4B C |
*JOY1 :                          10 - | *JOY2 :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
 JOYPAD_1 :                      DC - |  JOYPAD_2 :                      DD - |
*JOYPAD_CTRL :                   3F - | *JOYRIGHT :                       8 - |
*JOYUP :                          1 - | *LISTON :                         3 - |
 LIST_VDPREGS :                 B34 C | *MACEXP :                         7 - |
 MAX_CHNLS :                      4 - |  MAX_MSERAM :                  1000 - |
 MAX_PRNTLIST :                  10 - | *MAX_TRACKS :                     2 - |
*MEMORY_CTRL :                   3E - | *MERCURY :                        0 - |
*MOMCPU :                        80 - | *MOMCPUNAME :                   Z80 - |
 MSRAM_START :                 C000 - |  MS_HINT :                       86 C |
 MS_INIT :                     1800 C |  MS_VINT :                       67 C |
 MUSICBLK_GIGALO :             42B7 C |  MUSICBLK_TESTME :             4013 C |
 MUSICINS_GIGALO :             6220 C |  MUSICINS_TESTME :             427F C |
 MUSICPAT_GIGALO :             42C4 C |  MUSICPAT_TESTME :             4016 C |
*NESTMAX :                      100 - |  ON_HOLD :                        0 C |
 ON_PRESS :                       1 C | *PACKING :                        0 - |
*PADDING :                        1 - |  PAL_FONTNEW :                 1DF5 C |
 PAL_PRINTFONT :               173F C | *PLYR_ANI_CNTR :                  6 C |
*PLYR_ANI_TIMER :                 5 C | *PLYR_FRAME :                     4 C |
*PLYR_X :                         0 C | *PLYR_Y :                         2 C |
 PSGFREQ_LIST :                 805 C |  PSGINS_00 :                    8F7 C |
 PSGINS_01 :                    8F9 C | *PSGINS_02 :                    8FF C |
*PSGINS_03 :                    902 C | *PSGINS_04 :                    90E C |
 PSG_CTRL :                      7F - |  RAM_CURRSELECT :              C25C C |
 RAM_CURRSELECT.B_HOLD :       1C56 C |  RAM_CURRSELECT.FIRSTTRCK :    1C6B C |
 RAM_CURRSELECT.IDMODE :       1C63 C |  RAM_CURRSELECT.IDMODE2 :      1C84 C |
 RAM_CURRSELECT.LOOP :         1C20 C |  RAM_CURRSELECT.MODIFY_ID :    1C93 C |
 RAM_CURRSELECT.MODIFY_SELECT :                                        1C97 C |
 RAM_CURRSELECT.MODIFY_TRACK : 1CA1 C |  RAM_CURRSELECT.NOCENT :       1D58 C |
 RAM_CURRSELECT.NO_A1 :        1D8F C |  RAM_CURRSELECT.NO_A2 :        1DA4 C |
 RAM_CURRSELECT.PLAY_TRACK :   1CAB C |  RAM_CURRSELECT.REFRESH :      1C79 C |
 RAM_CURRSELECT.SHOW_VALUES :  1CDB C |  RAM_CURRSELECT.SLOT_1 :       1CEF C |
 RAM_CURRSELECT.SLOT_2 :       1D0F C |  RAM_CURRSELECT.SLOT_3 :       1D29 C |
 RAM_CURRSELECT.SLOT_4 :       1D49 C |  RAM_CURRSELECT.STOP_TRACK :   1CD5 C |
 RAM_CURRSELECT.THIS_VAL :     1D4C C | *RAM_CURRSPRX :                C24B C |
*RAM_CURRSPRY :                C249 C |  RAM_CURRTRACK :               C25B C |
*RAM_GLBL_NULL :               D257 C |  RAM_GLOBAL :                  D257 C |
 RAM_HBLANK :                  C254 C |  RAM_INPUTDATA :               C24D C |
 RAM_LOCAL :                   C257 C |  RAM_MSSOUND :                 C000 C |
 RAM_MSSYSTEM :                C24D C |  RAM_MSVIDEO :                 C14C C |
 RAM_PLYRCURRIDS :             C257 C |  RAM_PLYRCURRVOL :             C259 C |
*RAM_SPRTX :                   C1C9 C | *RAM_SPRTY :                   C189 C |
 RAM_VBLANK :                  C251 C |  RAM_VDPCACHE :                C17E C |
 RAM_VIDPRNTLIST :             C14C C |  RAM_VIDPRNTVRAM :             C17C C |
*RELAXED :                        0 - | *ROM_END :                     8000 C |
 SIZEOF_GLOBAL :               D258 C |  SIZEOF_GLOBAL.VINT :            48 C |
 SIZEOF_INPUT :                   2 C | *SIZEOF_MDRAM :                C005 C |
*SIZEOF_MSRAM :                D258 C |  SIZEOF_MSSND :                C14C C |
 SIZEOF_MSSYS :                C257 C |  SIZEOF_MSVID :                C24D C |
 SNDBUFF_CHNLBUFF_1 :          C040 C |  SNDBUFF_CHNLBUFF_2 :          C0C0 C |
 SNDBUFF_TRACK_1 :             C000 C |  SNDBUFF_TRACK_2 :             C020 C |
 SNDBUFF_USEDCHNLS :           C140 C |  SNDBUFF_USEDCHNLS_2 :         C144 C |
 SNDDRV_READTRACK :             12F C |  SNDDRV_READTRACK.CHIP_SETUP :  320 C |
 SNDDRV_READTRACK.CLRPANFIRST : 2E7 C |
 SNDDRV_READTRACK.DONTUPD_TRCK :                                        1B1 C |
 SNDDRV_READTRACK.DWN_EXFINE :  52F C |  SNDDRV_READTRACK.DWN_FINE :    53F C |
 SNDDRV_READTRACK.EFF_A :       4DF C |  SNDDRV_READTRACK.EFF_B :       4E7 C |
 SNDDRV_READTRACK.EFF_D :       4F7 C |  SNDDRV_READTRACK.EFF_E :       511 C |
 SNDDRV_READTRACK.EFF_F :       551 C |  SNDDRV_READTRACK.EFF_LIST :    4A9 C |
 SNDDRV_READTRACK.EFF_NULL :    4A8 C |  SNDDRV_READTRACK.EFF_X :       58A C |
*SNDDRV_READTRACK.EXIT_BUSY :   228 C |  SNDDRV_READTRACK.EXIT_NOTES :  227 C |
 SNDDRV_READTRACK.FM_NORMALCHNL :                                       431 C |
*SNDDRV_READTRACK.FM_TURNOFF :  601 C |  SNDDRV_READTRACK.FORCE_ON :    153 C |
 SNDDRV_READTRACK.FREQRN_FM :   5F0 C |  SNDDRV_READTRACK.FREQRN_NOT3 : 5E4 C |
 SNDDRV_READTRACK.FREQRN_PSG :  5F2 C |  SNDDRV_READTRACK.FREQRN_SMPL : 5F1 C |
*SNDDRV_READTRACK.GO_DOWN :     501 C |  SNDDRV_READTRACK.GO_UP :       507 C |
 SNDDRV_READTRACK.GRAB_INSTSLOT :                                       5BE C |
 SNDDRV_READTRACK.KEEP_CTRL :   1DF C |  SNDDRV_READTRACK.LAST_ENV :    30B C |
 SNDDRV_READTRACK.LIST_DOEFF :  686 C |  SNDDRV_READTRACK.LOOP_ME :     1BC C |
 SNDDRV_READTRACK.LOWPRIOSET :  3D6 C |  SNDDRV_READTRACK.LOWUNLKSET :  43F C |
*SNDDRV_READTRACK.NEXT_PSG :    31F C |  SNDDRV_READTRACK.NOTYPE3 :     425 C |
 SNDDRV_READTRACK.NOT_NOISE :   29F C |  SNDDRV_READTRACK.NOT_NSE :     64D C |
 SNDDRV_READTRACK.NOT_NSE3 :    63D C |  SNDDRV_READTRACK.NOT_STEREO :  27C C |
 SNDDRV_READTRACK.NO_EFF :      20B C |  SNDDRV_READTRACK.NO_INST :     1F4 C |
 SNDDRV_READTRACK.NO_MAX :      317 C |  SNDDRV_READTRACK.NO_NEWEFF :   38A C |
 SNDDRV_READTRACK.NO_NEWINST :  371 C |  SNDDRV_READTRACK.NO_NEWVOL :   3C9 C |
 SNDDRV_READTRACK.NO_NOTE :     1EB C |  SNDDRV_READTRACK.NO_NOTEREQ :  3AD C |
 SNDDRV_READTRACK.NO_TONE3 :    262 C |  SNDDRV_READTRACK.NO_UPD_FREQ : 2C7 C |
 SNDDRV_READTRACK.NO_VOL :      1FD C |  SNDDRV_READTRACK.PNTOO_LOW :   617 C |
 SNDDRV_READTRACK.PNTOO_MUCH :  612 C |  SNDDRV_READTRACK.PNTOPPSGV :   623 C |
 SNDDRV_READTRACK.PRTDWN_CONT : 550 C |  SNDDRV_READTRACK.PRTUP_CONT :  589 C |
 SNDDRV_READTRACK.PSGPAN_LIST : 5BA C |  SNDDRV_READTRACK.PSG_EF :      6F3 C |
 SNDDRV_READTRACK.PSG_ENVLOPE : 27D C |  SNDDRV_READTRACK.PSG_INSTR :   35E C |
 SNDDRV_READTRACK.ROW_COUNTDWN :                                        22E C |
 SNDDRV_READTRACK.RUN_EFFECT :  66D C |
 SNDDRV_READTRACK.RUN_FREQUENCY :                                       5D4 C |
 SNDDRV_READTRACK.SEARCH_SLOT : 3EA C |
 SNDDRV_READTRACK.SETFM_SAMPLE :                                        454 C |
 SNDDRV_READTRACK.SETFREQ_PSG : 455 C |  SNDDRV_READTRACK.SETPSG_VOL :  6D0 C |
 SNDDRV_READTRACK.SET_D :       6BC C |  SNDDRV_READTRACK.SET_EFFECT :  48F C |
 SNDDRV_READTRACK.SET_E_F :     6D6 C |  SNDDRV_READTRACK.SET_FM_FREQ : 603 C |
 SNDDRV_READTRACK.SET_FM_INS :  602 C |  SNDDRV_READTRACK.SET_FM_VOL :  604 C |
 SNDDRV_READTRACK.SET_FREQUENCY :                                       415 C |
 SNDDRV_READTRACK.SET_PORTAM :  54A C |
 SNDDRV_READTRACK.SET_PSG_FREQ :                                        62A C |
 SNDDRV_READTRACK.SET_PSG_VOL : 606 C | *SNDDRV_READTRACK.SET_SAMPL :   605 C |
 SNDDRV_READTRACK.SET_STEREO :  266 C |  SNDDRV_READTRACK.SET_TIMER :   224 C |
 SNDDRV_READTRACK.SET_VOL :     31C C |  SNDDRV_READTRACK.SET_VOLUME :  407 C |
 SNDDRV_READTRACK.SET_X :       711 C |  SNDDRV_READTRACK.SKIP_BLOCK :  218 C |
 SNDDRV_READTRACK.STOPSTRCHK :  5B6 C |  SNDDRV_READTRACK.STOP_TRACK :  21C C |
 SNDDRV_READTRACK.TOOLOW :      708 C |
*SNDDRV_READTRACK.TRCK_RESTART :                                        16C C |
 SNDDRV_READTRACK.UNLOCK_CHNL : 432 C |  SNDDRV_READTRACK.UP_EXFINE :   572 C |
 SNDDRV_READTRACK.UP_FINE :     57E C |  SNDDRV_READTRACK.USE_NEWEFF :  37E C |
 SNDDRV_READTRACK.USE_NEWINST : 336 C |  SNDDRV_READTRACK.USE_NEWVOL :  3BA C |
 SNDDRV_READTRACK.USE_NOTEREQ : 398 C |  SNDDRV_READTRACK.VOL_ISPSG :   411 C |
 SNDDRV_REQTRACK :              712 C |  SNDDRV_REQTRACK.REQ01 :        733 C |
 SNDDRV_REQTRACK.REQ02 :        78C C |  SNDDRV_REQTRACK.REQ_LIST :     72D C |
 SNDDRV_RESETCHAN :             790 C |  SNDDRV_RESETCHAN.DONTVOLFM :   7F8 C |
 SNDDRV_RESETCHAN.FM_SHUT :     7F8 C |  SNDDRV_RESETCHAN.INITCHNLS :   7AE C |
 SNDDRV_RESETCHAN.LOWPRIO :     79D C |  SNDDRV_RESETCHAN.NEXTTYPE :    7A0 C |
 SNDDRV_RESETCHAN.NXTFMCHNL :   7E2 C |  SOUND_INIT :                    89 C |
 SOUND_INIT.NXTCHNL :            AD C |  SOUND_RUN :                     C1 C |
 SOUND_SETTRACK :                D8 C |  SOUND_SETTRACK.SFX_PRIO :       E4 C |
 SOUND_SETVOLUME :              112 C |  SOUND_SETVOLUME.SFX_PRIO :     11E C |
 SOUND_STOPTRACK :              122 C |  SOUND_STOPTRACK.SFX_PRIO :     12C C |
 STR_TEST :                    1DAB C |  SYSTEM_INIT :                 175F C |
 SYSTEM_INIT.NOT_GG :          177E C |  SYSTEM_INPUT :                17AC C |
 SYSTEM_INPUT.NO_GGSTRT :      17BE C |  SYSTEM_VSYNC :                17A4 C |
*TIME :                    19:19:08 - |  TRACKDATA_TEST :              1E35 C |
 TRCK_ACTIVE :                   11 - |  TRCK_BLOCKCURR :                 E - |
 TRCK_BLOCKS :                   12 - |  TRCK_INSTR :                    16 - |
*TRCK_MASTERVOL :                 F - |  TRCK_PATTBASE :                 14 - |
 TRCK_PATTREAD :                 18 - |  TRCK_PRIORITY :                 10 - |
 TRCK_PSGNOISE :                  C - | *TRCK_PSGSTEREO :                20 - |
 TRCK_REQBLK :                    0 - | *TRCK_REQCHNLS :                  B - |
 TRCK_REQCURRBLK :                8 - |  TRCK_REQFLAG :                   A - |
 TRCK_REQINS :                    4 - |  TRCK_REQPATT :                   2 - |
 TRCK_REQSNDBNK :                 9 - |  TRCK_REQTEMPO :                  7 - |
 TRCK_REQTICKS :                  6 - |  TRCK_ROWSTEPS :                 1A - |
 TRCK_ROWWAIT :                  1E - |  TRCK_TEMPOBITS :                1D - |
 TRCK_TICKSCURR :                1F - |  TRCK_TICKSMAIN :                1C - |
 TRCK_TICKSREAD :                 D - |  TRCK_VOLUME :                   21 - |
*TRUE :                           1 - | *VARNULLVRAM :                  1FF - |
 VDP_CTRL :                      BF - |  VDP_DATA :                      BE - |
*VDP_PALETTE :                 C000 - | *VERSION :                     142F - |
 VIDEO_CLEAR :                  967 C |  VIDEO_CLEAR.CLRSCRN :          990 C |
 VIDEO_CLEAR.MARK_MS :          972 C |  VIDEO_CLEAR.PAL_CLR :          97E C |
 VIDEO_INIT :                   914 C |  VIDEO_INIT.LOOP :              921 C |
 VIDEO_INITPRINT :              92E C |  VIDEO_LOADART :                9D7 C |
 VIDEO_LOADART.LOOP :           9F6 C |  VIDEO_LOADPAL :                99A C |
 VIDEO_LOADPAL.LOOPMS :         9B9 C |  VIDEO_LOADPAL.MARK_MS :        9B1 C |
 VIDEO_PRINT :                  9FF C |  VIDEO_PRINT.BREQ :             A9A C |
 VIDEO_PRINT.DO_NIBBL :         B0D C |  VIDEO_PRINT.ENDVAL :           AFE C |
 VIDEO_PRINT.EXIT :             AB6 C |  VIDEO_PRINT.LOOP :             A39 C |
 VIDEO_PRINT.LOOPVAL :          ABA C |  VIDEO_PRINT.NEXT :             A5D C |
 VIDEO_PRINT.NOADD :            B1A C |  VIDEO_PRINT.NOBYTE :           AD6 C |
 VIDEO_PRINT.NOCENT :           A14 C |  VIDEO_PRINT.NOWORD :           AEB C |
 VIDEO_PRINT.PUT_BYTE :         B04 C |  VIDEO_PRINT.SPECIAL :          A6B C |
*VIDEO_UPDATE :                 955 C |  VIDEO_UPDATE.LOOP :            95C C |
*V_COUNTER :                     7E - |

    369 symbols
     76 unused symbols

 AS V1.42 Beta [Bld 118] - source file main.asm - page 3 - 8/22/2019 19:19:08


  defined macros:
  ---------------

FINISH                                | INSTRSLOT                            
ROMPAD                                | STRUCT                               

      4 macros

 AS V1.42 Beta [Bld 118] - source file main.asm - page 4 - 8/22/2019 19:19:08


  defined functions:
  ------------------

LOCATE                                |

 AS V1.42 Beta [Bld 118] - source file main.asm - page 5 - 8/22/2019 19:19:08


  codepages:
  ----------

STANDARD (0 changed characters)


0.31 seconds assembly time

   3917 lines source file
   4073 lines incl. macro expansions
      6 passes
      0 errors
      0 warnings
