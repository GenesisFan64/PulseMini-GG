 AS V1.42 Beta [Bld 118] - source file main.asm - page 1 - 8/15/2019 1:47:24


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; SEGA MASTER SYSTEM GAME TEMPLATE
       4/       0 :                     ; +-----------------------------------------------------------------+
       5/       0 :                     
       6/       0 :                     		!org 0				; [AS] Start at 0
       7/       0 :                     		listing purecode		; [AS] Want listing file, but only the final code in expanded macros
       8/       0 :                     		supmode on 			; [AS] Supervisor mode
       9/       0 :                     		page 0				; [AS] Listing page 0
      10/       0 :                     		cpu Z80				; [AS] Current CPU is Z80
      11/       0 :                     		
      12/       0 :                     ; ====================================================================
      13/       0 :                     ; ----------------------------------------------------------------
      14/       0 :                     ; Include variables
      15/       0 :                     ; ----------------------------------------------------------------
      16/       0 :                     
      17/       0 :                     		include "system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; ---------------------------------------------
(1)    8/       0 :                     ; Functions
(1)    9/       0 :                     ; ---------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; example of function
(1)   12/       0 :                     locate		function b,c,(c&0FFh)|(b<<8&0FF00h)		; Layer,X pos,Y pos for some video routines
(1)   13/       0 :                     
(1)   14/       0 :                     ; ====================================================================
(1)   15/       0 :                     ; ---------------------------------------------
(1)   16/       0 :                     ; Macros
(1)   17/       0 :                     ; ---------------------------------------------
(1)   18/       0 :                     
(1)   19/       0 :                     ; -------------------------------------
(1)   20/       0 :                     ; Reserve memory space
(1)   21/       0 :                     ; -------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   24/       0 :                     GLBL_LASTPC	eval $
(1)   25/       0 :                     GLBL_LASTORG	eval $
(1)   26/       0 :                     		dephase
(1)   27/       0 :                     		phase thisinput
(1)   28/       0 :                     		endm
(1)   29/       0 :                     		
(1)   30/       0 :                     ; -------------------------------------
(1)   31/       0 :                     ; Finish reserve
(1)   32/       0 :                     ; -------------------------------------
(1)   33/       0 :                     
(1)   34/       0 :                     finish		macro				; Then finish
(1)   35/       0 :                     		!org GLBL_LASTORG
(1)   36/       0 :                     		phase GLBL_LASTPC
(1)   37/       0 :                     		endm
(1)   38/       0 :                     
(1)   39/       0 :                     ; -------------------------------------
(1)   40/       0 :                     ; ZERO Fill padding
(1)   41/       0 :                     ; 
(1)   42/       0 :                     ; if AS align doesn't work
(1)   43/       0 :                     ; -------------------------------------
(1)   44/       0 :                     
(1)   45/       0 :                     rompad		macro address			; Zero fill
(1)   46/       0 :                     diff := address - *
(1)   47/       0 :                     		if diff < 0
(1)   48/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   49/       0 :                     		else
(1)   50/       0 :                     			while diff > 1024
(1)   51/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   52/       0 :                     				dc.b [1024]0
(1)   53/       0 :                     diff := diff - 1024
(1)   54/       0 :                     			endm
(1)   55/       0 :                     			dc.b [diff]0
(1)   56/       0 :                     		endif
(1)   57/       0 :                     	endm
(1)   58/       0 :                     
(1)   59/       0 :                     ; ====================================================================
(1)   60/       0 :                     
      18/       0 :                     		include "system/const.asm"	; Variables and constants
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =C000H              MSRAM_START	equ	0C000h		; MS RAM Start
(1)    7/       0 : =1000H              MAX_MSERAM	equ	1000h		; Maximum temporal RAM for screen modes
(1)    8/       0 : =10H                MAX_PRNTLIST	equ	16		; Max print values
(1)    9/       0 :                     
(1)   10/       0 : =1FFH               varNullVram	equ	1FFh
(1)   11/       0 :                     
(1)   12/       0 :                     ; ====================================================================
(1)   13/       0 :                     ; ----------------------------------------------------------------
(1)   14/       0 :                     ; Variables
(1)   15/       0 :                     ; ----------------------------------------------------------------
(1)   16/       0 :                     
(1)   17/       0 :                     ; --------------------------------------------------------
(1)   18/       0 :                     ; System
(1)   19/       0 :                     ; --------------------------------------------------------
(1)   20/       0 :                     
(1)   21/       0 :                     ; ------------------------------------------------
(1)   22/       0 :                     ; Controller buttons
(1)   23/       0 :                     ; ------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 : =7H                 bitJoyStart	equ 7
(1)   26/       0 : =4H                 bitJoy1		equ 4
(1)   27/       0 : =5H                 bitJoy2		equ 5
(1)   28/       0 : =3H                 bitJoyRight	equ 3
(1)   29/       0 : =2H                 bitJoyLeft	equ 2
(1)   30/       0 : =1H                 bitJoyDown	equ 1
(1)   31/       0 : =0H                 bitJoyUp	equ 0
(1)   32/       0 :                     
(1)   33/       0 : =1H                 JoyUp		equ 01h
(1)   34/       0 : =2H                 JoyDown 	equ 02h
(1)   35/       0 : =4H                 JoyLeft		equ 04h
(1)   36/       0 : =8H                 JoyRight	equ 08h
(1)   37/       0 : =10H                Joy1		equ 10h
(1)   38/       0 : =20H                Joy2		equ 20h
(1)   39/       0 :                     
(1)   40/       0 :                     ; --------------------------------------------------------
(1)   41/       0 :                     ; Sound
(1)   42/       0 :                     ; --------------------------------------------------------
(1)   43/       0 :                     
(1)   44/       0 :                     ; settings
(1)   45/       0 : =4H                 MAX_CHNLS	equ 4
(1)   46/       0 : =2H                 MAX_TRACKS	equ 2
(1)   47/       0 :                     
(1)   48/       0 :                     ; Track structure
(1)   49/       0 : =0H                 trck_ReqBlk	equ 00h		; word
(1)   50/       0 : =2H                 trck_ReqPatt	equ 02h		; word
(1)   51/       0 : =4H                 trck_ReqIns	equ 04h		; word
(1)   52/       0 : =6H                 trck_ReqTicks	equ 06h
(1)   53/       0 : =7H                 trck_ReqTempo	equ 07h
(1)   54/       0 : =8H                 trck_ReqCurrBlk	equ 08h
(1)   55/       0 : =9H                 trck_ReqSndBnk	equ 09h
(1)   56/       0 : =AH                 trck_ReqFlag	equ 0Ah
(1)   57/       0 : =BH                 trck_ReqChnls	equ 0Bh
(1)   58/       0 : =CH                 trck_PsgNoise	equ 0Ch
(1)   59/       0 : =DH                 trck_TicksRead	equ 0Dh
(1)   60/       0 : =EH                 trck_BlockCurr	equ 0Eh
(1)   61/       0 : =FH                 trck_MasterVol	equ 0Fh
(1)   62/       0 : =10H                trck_Priority	equ 10h
(1)   63/       0 : =11H                trck_Active	equ 11h
(1)   64/       0 : =12H                trck_Blocks	equ 12h		; word
(1)   65/       0 : =14H                trck_PattBase	equ 14h		; word
(1)   66/       0 : =16H                trck_Instr	equ 16h		; word
(1)   67/       0 : =18H                trck_PattRead	equ 18h		; word
(1)   68/       0 : =1AH                trck_RowSteps	equ 1Ah		; word
(1)   69/       0 : =1CH                trck_TicksMain 	equ 1Ch
(1)   70/       0 : =1DH                trck_TempoBits	equ 1Dh
(1)   71/       0 : =1EH                trck_RowWait	equ 1Eh
(1)   72/       0 : =1FH                trck_TicksCurr	equ 1Fh
(1)   73/       0 :                     
(1)   74/       0 :                     ; channel buffers
(1)   75/       0 : =0H                 chnl_Chip	equ 0
(1)   76/       0 : =1H                 chnl_Type	equ 1
(1)   77/       0 : =2H                 chnl_Note	equ 2
(1)   78/       0 : =3H                 chnl_Ins	equ 3
(1)   79/       0 : =4H                 chnl_Vol	equ 4
(1)   80/       0 : =5H                 chnl_EffId	equ 5
(1)   81/       0 : =6H                 chnl_EffArg	equ 6
(1)   82/       0 : =7H                 chnl_InsAddr	equ 7		; word
(1)   83/       0 : =9H                 chnl_Freq	equ 09h		; word
(1)   84/       0 : =BH                 chnl_InsType	equ 0Bh
(1)   85/       0 : =CH                 chnl_InsOpt	equ 0Ch
(1)   86/       0 : =DH                 chnl_FmPan	equ 0Dh
(1)   87/       0 : =EH                 chnl_FmRegB0	equ 0Eh
(1)   88/       0 : =FH                 chnl_FmRegB4	equ 0Fh
(1)   89/       0 : =10H                chnl_FmRegKeys	equ 10h
(1)   90/       0 : =11H                chnl_FmVolBase	equ 11h
(1)   91/       0 : =12H                chnl_PsgVolBase	equ 12h
(1)   92/       0 : =13H                chnl_PsgVolEnv	equ 13h
(1)   93/       0 : =14H                chnl_PsgIndx	equ 14h
(1)   94/       0 : =15H                chnl_SmplFlags	equ 15h
(1)   95/       0 : =16H                chnl_EfVolSlide	equ 16h
(1)   96/       0 : =17H                chnl_EfNewVol	equ 17h
(1)   97/       0 : =18H                chnl_EfPortam	equ 18h		; word
(1)   98/       0 : =1AH                chnl_EfNewFreq	equ 1Ah		; word
(1)   99/       0 : =1CH                chnl_PsgOutFreq	equ 1Ch		; word
(1)  100/       0 :                     
(1)  101/       0 :                     ; ====================================================================
(1)  102/       0 :                     ; ----------------------------------------------------------------
(1)  103/       0 :                     ; Alias
(1)  104/       0 :                     ; ----------------------------------------------------------------
(1)  105/       0 :                     
(1)  106/       0 : =C24BH              Controller_1	equ RAM_InputData
(1)  107/       0 : =C24DH              Controller_2	equ RAM_InputData+sizeof_input
(1)  108/       0 :                     
(1)  109/       0 : =C000H              VDP_PALETTE	equ 0C000h				; Palette
(1)  110/       0 :                     
(1)  111/       0 :                     ; ====================================================================
(1)  112/       0 :                     ; ----------------------------------------------------------------
(1)  113/       0 :                     ; Structures
(1)  114/       0 :                     ; ----------------------------------------------------------------
(1)  115/       0 :                     
(1)  116/       0 :                     ; Controller
(1)  117/       0 : (MACRO)             		struct 0
(1)  117/       0 : =0H                 GLBL_LASTPC     eval $
(1)  117/       0 : =0H                 GLBL_LASTORG    eval $
(1)  117/       0 :                                     dephase
(1)  117/       0 :                                     phase 0
(1)  118/       0 :                     on_hold		ds 1
(1)  119/       1 :                     on_press	ds 1
(1)  120/       2 :                     sizeof_input	ds 1
(1)  121/       3 : (MACRO)             		finish
(1)  121/       0 :                                     !org GLBL_LASTORG
(1)  121/       0 :                                     phase GLBL_LASTPC
(1)  122/       0 :                     
(1)  123/       0 :                     ; ====================================================================
(1)  124/       0 :                     ; ----------------------------------------------------------------
(1)  125/       0 :                     ; Master System RAM
(1)  126/       0 :                     ;
(1)  127/       0 :                     ; Note: 0DFFCh-0DFFFh (0FFFCh-0FFFFh)
(1)  128/       0 :                     ; is reserved for bankswitch
(1)  129/       0 :                     ; ----------------------------------------------------------------
(1)  130/       0 :                     
(1)  131/       0 :                     ; This looks bad but it works as intended
(1)  132/       0 :                     
(1)  133/       0 :                     	; First pass, empty sizes
(1)  134/       0 : (MACRO)             		struct MSRAM_START		; Set struct at start of our base RAM
(1)  134/       0 : =0H                 GLBL_LASTPC     eval $
(1)  134/       0 : =0H                 GLBL_LASTORG    eval $
(1)  134/       0 :                                     dephase
(1)  134/    C000 :                                     phase MSRAM_START
(1)  143/    C000 :                     	
(1)  144/    C000 :                     	; Second pass, sizes are set
(1)  145/    C000 :                     RAM_MsSound	ds sizeof_mssnd-RAM_MsSound
(1)  146/    C14A :                     RAM_MsVideo	ds sizeof_msvid-RAM_MsVideo
(1)  147/    C24B :                     RAM_MsSystem	ds sizeof_mssys-RAM_MsSystem
(1)  148/    C255 :                     RAM_Local	ds MAX_MSERAM
(1)  149/    D255 :                     RAM_Global	ds sizeof_global-RAM_Global
(1)  150/    D256 :                     sizeof_msram	ds 1
(1)  152/    D257 :                     	
(1)  153/    D257 :                     	; --------------------------------
(1)  154/    D257 :                     	; Report RAM usage
(1)  155/    D257 :                     	; on pass 7
(1)  159/    D257 : (MACRO)             		finish
(1)  159/    C000 :                                     !org GLBL_LASTORG
(1)  159/       0 :                                     phase GLBL_LASTPC
(1)  160/       0 :                     
(1)  161/       0 :                     ; ====================================================================
(1)  162/       0 :                     ; ----------------------------------------------------------------
(1)  163/       0 :                     ; System RAM
(1)  164/       0 :                     ; ----------------------------------------------------------------
(1)  165/       0 :                     
(1)  166/       0 : (MACRO)             		struct RAM_MsSystem
(1)  166/       0 : =0H                 GLBL_LASTPC     eval $
(1)  166/       0 : =0H                 GLBL_LASTORG    eval $
(1)  166/       0 :                                     dephase
(1)  166/    C24B :                                     phase RAM_MSSYSTEM
(1)  167/    C24B :                     RAM_InputData	ds sizeof_input*2		; 2 controller buffers
(1)  168/    C24F :                     RAM_VBlank	ds 3
(1)  169/    C252 :                     RAM_HBlank	ds 3
(1)  170/    C255 :                     sizeof_mssys	ds 1
(1)  171/    C256 : (MACRO)             		finish
(1)  171/    C24B :                                     !org GLBL_LASTORG
(1)  171/       0 :                                     phase GLBL_LASTPC
(1)  172/       0 :                     
(1)  173/       0 :                     ; ====================================================================
(1)  174/       0 :                     ; ----------------------------------------------------------------
(1)  175/       0 :                     ; Video cache RAM
(1)  176/       0 :                     ; ----------------------------------------------------------------
(1)  177/       0 :                     
(1)  178/       0 : (MACRO)             		struct RAM_MsVideo
(1)  178/       0 : =0H                 GLBL_LASTPC     eval $
(1)  178/       0 : =0H                 GLBL_LASTORG    eval $
(1)  178/       0 :                                     dephase
(1)  178/    C14A :                                     phase RAM_MSVIDEO
(1)  179/    C14A :                     RAM_VidPrntList	ds MAX_PRNTLIST*3		; VDP address (WORD), type (BYTE)
(1)  180/    C17A :                     RAM_VidPrntVram	ds 2				; Current VRAM address for the Print routines
(1)  181/    C17C :                     RAM_VdpCache	ds 11
(1)  182/    C187 :                     RAM_SprtY	ds 64				; Y list
(1)  183/    C1C7 :                     RAM_SprtX	ds 64*2				; X list + char
(1)  184/    C247 :                     RAM_CurrSprY	ds 2
(1)  185/    C249 :                     RAM_CurrSprX	ds 2
(1)  186/    C24B :                     sizeof_msvid	ds 1
(1)  187/    C24C : (MACRO)             		finish
(1)  187/    C14A :                                     !org GLBL_LASTORG
(1)  187/       0 :                                     phase GLBL_LASTPC
(1)  188/       0 :                     		
(1)  189/       0 :                     ; ====================================================================
(1)  190/       0 :                     ; ----------------------------------------------------------------
(1)  191/       0 :                     ; Sound buffer RAM
(1)  192/       0 :                     ; ----------------------------------------------------------------
(1)  193/       0 :                     
(1)  194/       0 : (MACRO)             			struct RAM_MsSound
(1)  194/       0 : =0H                 GLBL_LASTPC     eval $
(1)  194/       0 : =0H                 GLBL_LASTORG    eval $
(1)  194/       0 :                                     dephase
(1)  194/    C000 :                                     phase RAM_MSSOUND
(1)  195/    C000 :                     SndBuff_UsedChnls	ds MAX_CHNLS
(1)  196/    C004 :                     SndBuff_UsedChnls_2	ds MAX_CHNLS
(1)  197/    C008 :                     SndBuff_Track_1		ds 20h
(1)  198/    C028 :                     SndBuff_Track_2		ds 20h
(1)  199/    C048 :                     SndBuff_ChnlBuff_1	ds 20h*MAX_CHNLS
(1)  200/    C0C8 :                     SndBuff_ChnlBuff_2	ds 20h*MAX_CHNLS
(1)  201/    C148 :                     curr_NoiseMode		ds 1
(1)  202/    C149 :                     curr_SndBank		ds 1
(1)  203/    C14A :                     sizeof_mssnd		ds 1
(1)  204/    C14B : (MACRO)             			finish
(1)  204/    C000 :                                     !org GLBL_LASTORG
(1)  204/       0 :                                     phase GLBL_LASTPC
(1)  205/       0 :                     
      19/       0 :                     		include "system/map.asm"	; Memory map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Memory map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; Banks are 4000h bytes long
(1)    7/       0 : =FFFCH              bank_ctrl	equ	0FFFCh
(1)    8/       0 : =FFFDH              bank_0		equ	0FFFDh		; First 1Kbytes (0000h-0400h) are locked to protect interrupts
(1)    9/       0 : =FFFEH              bank_1		equ	0FFFEh		;
(1)   10/       0 : =FFFFH              bank_2		equ	0FFFFh		; If bit 3 is set, Cartridge RAM will be mapped here instead.
(1)   11/       0 :                     
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     ; Ports
(1)   14/       0 :                     ; 
(1)   15/       0 :                     ; Remainder: only use these with IN and OUT
(1)   16/       0 :                     ; R - Read
(1)   17/       0 :                     ; W - Write
(1)   18/       0 :                     ; ----------------------------------------------------------------
(1)   19/       0 :                     
(1)   20/       0 : =3EH                memory_ctrl	equ	03Eh		; 
(1)   21/       0 : =3FH                joypad_ctrl	equ	03Fh		; R  | 
(1)   22/       0 : =7EH                v_counter	equ	07Eh
(1)   23/       0 : =7FH                psg_ctrl	equ	07Fh		; RW | if WRITE: psg register | if READ: h_counter
(1)   24/       0 : =BEH                vdp_data	equ	0BEh
(1)   25/       0 : =BFH                vdp_ctrl	equ	0BFh
(1)   26/       0 : =DCH                joypad_1	equ	0DCh
(1)   27/       0 : =DDH                joypad_2	equ	0DDh
(1)   28/       0 :                     
(1)   29/       0 :                     ; ------------------------------------------------
(1)   30/       0 :                     ; GAME GEAR ONLY
(1)   31/       0 :                     ; on Master System they probably just return -1
(1)   32/       0 :                     ; ------------------------------------------------
(1)   33/       0 :                     
(1)   34/       0 : =0H                 gg_info		equ	00h		; R  | SRN00000b (S-GG Start button | R-Region | N-NTSC/PAL)
(1)   35/       0 : =1H                 gg_ext_comm	equ	01h		; RW | EXT data if 7-bit mode is set
(1)   36/       0 : =2H                 gg_ext_bitdir	equ	02h		; RW | EXT data directions
(1)   37/       0 : =3H                 gg_serial_out	equ	03h		; RW | Serial data SEND port
(1)   38/       0 : =4H                 gg_serial_in	equ	04h		; R  | Serial data RECIEVE port
(1)   39/       0 : =5H                 gg_serial	equ	05h		; RW | Serial settings
(1)   40/       0 : =6H                 gg_stereo	equ	06h		;  W | PSG Stereo bits, set 0FFh if using Game Gear
(1)   41/       0 :                     
      20/       0 :                     		include "game/global.asm"	; Global variables and RAM
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Put your global structs/values here
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; --------------------------------------------------------
(1)    8/       0 :                     ; Structures
(1)    9/       0 :                     ; --------------------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; ====================================================================
(1)   12/       0 :                     ; --------------------------------------------------------
(1)   13/       0 :                     ; RAM
(1)   14/       0 :                     ; --------------------------------------------------------
(1)   15/       0 :                     
(1)   16/       0 : (MACRO)             		struct RAM_Global
(1)   16/       0 : =0H                 GLBL_LASTPC     eval $
(1)   16/       0 : =0H                 GLBL_LASTORG    eval $
(1)   16/       0 :                                     dephase
(1)   16/    D255 :                                     phase RAM_GLOBAL
(1)   17/    D255 :                     RAM_Glbl_Null	ds 1
(1)   18/    D256 :                     sizeof_global	ds 1
(1)   19/    D257 : (MACRO)             		finish
(1)   19/    D255 :                                     !org GLBL_LASTORG
(1)   19/       0 :                                     phase GLBL_LASTPC
(1)   20/       0 :                     		
(1)   21/       0 :                     
      21/       0 :                     
      22/       0 :                     ; ====================================================================
      23/       0 :                     ; DEFAULT BANK 0
      24/       0 :                     ; 0000-3FFFh
      25/       0 :                     ; 
      26/       0 :                     ; (0000-0400h is unaffected)
      27/       0 :                     ; ====================================================================
      28/       0 :                     
      29/       0 : F3                  		di				; Disable interrupts
      30/       1 : ED 56               		im	1			; Interrput mode 1 (standard)
      31/       3 : C3 00 18            		jp	MS_Init			; Go to MS_Init
      32/       6 :                     
      33/       6 :                     ; ====================================================================
      34/       6 :                     ; ----------------------------------------------------------------
      35/       6 :                     ; RST routines will go here (starting at 0008h)
      36/       6 :                     ; 
      37/       6 :                     ; aligned by 8
      38/       6 :                     ; ----------------------------------------------------------------
      39/       6 :                     
      40/       6 :                     		align 8
      41/       8 :                     
      42/       8 :                     ; ====================================================================
      43/       8 :                     ; ----------------------------------------------------------------
      44/       8 :                     ; VBlank and HBlank
      45/       8 :                     ; 
      46/       8 :                     ; located at 38h
      47/       8 :                     ; ----------------------------------------------------------------
      48/       8 :                     
      49/       8 :                     		align 38h
      50/      38 : F3                  		di
      51/      39 : F5                  		push	af
      52/      3A : DB BF               		in	a,(vdp_ctrl)
      53/      3C : 07                  		rlca
      54/      3D : DA 48 00            		jp	c,.vint
      55/      40 : F6 80               		or	80h
      56/      42 : C2 48 00            		jp	nz,.vint
      57/      45 : C3 52 C2            		jp	(RAM_HBlank)
      58/      48 :                     .vint:
      59/      48 : C3 4F C2            		jp	(RAM_VBlank)
      60/      4B :                     Int_Exit:
      61/      4B : F1                  		pop	af
      62/      4C : FB                  		ei
      63/      4D : C9                  		ret
      64/      4E :                     
      65/      4E :                     ; ====================================================================
      66/      4E :                     ; ----------------------------------------------------------------
      67/      4E :                     ; Master System PAUSE Button interrupt
      68/      4E :                     ; 
      69/      4E :                     ; at address 0066h
      70/      4E :                     ; ----------------------------------------------------------------
      71/      4E :                     
      72/      4E :                     		align 66h
      73/      66 : C9                  		ret
      74/      67 :                     
      75/      67 :                     ; ====================================================================
      76/      67 :                     ; ----------------------------------------------------------------
      77/      67 :                     ; Default VBlank
      78/      67 :                     ; ----------------------------------------------------------------
      79/      67 :                     
      80/      67 :                     MS_VInt:
      81/      67 : DD E5               		push	ix
      82/      69 : FD E5               		push	iy
      83/      6B : C5                  		push	bc
      84/      6C : D5                  		push	de
      85/      6D : E5                  		push	hl
      86/      6E : D9                  		exx
      87/      6F : C5                  		push	bc
      88/      70 : D5                  		push	de
      89/      71 : E5                  		push	hl
      90/      72 :                     		
      91/      72 : CD 2A 17            		call	System_Input
      92/      75 : CD BC 00            		call	Sound_Run
      93/      78 :                     
      94/      78 : E1                  		pop	hl
      95/      79 : D1                  		pop	de
      96/      7A : C1                  		pop	bc
      97/      7B : D9                  		exx
      98/      7C : E1                  		pop	hl
      99/      7D : D1                  		pop	de
     100/      7E : C1                  		pop	bc
     101/      7F : FD E1               		pop	iy
     102/      81 : DD E1               		pop	ix
     103/      83 : C3 4B 00            		jp	Int_Exit
     104/      86 :                     		
     105/      86 :                     ; ====================================================================
     106/      86 :                     ; ----------------------------------------------------------------
     107/      86 :                     ; Default HBlank
     108/      86 :                     ; ----------------------------------------------------------------
     109/      86 :                     
     110/      86 :                     MS_HInt:
     111/      86 : C3 4B 00            		jp	Int_Exit
     112/      89 :                     
     113/      89 :                     ; ====================================================================
     114/      89 :                     ; ----------------------------------------------------------------
     115/      89 :                     ; System functions
     116/      89 :                     ; ----------------------------------------------------------------
     117/      89 :                     
     118/      89 :                     		include "system/sound.asm"	; Sound
(1)    1/      89 :                     ; ====================================================================
(1)    2/      89 :                     ; ----------------------------------------------------------------
(1)    3/      89 :                     ; Sound
(1)    4/      89 :                     ; ----------------------------------------------------------------
(1)    5/      89 :                     
(1)    6/      89 :                     ; ============================================================
(1)    7/      89 :                     ; --------------------------------------------------------
(1)    8/      89 :                     ; Init Sound
(1)    9/      89 :                     ; --------------------------------------------------------
(1)   10/      89 :                     
(1)   11/      89 :                     Sound_Init:
(1)   12/      89 : 3E 9F               		ld	a,09Fh
(1)   13/      8B : D3 7F               		out	(psg_ctrl),a			; Set PSG1 Volume to OFF
(1)   14/      8D : 3E BF               		ld	a,0BFh
(1)   15/      8F : D3 7F               		out	(psg_ctrl),a			; Set PSG2 Volume to OFF
(1)   16/      91 : 3E DF               		ld	a,0DFh
(1)   17/      93 : D3 7F               		out	(psg_ctrl),a			; Set PSG3 Volume to OFF
(1)   18/      95 : 3E FF               		ld	a,0FFh
(1)   19/      97 : D3 7F               		out	(psg_ctrl),a			; Set NOISE Volume to OFF
(1)   20/      99 :                     		; YM silence goes here
(1)   21/      99 :                     	
(1)   22/      99 :                     	; Set priority to the BGM track buffer
(1)   23/      99 : 21 38 C0            		ld	hl,SndBuff_Track_2+trck_Priority
(1)   24/      9C : 36 01               		ld	(hl),1
(1)   25/      9E :                     		
(1)   26/      9E :                     	; Init the first 4 channels as PSG
(1)   27/      9E : DD 21 48 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   28/      A2 : FD 21 C8 C0         		ld	iy,SndBuff_ChnlBuff_2
(1)   29/      A6 : 06 04               		ld	b,4
(1)   30/      A8 : 11 20 00            		ld	de,20h
(1)   31/      AB : 3E 80               		ld	a,80h
(1)   32/      AD :                     .nxtchnl:
(1)   33/      AD : DD 77 00            		ld	(ix+chnl_Chip),a
(1)   34/      B0 : FD 77 00            		ld	(iy+chnl_Chip),a
(1)   35/      B3 : C6 20               		add 	a,20h
(1)   36/      B5 : DD 19               		add 	ix,de
(1)   37/      B7 : FD 19               		add 	iy,de
(1)   38/      B9 : 10 F2               		djnz	.nxtchnl
(1)   39/      BB :                     	; FM regs go here
(1)   40/      BB : C9                  		ret
(1)   41/      BC :                     
(1)   42/      BC :                     ; ============================================================
(1)   43/      BC :                     ; --------------------------------------------------------
(1)   44/      BC :                     ; Init Sound
(1)   45/      BC :                     ; --------------------------------------------------------
(1)   46/      BC :                     
(1)   47/      BC :                     Sound_Run:
(1)   48/      BC :                     ; 		ld	a,(curr_SndBank)		; TODO: set bankswitch
(1)   49/      BC :                     ; 		rst 	8
(1)   50/      BC : FD 21 08 C0         		ld	iy,SndBuff_Track_1
(1)   51/      C0 : DD 21 48 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   52/      C4 : CD 1A 01            		call	SndDrv_ReadTrack
(1)   53/      C7 : FD 21 28 C0         		ld	iy,SndBuff_Track_2
(1)   54/      CB : DD 21 C8 C0         		ld	ix,SndBuff_ChnlBuff_2
(1)   55/      CF : C3 1A 01            		jp	SndDrv_ReadTrack
(1)   56/      D2 :                     ; 		ld	a,(curr_SndBank)		; TODO: return bankswitch
(1)   57/      D2 :                     ; 		rst 	8
(1)   58/      D2 : C9                  		ret
(1)   59/      D3 :                     
(1)   60/      D3 :                     ; ===================================================================
(1)   61/      D3 :                     ; ----------------------------------------------------
(1)   62/      D3 :                     ; Subs
(1)   63/      D3 :                     ; ----------------------------------------------------
(1)   64/      D3 :                     
(1)   65/      D3 :                     ; --------------------------------------------------------
(1)   66/      D3 :                     ; Sound_SetTrack
(1)   67/      D3 :                     ; 
(1)   68/      D3 :                     ; Input:
(1)   69/      D3 :                     ; hl | Track data array:
(1)   70/      D3 :                     ; 		dw blocks
(1)   71/      D3 :                     ;		dw pattern
(1)   72/      D3 :                     ;		dw instruments
(1)   73/      D3 :                     ;		
(1)   74/      D3 :                     ;  a | Track slot
(1)   75/      D3 :                     ;  b | Music bank
(1)   76/      D3 :                     ;  c | Block start
(1)   77/      D3 :                     ;  d | Tempo bits
(1)   78/      D3 :                     ;  e | Ticks
(1)   79/      D3 :                     ; --------------------------------------------------------
(1)   80/      D3 :                     
(1)   81/      D3 :                     Sound_SetTrack:
(1)   82/      D3 : FD 21 08 C0         		ld	iy,SndBuff_Track_1
(1)   83/      D7 : B7                  		or	a
(1)   84/      D8 : CA DF 00            		jp	z,.sfx_prio
(1)   85/      DB : FD 21 28 C0         		ld	iy,SndBuff_Track_2
(1)   86/      DF :                     .sfx_prio:
(1)   87/      DF : FD 70 09            		ld	(iy+trck_ReqSndBnk),b
(1)   88/      E2 : FD 71 08            		ld	(iy+trck_ReqCurrBlk),c
(1)   89/      E5 : FD 72 07            		ld	(iy+trck_ReqTempo),d
(1)   90/      E8 : FD 73 06            		ld	(iy+trck_ReqTicks),e
(1)   91/      EB :                     
(1)   92/      EB : 7E                  		ld	a,(hl)
(1)   93/      EC : FD 77 00            		ld	(iy+trck_ReqBlk),a
(1)   94/      EF : 23                  		inc 	hl
(1)   95/      F0 : 7E                  		ld	a,(hl)
(1)   96/      F1 : FD 77 01            		ld	(iy+(trck_ReqBlk+1)),a
(1)   97/      F4 : 23                  		inc 	hl
(1)   98/      F5 :                     
(1)   99/      F5 : 7E                  		ld	a,(hl)
(1)  100/      F6 : FD 77 02            		ld	(iy+trck_ReqPatt),a
(1)  101/      F9 : 23                  		inc 	hl
(1)  102/      FA : 7E                  		ld	a,(hl)
(1)  103/      FB : FD 77 03            		ld	(iy+(trck_ReqPatt+1)),a
(1)  104/      FE : 23                  		inc 	hl
(1)  105/      FF :                     		
(1)  106/      FF : 7E                  		ld	a,(hl)
(1)  107/     100 : FD 77 04            		ld	(iy+trck_ReqIns),a
(1)  108/     103 : 23                  		inc 	hl
(1)  109/     104 : 7E                  		ld	a,(hl)
(1)  110/     105 : FD 77 05            		ld	(iy+(trck_ReqIns+1)),a
(1)  111/     108 :                     
(1)  112/     108 : FD 36 0A 01         		ld	(iy+trck_ReqFlag),1		; Request $01, set and play song
(1)  113/     10C : C9                  		ret
(1)  114/     10D :                     		
(1)  115/     10D :                     ; --------------------------------------------------------
(1)  116/     10D :                     ; Sound_Stop
(1)  117/     10D :                     ; 
(1)  118/     10D :                     ; Input:
(1)  119/     10D :                     ;  a | Track slot
(1)  120/     10D :                     ; --------------------------------------------------------
(1)  121/     10D :                     
(1)  122/     10D :                     Sound_StopTrack:
(1)  123/     10D : 21 12 C0            		ld	hl,SndBuff_Track_1+trck_ReqFlag
(1)  124/     110 : B7                  		or	a
(1)  125/     111 : CA 17 01            		jp	z,.sfx_prio
(1)  126/     114 : 21 32 C0            		ld	hl,SndBuff_Track_2+trck_ReqFlag
(1)  127/     117 :                     .sfx_prio:
(1)  128/     117 : 36 02               		ld	(hl),2		; Request $02
(1)  129/     119 : C9                  		ret
(1)  130/     11A :                     
(1)  131/     11A :                     ; ===================================================================
(1)  132/     11A :                     ; ------------------------------------
(1)  133/     11A :                     ; Read track
(1)  134/     11A :                     ; 
(1)  135/     11A :                     ; iy - Pattern buffer
(1)  136/     11A :                     ; ix - Channel list
(1)  137/     11A :                     ; ------------------------------------
(1)  138/     11A :                     
(1)  139/     11A :                     SndDrv_ReadTrack:
(1)  140/     11A : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1)  141/     11D : B7                  		or	a
(1)  142/     11E : C4 93 06            		call	nz,SndDrv_ReqTrack
(1)  143/     121 : FD 7E 11            		ld	a,(iy+trck_Active)
(1)  144/     124 : B7                  		or	a
(1)  145/     125 : C8                  		ret	z
(1)  146/     126 :                     
(1)  147/     126 : FD 7E 1D            		ld	a,(iy+trck_TempoBits)
(1)  148/     129 : 0F                  		rrca
(1)  149/     12A : FD 77 1D            		ld	(iy+trck_TempoBits),a
(1)  150/     12D : DA 3E 01            		jp	c,.force_on
(1)  151/     130 : FD 7E 0D            		ld	a,(iy+trck_TicksRead)
(1)  152/     133 : 3D                  		dec	a
(1)  153/     134 : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  154/     137 : F0                  		ret	p
(1)  155/     138 : FD 7E 1F            		ld	a,(iy+trck_TicksCurr)		; save Ticks
(1)  156/     13B : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  157/     13E :                     .force_on:
(1)  158/     13E : FD 7E 1E            		ld	a,(iy+trck_RowWait)		; row countdown
(1)  159/     141 : 3D                  		dec	a
(1)  160/     142 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  161/     145 : F2 19 02            		jp	p,.row_countdwn
(1)  162/     148 : FD 36 1E 00         		ld	(iy+trck_RowWait),0
(1)  163/     14C :                     		
(1)  164/     14C :                     ; ------------------------------
(1)  165/     14C :                     ; check for new track data
(1)  166/     14C :                     ; ------------------------------
(1)  167/     14C :                     
(1)  168/     14C : FD 5E 1A            		ld	e,(iy+trck_RowSteps)		; Row finished?
(1)  169/     14F : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  170/     152 : 7B                  		ld	a,e
(1)  171/     153 : B2                  		or	d
(1)  172/     154 : C2 9C 01            		jp	nz,.dontupd_trck
(1)  173/     157 :                     .trck_restart:
(1)  174/     157 : 11 00 00            		ld	de,0
(1)  175/     15A : FD 5E 0E            		ld	e,(iy+trck_BlockCurr)
(1)  176/     15D : FD 6E 12            		ld	l,(iy+trck_Blocks)
(1)  177/     160 : FD 66 13            		ld	h,(iy+(trck_Blocks+1))
(1)  178/     163 : 4D                  		ld	c,l				; bc - copy of hl
(1)  179/     164 : 44                  		ld	b,h
(1)  180/     165 : 19                  		add 	hl,de
(1)  181/     166 : 7E                  		ld	a,(hl)
(1)  182/     167 : FE FE               		cp	0FEh
(1)  183/     169 : CC 03 02            		call	z,.skip_block
(1)  184/     16C : FE FF               		cp	0FFh				; End of song marker? 0FFh
(1)  185/     16E : CA 07 02            		jp	z,.stop_track
(1)  186/     171 : 87                  		add 	a,a
(1)  187/     172 : 87                  		add 	a,a
(1)  188/     173 : 23                  		inc 	hl
(1)  189/     174 : FD 34 0E            		inc 	(iy+trck_BlockCurr)
(1)  190/     177 : 11 00 00            		ld	de,0
(1)  191/     17A : 5F                  		ld	e,a
(1)  192/     17B : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  193/     17E : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  194/     181 : 19                  		add 	hl,de
(1)  195/     182 : 4E                  		ld	c,(hl)
(1)  196/     183 : 23                  		inc 	hl
(1)  197/     184 : 46                  		ld	b,(hl)
(1)  198/     185 : 23                  		inc 	hl
(1)  199/     186 : 5E                  		ld	e,(hl)
(1)  200/     187 : 23                  		inc 	hl
(1)  201/     188 : 56                  		ld	d,(hl)
(1)  202/     189 : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  203/     18C : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  204/     18F : 09                  		add 	hl,bc
(1)  205/     190 : FD 75 18            		ld	(iy+trck_PattRead),l
(1)  206/     193 : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  207/     196 : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  208/     199 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  209/     19C :                     .dontupd_trck:
(1)  210/     19C : FD 6E 18            		ld	l,(iy+trck_PattRead)		; Set last read point
(1)  211/     19F : FD 66 19            		ld	h,(iy+(trck_PattRead+1))
(1)  212/     1A2 :                     
(1)  213/     1A2 :                     ; ------------------------------
(1)  214/     1A2 :                     ; Check timer or note data
(1)  215/     1A2 :                     ; ------------------------------
(1)  216/     1A2 : 7E                  		ld	a,(hl)
(1)  217/     1A3 : B7                  		or	a
(1)  218/     1A4 : F2 0F 02            		jp	p,.set_timer
(1)  219/     1A7 :                     .loop_me:
(1)  220/     1A7 : 23                  		inc	hl
(1)  221/     1A8 : 4F                  		ld	c,a
(1)  222/     1A9 : E6 3F               		and	00111111b
(1)  223/     1AB : 11 00 00            		ld	de,0			; size 20h
(1)  224/     1AE : 5F                  		ld	e,a
(1)  225/     1AF : E6 18               		and	00011000b
(1)  226/     1B1 : 0F                  		rrca
(1)  227/     1B2 : 0F                  		rrca
(1)  228/     1B3 : 0F                  		rrca
(1)  229/     1B4 : 57                  		ld	d,a
(1)  230/     1B5 : 7B                  		ld	a,e
(1)  231/     1B6 : E6 07               		and	00000111b
(1)  232/     1B8 : 0F                  		rrca
(1)  233/     1B9 : 0F                  		rrca
(1)  234/     1BA : 0F                  		rrca
(1)  235/     1BB : 5F                  		ld	e,a
(1)  236/     1BC : DD E5               		push	ix			; Save channel buffer
(1)  237/     1BE : DD 19               		add	ix,de
(1)  238/     1C0 : CB 71               		bit 	6,c
(1)  239/     1C2 : CA CA 01            		jp	z,.keep_ctrl
(1)  240/     1C5 : 7E                  		ld	a,(hl)
(1)  241/     1C6 : 23                  		inc	hl
(1)  242/     1C7 : DD 77 01            		ld	(ix+chnl_Type),a
(1)  243/     1CA :                     .keep_ctrl:
(1)  244/     1CA : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  245/     1CD : 0F                  		rrca
(1)  246/     1CE : D2 D6 01            		jp	nc,.no_note
(1)  247/     1D1 : 4E                  		ld	c,(hl)			; Note
(1)  248/     1D2 : 23                  		inc 	hl
(1)  249/     1D3 : DD 71 02            		ld	(ix+chnl_Note),c
(1)  250/     1D6 :                     .no_note:
(1)  251/     1D6 : 0F                  		rrca				; Instrument
(1)  252/     1D7 : D2 DF 01            		jp	nc,.no_inst
(1)  253/     1DA : 4E                  		ld	c,(hl)
(1)  254/     1DB : 23                  		inc 	hl
(1)  255/     1DC : DD 71 03            		ld	(ix+chnl_Ins),c
(1)  256/     1DF :                     .no_inst:
(1)  257/     1DF : 0F                  		rrca				; Volume
(1)  258/     1E0 : D2 E8 01            		jp	nc,.no_vol
(1)  259/     1E3 : 4E                  		ld	c,(hl)
(1)  260/     1E4 : 23                  		inc 	hl
(1)  261/     1E5 : DD 71 04            		ld	(ix+chnl_Vol),c
(1)  262/     1E8 :                     .no_vol:
(1)  263/     1E8 : 0F                  		rrca				; Effect
(1)  264/     1E9 : D2 F6 01            		jp	nc,.no_eff
(1)  265/     1EC : 4E                  		ld	c,(hl)
(1)  266/     1ED : 23                  		inc 	hl
(1)  267/     1EE : DD 71 05            		ld	(ix+chnl_EffId),c
(1)  268/     1F1 : 4E                  		ld	c,(hl)
(1)  269/     1F2 : 23                  		inc 	hl
(1)  270/     1F3 : DD 71 06            		ld	(ix+chnl_EffArg),c
(1)  271/     1F6 :                     .no_eff:
(1)  272/     1F6 : CD C8 02            		call	.chip_setup
(1)  273/     1F9 : DD E1               		pop	ix			; Restore channel buffer
(1)  274/     1FB : 7E                  		ld	a,(hl)
(1)  275/     1FC : B7                  		or	a
(1)  276/     1FD : CA 12 02            		jp	z,.exit_notes
(1)  277/     200 : C3 A7 01            		jp	.loop_me
(1)  278/     203 :                     		
(1)  279/     203 :                     ; ------------------------------
(1)  280/     203 :                     ; block 0FEh
(1)  281/     203 :                     ; skip block
(1)  282/     203 :                     ; ------------------------------
(1)  283/     203 :                     
(1)  284/     203 :                     ; TODO ver que es esto
(1)  285/     203 :                     ; en OpenMPT
(1)  286/     203 :                     .skip_block:
(1)  287/     203 : FD 34 0E            		inc	(iy+trck_BlockCurr)
(1)  288/     206 : C9                  		ret
(1)  289/     207 :                     		
(1)  290/     207 :                     ; ------------------------------
(1)  291/     207 :                     ; block 0FFh
(1)  292/     207 :                     ; end of tracks
(1)  293/     207 :                     ; ------------------------------
(1)  294/     207 :                     
(1)  295/     207 :                     .stop_track:
(1)  296/     207 : CD 11 07            		call	SndDrv_ResetChan
(1)  297/     20A : FD 36 11 00         		ld	(iy+trck_Active),0
(1)  298/     20E : C9                  		ret
(1)  299/     20F :                     
(1)  300/     20F :                     ; ------------------------------
(1)  301/     20F :                     ; Set ROW wait timer
(1)  302/     20F :                     ; 
(1)  303/     20F :                     ; if a = 00h-7Fh
(1)  304/     20F :                     ; ------------------------------
(1)  305/     20F :                     
(1)  306/     20F :                     .set_timer:
(1)  307/     20F : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  308/     212 :                     
(1)  309/     212 :                     ; ------------------------------
(1)  310/     212 :                     ; Note pack exit
(1)  311/     212 :                     ; ------------------------------
(1)  312/     212 :                     
(1)  313/     212 :                     .exit_notes:
(1)  314/     212 : 23                  		inc 	hl
(1)  315/     213 :                     .exit_busy:
(1)  316/     213 : FD 75 18            		ld	(iy+trck_PattRead),l		; Save new read point
(1)  317/     216 : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  318/     219 :                     
(1)  319/     219 :                     ; ------------------------------
(1)  320/     219 :                     ; Decrement rows
(1)  321/     219 :                     ; ------------------------------
(1)  322/     219 :                     
(1)  323/     219 :                     .row_countdwn:
(1)  324/     219 : FD 5E 1A            		ld	e,(iy+trck_RowSteps)
(1)  325/     21C : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  326/     21F : 1B                  		dec 	de
(1)  327/     220 : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  328/     223 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  329/     226 :                     		
(1)  330/     226 :                     ; --------------------------------
(1)  331/     226 :                     ; Update PSG manually
(1)  332/     226 :                     ; --------------------------------
(1)  333/     226 :                     
(1)  334/     226 : CD 4D 02            		call	.psg_envlope
(1)  335/     229 : 11 20 00            		ld	de,20h
(1)  336/     22C : DD 19               		add 	ix,de
(1)  337/     22E : CD 4D 02            		call	.psg_envlope
(1)  338/     231 : 11 40 00            		ld	de,40h			; go to NOISE first
(1)  339/     234 : DD 19               		add 	ix,de
(1)  340/     236 : CD 4D 02            		call	.psg_envlope
(1)  341/     239 : 11 E0 FF            		ld	de,-20h			; back to PSG3
(1)  342/     23C : DD 19               		add 	ix,de
(1)  343/     23E : 3A 48 C1            		ld	a,(curr_NoiseMode)
(1)  344/     241 : E6 03               		and	00000011b
(1)  345/     243 : FE 03               		cp	3
(1)  346/     245 : C2 4D 02            		jp	nz,.psg_envlope
(1)  347/     248 : 3E DF               		ld	a,0DFh
(1)  348/     24A : D3 7F               		out	(psg_ctrl),a
(1)  349/     24C : C9                  		ret
(1)  350/     24D :                     
(1)  351/     24D :                     ; --------------------------------
(1)  352/     24D :                     
(1)  353/     24D :                     .psg_envlope:
(1)  354/     24D : CD 92 03            		call	.search_slot
(1)  355/     250 : D8                  		ret	c
(1)  356/     251 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  357/     254 : B7                  		or	a
(1)  358/     255 : C8                  		ret	z
(1)  359/     256 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  360/     259 : 57                  		ld	d,a
(1)  361/     25A : FE E0               		cp	0E0h
(1)  362/     25C : C2 6F 02            		jp	nz,.not_noise
(1)  363/     25F : 3A 48 C1            		ld	a,(curr_NoiseMode)
(1)  364/     262 : FD 4E 0C            		ld	c,(iy+trck_PsgNoise)
(1)  365/     265 : B9                  		cp	c
(1)  366/     266 : CA 6F 02            		jp	z,.not_noise
(1)  367/     269 : 79                  		ld	a,c
(1)  368/     26A : 32 48 C1            		ld	(curr_NoiseMode),a
(1)  369/     26D : D3 7F               		out	(psg_ctrl),a
(1)  370/     26F :                     .not_noise:
(1)  371/     26F : 7A                  		ld	a,d
(1)  372/     270 : F6 1F               		or	1Fh
(1)  373/     272 : 5F                  		ld	e,a
(1)  374/     273 : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  375/     276 : FE FF               		cp	-1
(1)  376/     278 : CA C4 02            		jp	z,.set_vol
(1)  377/     27B : FE FE               		cp	-2
(1)  378/     27D : CA C4 02            		jp	z,.set_vol
(1)  379/     280 : FE F6               		cp	-10
(1)  380/     282 : CA C4 02            		jp	z,.set_vol
(1)  381/     285 :                     
(1)  382/     285 : DD 7E 1C            		ld	a,(ix+chnl_PsgOutFreq)
(1)  383/     288 : B7                  		or	a
(1)  384/     289 : CA 97 02            		jp	z,.no_upd_freq
(1)  385/     28C : D3 7F               		out	(psg_ctrl),a
(1)  386/     28E : AF                  		xor	a
(1)  387/     28F : DD 77 1C            		ld	(ix+chnl_PsgOutFreq),a
(1)  388/     292 : DD 7E 1D            		ld	a,(ix+(chnl_PsgOutFreq+1))
(1)  389/     295 : D3 7F               		out	(psg_ctrl),a
(1)  390/     297 :                     .no_upd_freq:
(1)  391/     297 :                     
(1)  392/     297 : DD 66 08            		ld	h,(ix+(chnl_InsAddr+1))
(1)  393/     29A : DD 6E 07            		ld	l,(ix+chnl_InsAddr)
(1)  394/     29D : DD 5E 12            		ld	e,(ix+chnl_PsgVolBase)		; Set volume
(1)  395/     2A0 : 01 00 00            		ld	bc,0
(1)  396/     2A3 : DD 4E 14            		ld	c,(ix+chnl_PsgIndx)
(1)  397/     2A6 : 09                  		add 	hl,bc
(1)  398/     2A7 : 7E                  		ld	a,(hl)
(1)  399/     2A8 : FE FF               		cp	-1
(1)  400/     2AA : CA B3 02            		jp	z,.last_env
(1)  401/     2AD : DD 77 13            		ld	(ix+chnl_PsgVolEnv),a
(1)  402/     2B0 : DD 34 14            		inc 	(ix+chnl_PsgIndx)
(1)  403/     2B3 :                     .last_env:
(1)  404/     2B3 : DD 7E 13            		ld	a,(ix+chnl_PsgVolEnv)
(1)  405/     2B6 : 83                  		add 	a,e
(1)  406/     2B7 : 5F                  		ld	e,a
(1)  407/     2B8 : E6 F0               		and	11110000b
(1)  408/     2BA : CA BF 02            		jp	z,.no_max
(1)  409/     2BD : 1E 0F               		ld	e,00001111b
(1)  410/     2BF :                     .no_max:
(1)  411/     2BF : 7B                  		ld	a,e
(1)  412/     2C0 : F6 10               		or	00010000b
(1)  413/     2C2 : B2                  		or	d
(1)  414/     2C3 : 5F                  		ld	e,a
(1)  415/     2C4 :                     .set_vol:
(1)  416/     2C4 : 7B                  		ld	a,e
(1)  417/     2C5 : D3 7F               		out	(psg_ctrl),a
(1)  418/     2C7 :                     .next_psg:
(1)  419/     2C7 : C9                  		ret
(1)  420/     2C8 :                     
(1)  421/     2C8 :                     ; ------------------------------------
(1)  422/     2C8 :                     ; Set chip
(1)  423/     2C8 :                     ; 
(1)  424/     2C8 :                     ; iy - track buffer
(1)  425/     2C8 :                     ; ix - current channel
(1)  426/     2C8 :                     ; ------------------------------------
(1)  427/     2C8 :                     
(1)  428/     2C8 :                     .chip_setup:
(1)  429/     2C8 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  430/     2CB : E6 07               		and	111b
(1)  431/     2CD : FE 03               		cp	3
(1)  432/     2CF : C8                  		ret	z			; 03h invalid channel
(1)  433/     2D0 :                     
(1)  434/     2D0 :                     ; ---------------------------------------------
(1)  435/     2D0 :                     ; Track channel list:
(1)  436/     2D0 :                     ; FM1 FM2 FM4 FM5 FM3 FM6 PSG1 PSG2 PSG3 NOISE
(1)  437/     2D0 :                     ; ---------------------------------------------
(1)  438/     2D0 :                     
(1)  439/     2D0 : E5                  		push	hl
(1)  440/     2D1 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Instrument
(1)  441/     2D4 : CB 6F               		bit	5,a
(1)  442/     2D6 : C2 DE 02            		jp	nz,.use_newinst
(1)  443/     2D9 : E6 02               		and	0010b
(1)  444/     2DB : CA 19 03            		jp	z,.no_newinst
(1)  445/     2DE :                     .use_newinst:
(1)  446/     2DE : CD 45 05            		call	.grab_instslot
(1)  447/     2E1 : 7E                  		ld	a,(hl)
(1)  448/     2E2 : FE FF               		cp	-1
(1)  449/     2E4 : CA 19 03            		jp	z,.no_newinst
(1)  450/     2E7 : DD 77 0B            		ld	(ix+chnl_InsType),a
(1)  451/     2EA : 23                  		inc	hl
(1)  452/     2EB : 7E                  		ld	a,(hl)
(1)  453/     2EC : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1)  454/     2EF : 23                  		inc	hl
(1)  455/     2F0 : 7E                  		ld	a,(hl)
(1)  456/     2F1 : DD 77 07            		ld	(ix+chnl_InsAddr),a
(1)  457/     2F4 : 23                  		inc	hl
(1)  458/     2F5 : 7E                  		ld	a,(hl)
(1)  459/     2F6 : DD 77 08            		ld	(ix+(chnl_InsAddr+1)),a
(1)  460/     2F9 :                     		
(1)  461/     2F9 : DD 7E 00            		ld	a,(ix+chnl_Chip)	; PSG instr are external
(1)  462/     2FC : B7                  		or	a
(1)  463/     2FD : FA 06 03            		jp	m,.psg_instr
(1)  464/     300 : CD 89 05            		call	.set_fm_ins
(1)  465/     303 : C3 19 03            		jp	.no_newinst
(1)  466/     306 :                     .psg_instr:
(1)  467/     306 : FE E0               		cp	0E0h
(1)  468/     308 : C2 19 03            		jp	nz,.no_newinst
(1)  469/     30B : DD 7E 0B            		ld	a,(ix+chnl_InsType)	; Set new noise type
(1)  470/     30E : 4F                  		ld	c,a
(1)  471/     30F : E6 E0               		and 	0E0h
(1)  472/     311 : FE E0               		cp	0E0h
(1)  473/     313 : C2 19 03            		jp	nz,.no_newinst
(1)  474/     316 : FD 71 0C            		ld	(iy+trck_PsgNoise),c	; to TRACK buffer
(1)  475/     319 :                     .no_newinst:
(1)  476/     319 :                     		
(1)  477/     319 :                     	; ---------------------------------------------
(1)  478/     319 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Effect
(1)  479/     31C : CB 7F               		bit	7,a
(1)  480/     31E : C2 26 03            		jp	nz,.use_neweff
(1)  481/     321 : E6 08               		and	1000b
(1)  482/     323 : CA 32 03            		jp	z,.no_neweff
(1)  483/     326 :                     .use_neweff:	
(1)  484/     326 : CD 37 04            		call	.set_effect
(1)  485/     329 : CD 92 03            		call	.search_slot
(1)  486/     32C : DA 32 03            		jp	c,.no_neweff
(1)  487/     32F : CD EE 05            		call	.run_effect
(1)  488/     332 :                     .no_neweff:
(1)  489/     332 :                     
(1)  490/     332 :                     	; ---------------------------------------------
(1)  491/     332 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Note
(1)  492/     335 : 5F                  		ld	e,a
(1)  493/     336 : CB 67               		bit	4,a
(1)  494/     338 : C2 40 03            		jp	nz,.use_notereq
(1)  495/     33B : E6 01               		and	0001b
(1)  496/     33D : CA 55 03            		jp	z,.no_notereq
(1)  497/     340 :                     .use_notereq:
(1)  498/     340 : CD 45 05            		call	.grab_instslot
(1)  499/     343 : 7E                  		ld	a,(hl)
(1)  500/     344 : FE FF               		cp	-1
(1)  501/     346 : CA 55 03            		jp	z,.no_notereq
(1)  502/     349 :                     
(1)  503/     349 : CD BD 03            		call	.set_frequency
(1)  504/     34C : CD 92 03            		call	.search_slot
(1)  505/     34F : DA 55 03            		jp	c,.no_notereq
(1)  506/     352 : CD 5B 05            		call	.run_frequency
(1)  507/     355 :                     .no_notereq:
(1)  508/     355 :                     
(1)  509/     355 :                     	; ------------------------------------
(1)  510/     355 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  511/     358 : CB 77               		bit	6,a			; Volume
(1)  512/     35A : C2 62 03            		jp	nz,.use_newvol
(1)  513/     35D : E6 04               		and	0100b
(1)  514/     35F : CA 71 03            		jp	z,.no_newvol
(1)  515/     362 :                     .use_newvol:
(1)  516/     362 : DD 46 04            		ld	b,(ix+chnl_Vol)
(1)  517/     365 : DD 70 17            		ld	(ix+chnl_EfNewVol),b
(1)  518/     368 : CD 92 03            		call	.search_slot
(1)  519/     36B : DA 71 03            		jp	c,.no_newvol
(1)  520/     36E : CD AF 03            		call	.set_volume
(1)  521/     371 :                     .no_newvol:
(1)  522/     371 :                     
(1)  523/     371 :                     	; ---------------------------------------------
(1)  524/     371 :                     	; Mark active SFX channels
(1)  525/     371 : 21 00 C0            		ld	hl,SndBuff_UsedChnls
(1)  526/     374 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  527/     377 : B7                  		or	a
(1)  528/     378 : CA 7E 03            		jp	z,.lowprioset
(1)  529/     37B : 21 04 C0            		ld	hl,SndBuff_UsedChnls_2
(1)  530/     37E :                     .lowprioset:	
(1)  531/     37E : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  532/     381 : B7                  		or	a
(1)  533/     382 :                     ; 		jp	p,.plusfm
(1)  534/     382 : 07                  		rlca
(1)  535/     383 : 07                  		rlca
(1)  536/     384 : 07                  		rlca
(1)  537/     385 : E6 03               		and	00000011b
(1)  538/     387 :                     ; 		add 	a,6
(1)  539/     387 :                     ; 		jp	.leftfm
(1)  540/     387 :                     ; .plusfm:
(1)  541/     387 :                     ; 		bit 	2,a
(1)  542/     387 :                     ; 		jp	z,.leftfm
(1)  543/     387 :                     ; 		dec	a
(1)  544/     387 :                     ; .leftfm:
(1)  545/     387 : 11 00 00            		ld	de,0
(1)  546/     38A : 5F                  		ld	e,a
(1)  547/     38B : 19                  		add 	hl,de
(1)  548/     38C : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  549/     38F : 77                  		ld	(hl),a
(1)  550/     390 :                     
(1)  551/     390 :                     	; ---------------------------------------------
(1)  552/     390 :                     
(1)  553/     390 : E1                  		pop	hl
(1)  554/     391 : C9                  		ret
(1)  555/     392 :                     
(1)  556/     392 :                     ; ------------------------------------
(1)  557/     392 :                     ; Check if slot is busy
(1)  558/     392 :                     ; 
(1)  559/     392 :                     ; Returns:
(1)  560/     392 :                     ;  c - Channel is busy
(1)  561/     392 :                     ; nc - Channel is free or
(1)  562/     392 :                     ;      ignore (BGM only)
(1)  563/     392 :                     ; ------------------------------------
(1)  564/     392 :                     
(1)  565/     392 :                     .search_slot:
(1)  566/     392 : 3F                  		ccf
(1)  567/     393 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  568/     396 : B7                  		or	a
(1)  569/     397 : C8                  		ret 	z
(1)  570/     398 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  571/     39B : B7                  		or	a
(1)  572/     39C :                     ; 		jp	p,.srchfm
(1)  573/     39C : 07                  		rlca
(1)  574/     39D : 07                  		rlca
(1)  575/     39E : 07                  		rlca
(1)  576/     39F : E6 03               		and	00000011b
(1)  577/     3A1 :                     ; 		add 	a,6
(1)  578/     3A1 :                     ; 		jp	.gosrch
(1)  579/     3A1 :                     ; .srchfm:
(1)  580/     3A1 :                     ; 		bit 	2,a
(1)  581/     3A1 :                     ; 		jp	z,.gosrch
(1)  582/     3A1 :                     ; 		dec	a
(1)  583/     3A1 :                     ; .gosrch:
(1)  584/     3A1 : 21 00 C0            		ld	hl,SndBuff_UsedChnls
(1)  585/     3A4 : 11 00 00            		ld	de,0
(1)  586/     3A7 : 5F                  		ld	e,a
(1)  587/     3A8 : 19                  		add 	hl,de
(1)  588/     3A9 : 7E                  		ld	a,(hl)
(1)  589/     3AA : 3F                  		ccf
(1)  590/     3AB : B7                  		or	a
(1)  591/     3AC : C8                  		ret	z
(1)  592/     3AD : 37                  		scf
(1)  593/     3AE : C9                  		ret
(1)  594/     3AF :                     
(1)  595/     3AF :                     ; ---------------------------------------------
(1)  596/     3AF :                     ; These routines only update the channel
(1)  597/     3AF :                     ; buffer
(1)  598/     3AF :                     ; ---------------------------------------------
(1)  599/     3AF :                     
(1)  600/     3AF :                     ; -----------------------------------
(1)  601/     3AF :                     ; Set volume
(1)  602/     3AF :                     ; 
(1)  603/     3AF :                     ; FM note: call this AFTER 
(1)  604/     3AF :                     ; updating the instrument data regs
(1)  605/     3AF :                     ; 
(1)  606/     3AF :                     ; b - chnl_Vol
(1)  607/     3AF :                     ; -----------------------------------
(1)  608/     3AF :                     
(1)  609/     3AF :                     .set_volume:
(1)  610/     3AF : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  611/     3B2 : B7                  		or	a
(1)  612/     3B3 : FA B9 03            		jp	m,.vol_ispsg
(1)  613/     3B6 : C3 8B 05            		jp	.set_fm_vol
(1)  614/     3B9 :                     .vol_ispsg:
(1)  615/     3B9 : 78                  		ld	a,b
(1)  616/     3BA : C3 8D 05            		jp	.set_psg_vol
(1)  617/     3BD :                     
(1)  618/     3BD :                     ; ------------------------------------
(1)  619/     3BD :                     ; Set channel frequency
(1)  620/     3BD :                     ; ------------------------------------
(1)  621/     3BD :                     
(1)  622/     3BD :                     .set_frequency:
(1)  623/     3BD : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1)  624/     3C0 : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1)  625/     3C3 : 78                  		ld	a,b
(1)  626/     3C4 : B7                  		or	a			; Type 080h/0E0h?
(1)  627/     3C5 : F2 CD 03            		jp	p,.notype3
(1)  628/     3C8 : CB 79               		bit 	7,c			; PSG channel?
(1)  629/     3CA : C2 FD 03            		jp	nz,.setfreq_psg
(1)  630/     3CD :                     .notype3:
(1)  631/     3CD : 78                  		ld	a,b
(1)  632/     3CE : FE 02               		cp	2			; Type 2?
(1)  633/     3D0 : C2 D9 03            		jp	nz,.fm_normalchnl
(1)  634/     3D3 : 79                  		ld	a,c			; Channel 6?
(1)  635/     3D4 : FE 06               		cp	6
(1)  636/     3D6 : CA FC 03            		jp	z,.setfm_sample
(1)  637/     3D9 :                     
(1)  638/     3D9 :                     ; -------------------------------------
(1)  639/     3D9 :                     ; FM frequency
(1)  640/     3D9 :                     ; -------------------------------------
(1)  641/     3D9 :                     
(1)  642/     3D9 :                     .fm_normalchnl:
(1)  643/     3D9 : C9                  		ret
(1)  644/     3DA :                     
(1)  645/     3DA :                     ; 		ld	a,(ix+chnl_Note)
(1)  646/     3DA :                     ; 		cp	-10
(1)  647/     3DA :                     ; 		jp	z,.unlock_chnl
(1)  648/     3DA :                     ; 		cp	-2
(1)  649/     3DA :                     ; 		jp	z,.fm_turnoff
(1)  650/     3DA :                     ; 		cp	-1
(1)  651/     3DA :                     ; 		jp	z,.fm_turnoff
(1)  652/     3DA :                     ; 
(1)  653/     3DA :                     ; 		ld	hl,fmFreq_List
(1)  654/     3DA :                     ; 		ld	de,0
(1)  655/     3DA :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  656/     3DA :                     ; 		add	a,a
(1)  657/     3DA :                     ; 		ld	e,a
(1)  658/     3DA :                     ; 		add	hl,de
(1)  659/     3DA :                     ; 		ld	a,(hl)
(1)  660/     3DA :                     ; 		ld	(ix+chnl_Freq),a
(1)  661/     3DA :                     ; 		inc	hl
(1)  662/     3DA :                     ; 		ld	a,(hl)
(1)  663/     3DA :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  664/     3DA :                     ; 		ret
(1)  665/     3DA :                     
(1)  666/     3DA :                     ; -------------------------------------
(1)  667/     3DA :                     ; Unlock current channel
(1)  668/     3DA :                     ; -------------------------------------
(1)  669/     3DA :                     
(1)  670/     3DA :                     .unlock_chnl:
(1)  671/     3DA : 21 00 C0            		ld	hl,SndBuff_UsedChnls
(1)  672/     3DD : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  673/     3E0 : B7                  		or	a
(1)  674/     3E1 : CA E7 03            		jp	z,.lowunlkset
(1)  675/     3E4 : 21 04 C0            		ld	hl,SndBuff_UsedChnls_2
(1)  676/     3E7 :                     .lowunlkset:	
(1)  677/     3E7 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  678/     3EA : B7                  		or	a
(1)  679/     3EB :                     ; 		jp	p,.uplusfm
(1)  680/     3EB : 07                  		rlca
(1)  681/     3EC : 07                  		rlca
(1)  682/     3ED : 07                  		rlca
(1)  683/     3EE : E6 03               		and	00000011b
(1)  684/     3F0 :                     ; 		add 	a,6
(1)  685/     3F0 :                     ; 		jp	.uleftfm
(1)  686/     3F0 :                     ; .uplusfm:
(1)  687/     3F0 :                     ; 		bit 	2,a
(1)  688/     3F0 :                     ; 		jp	z,.uleftfm
(1)  689/     3F0 :                     ; 		dec	a
(1)  690/     3F0 :                     ; .uleftfm:
(1)  691/     3F0 : 11 00 00            		ld	de,0
(1)  692/     3F3 : 5F                  		ld	e,a
(1)  693/     3F4 : 19                  		add 	hl,de
(1)  694/     3F5 : 36 00               		ld	(hl),0
(1)  695/     3F7 : DD 36 01 00         		ld	(ix+chnl_Type),0
(1)  696/     3FB : C9                  		ret
(1)  697/     3FC :                     		
(1)  698/     3FC :                     ; -------------------------------------
(1)  699/     3FC :                     ; Set FM6 sample
(1)  700/     3FC :                     ; -------------------------------------
(1)  701/     3FC :                     
(1)  702/     3FC :                     .setfm_sample:
(1)  703/     3FC : C9                  		ret
(1)  704/     3FD :                     
(1)  705/     3FD :                     ; 		ld	a,(ix+chnl_Note)
(1)  706/     3FD :                     ; 		cp	-10
(1)  707/     3FD :                     ; 		jp	z,.unlock_chnl
(1)  708/     3FD :                     ; 		cp	-2
(1)  709/     3FD :                     ; 		ret	z
(1)  710/     3FD :                     ; 		cp	-1
(1)  711/     3FD :                     ; 		ret	z
(1)  712/     3FD :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  713/     3FD :                     ; 		add 	a,a
(1)  714/     3FD :                     ; 		ld	de,0
(1)  715/     3FD :                     ; 		ld	e,a
(1)  716/     3FD :                     ; 		ld	hl,wavFreq_List
(1)  717/     3FD :                     ; 		add 	hl,de
(1)  718/     3FD :                     ; 		ld	a,(hl)
(1)  719/     3FD :                     ; 		inc 	hl
(1)  720/     3FD :                     ; 		ld	(ix+chnl_Freq),a
(1)  721/     3FD :                     ; 		ld	a,(hl)
(1)  722/     3FD :                     ; 		inc 	hl
(1)  723/     3FD :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  724/     3FD :                     ; 		ret
(1)  725/     3FD :                     		
(1)  726/     3FD :                     ; -------------------------------------
(1)  727/     3FD :                     ; PSG frequency
(1)  728/     3FD :                     ; -------------------------------------
(1)  729/     3FD :                     
(1)  730/     3FD :                     .setfreq_psg:
(1)  731/     3FD : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  732/     400 : 47                  		ld	b,a
(1)  733/     401 : F6 1F               		or	01Fh
(1)  734/     403 : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  735/     406 : FE F6               		cp	-10
(1)  736/     408 : CA DA 03            		jp	z,.unlock_chnl
(1)  737/     40B : FE FE               		cp	-2
(1)  738/     40D : C8                  		ret	z
(1)  739/     40E : FE FF               		cp	-1
(1)  740/     410 : C8                  		ret	z
(1)  741/     411 :                     
(1)  742/     411 : 21 00 00            		ld	hl,0
(1)  743/     414 : 87                  		add 	a,a
(1)  744/     415 : 11 00 00            		ld	de,0
(1)  745/     418 : 5F                  		ld	e,a
(1)  746/     419 : 19                  		add 	hl,de
(1)  747/     41A : DD 7E 0C            		ld	a,(ix+chnl_InsOpt)
(1)  748/     41D : 87                  		add	a,a
(1)  749/     41E : 11 00 00            		ld	de,0
(1)  750/     421 : 5F                  		ld	e,a
(1)  751/     422 : 19                  		add 	hl,de
(1)  752/     423 : 54                  		ld	d,h
(1)  753/     424 : 5D                  		ld	e,l	
(1)  754/     425 : 21 83 07            		ld	hl,psgFreq_List
(1)  755/     428 : 19                  		add	hl,de
(1)  756/     429 : 7E                  		ld	a,(hl)
(1)  757/     42A : DD 77 09            		ld	(ix+chnl_Freq),a
(1)  758/     42D : 23                  		inc 	hl
(1)  759/     42E : 7E                  		ld	a,(hl)
(1)  760/     42F : DD 77 0A            		ld	(ix+(chnl_Freq+1)),a
(1)  761/     432 : DD 36 14 00         		ld	(ix+chnl_PsgIndx),0
(1)  762/     436 : C9                  		ret
(1)  763/     437 :                     		
(1)  764/     437 :                     ; -------------------------------------
(1)  765/     437 :                     ; Set effects
(1)  766/     437 :                     ; 
(1)  767/     437 :                     ; updates to buffer only
(1)  768/     437 :                     ; -------------------------------------
(1)  769/     437 :                     
(1)  770/     437 :                     .set_effect:
(1)  771/     437 : 11 00 00            		ld	de,0
(1)  772/     43A : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1)  773/     43D : 87                  		add 	a,a
(1)  774/     43E : E6 FE               		and	11111110b
(1)  775/     440 : 5F                  		ld	e,a
(1)  776/     441 : 21 51 04            		ld	hl,.eff_list
(1)  777/     444 : 19                  		add	hl,de
(1)  778/     445 : DD 46 00            		ld	b,(ix+chnl_Chip)
(1)  779/     448 : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1)  780/     44B : 7E                  		ld	a,(hl)
(1)  781/     44C : 23                  		inc	hl
(1)  782/     44D : 66                  		ld	h,(hl)
(1)  783/     44E : 6F                  		ld	l,a
(1)  784/     44F : E9                  		jp	(hl)
(1)  785/     450 :                     .eff_null:
(1)  786/     450 : C9                  		ret
(1)  787/     451 :                     .eff_list:
(1)  788/     451 : 50 04               		dw .eff_null
(1)  789/     453 : 87 04               		dw .eff_A	; A | Set ticks
(1)  790/     455 : 8F 04               		dw .eff_B	; B | Jump to block (SET OUTSIDE)
(1)  791/     457 : 50 04               		dw .eff_null	; C | Break to row (unsupported)
(1)  792/     459 : 9F 04               		dw .eff_D	; D | Volume slide
(1)  793/     45B : B9 04               		dw .eff_E	; E | Portametro down
(1)  794/     45D : F9 04               		dw .eff_F	; F | Portametro up
(1)  795/     45F : 50 04               		dw .eff_null	; G
(1)  796/     461 : 50 04               		dw .eff_null	; H
(1)  797/     463 : 50 04               		dw .eff_null	; I
(1)  798/     465 : 50 04               		dw .eff_null	; J	
(1)  799/     467 : 50 04               		dw .eff_null	; K
(1)  800/     469 : 50 04               		dw .eff_null	; L
(1)  801/     46B : 50 04               		dw .eff_null	; M
(1)  802/     46D : 50 04               		dw .eff_null	; N
(1)  803/     46F : 50 04               		dw .eff_null	; O
(1)  804/     471 : 50 04               		dw .eff_null	; P
(1)  805/     473 : 50 04               		dw .eff_null	; Q
(1)  806/     475 : 50 04               		dw .eff_null	; R
(1)  807/     477 : 50 04               		dw .eff_null	; S
(1)  808/     479 : 50 04               		dw .eff_null	; T
(1)  809/     47B : 50 04               		dw .eff_null	; U
(1)  810/     47D : 50 04               		dw .eff_null	; V
(1)  811/     47F : 50 04               		dw .eff_null	; W
(1)  812/     481 : 32 05               		dw .eff_X	; X
(1)  813/     483 : 50 04               		dw .eff_null	; Y
(1)  814/     485 : 50 04               		dw .eff_null	; Z
(1)  815/     487 :                     
(1)  816/     487 :                     ; -------------------------------------
(1)  817/     487 :                     ; Effect A - Set ticks
(1)  818/     487 :                     ; -------------------------------------
(1)  819/     487 :                     
(1)  820/     487 :                     .eff_A:
(1)  821/     487 : 0D                  		dec 	c
(1)  822/     488 : FD 71 1F            		ld	(iy+trck_TicksCurr),c
(1)  823/     48B : FD 71 0D            		ld	(iy+trck_TicksRead),c
(1)  824/     48E : C9                  		ret
(1)  825/     48F :                     
(1)  826/     48F :                     ; -------------------------------------
(1)  827/     48F :                     ; Effect B - Set block
(1)  828/     48F :                     ; -------------------------------------
(1)  829/     48F :                     
(1)  830/     48F :                     .eff_B:
(1)  831/     48F : FD 71 0E            		ld	(iy+trck_BlockCurr),c
(1)  832/     492 : 11 01 00            		ld	de,1			; Finish row
(1)  833/     495 : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  834/     498 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  835/     49B : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  836/     49E : C9                  		ret
(1)  837/     49F :                     
(1)  838/     49F :                     ; -------------------------------------
(1)  839/     49F :                     ; Effect D - Volume slide
(1)  840/     49F :                     ; -------------------------------------
(1)  841/     49F :                     
(1)  842/     49F :                     .eff_D:
(1)  843/     49F : 79                  		ld	a,c
(1)  844/     4A0 : E6 F0               		and	11110000b		; X0h - slide up
(1)  845/     4A2 : C2 AF 04            		jp	nz,.go_up
(1)  846/     4A5 : 79                  		ld	a,c
(1)  847/     4A6 : E6 0F               		and	00001111b		; 0Xh - slide down
(1)  848/     4A8 : C8                  		ret	z			; 00h - slide continue
(1)  849/     4A9 :                     .go_down:
(1)  850/     4A9 : 2F                  		cpl
(1)  851/     4AA : 3C                  		inc	a
(1)  852/     4AB : DD 77 16            		ld	(ix+chnl_EfVolSlide),a
(1)  853/     4AE : C9                  		ret
(1)  854/     4AF :                     .go_up:
(1)  855/     4AF : 0F                  		rrca
(1)  856/     4B0 : 0F                  		rrca
(1)  857/     4B1 : 0F                  		rrca
(1)  858/     4B2 : 0F                  		rrca
(1)  859/     4B3 : E6 0F               		and	00001111b
(1)  860/     4B5 : DD 77 16            		ld	(ix+chnl_EfVolSlide),a
(1)  861/     4B8 : C9                  		ret
(1)  862/     4B9 :                     
(1)  863/     4B9 :                     ; -------------------------------------
(1)  864/     4B9 :                     ; Effect E - Portametro down
(1)  865/     4B9 :                     ; 
(1)  866/     4B9 :                     ; NOTE: not accurate
(1)  867/     4B9 :                     ; -------------------------------------
(1)  868/     4B9 :                     
(1)  869/     4B9 :                     .eff_E:
(1)  870/     4B9 : 79                  		ld	a,c
(1)  871/     4BA : B7                  		or	a
(1)  872/     4BB : CA F8 04            		jp	z,.prtdwn_cont
(1)  873/     4BE : E6 F0               		and	11110000b
(1)  874/     4C0 : FE E0               		cp	0E0h
(1)  875/     4C2 : CA D7 04            		jp	z,.dwn_exfine
(1)  876/     4C5 : FE F0               		cp	0F0h
(1)  877/     4C7 : CA E7 04            		jp	z,.dwn_fine
(1)  878/     4CA :                     		
(1)  879/     4CA :                     ; Normal
(1)  880/     4CA : 79                  		ld	a,c
(1)  881/     4CB : E6 1F               		and	00011111b
(1)  882/     4CD : 87                  		add	a,a
(1)  883/     4CE : 2F                  		cpl
(1)  884/     4CF : 3C                  		inc	a
(1)  885/     4D0 : 11 FF FF            		ld	de,-1
(1)  886/     4D3 : 5F                  		ld	e,a
(1)  887/     4D4 : C3 F2 04            		jp	.set_portam
(1)  888/     4D7 :                     .dwn_exfine:
(1)  889/     4D7 : 11 FF FF            		ld	de,-1
(1)  890/     4DA : 79                  		ld	a,c
(1)  891/     4DB : E6 0F               		and	00001111b
(1)  892/     4DD : 2F                  		cpl
(1)  893/     4DE : 3C                  		inc	a
(1)  894/     4DF : CB 2F               		sra	a
(1)  895/     4E1 : CB 2F               		sra	a
(1)  896/     4E3 : 5F                  		ld	e,a
(1)  897/     4E4 : C3 F2 04            		jp	.set_portam
(1)  898/     4E7 :                     .dwn_fine:
(1)  899/     4E7 : 11 FF FF            		ld	de,-1
(1)  900/     4EA : 79                  		ld	a,c
(1)  901/     4EB : E6 0F               		and	00001111b
(1)  902/     4ED : 2F                  		cpl
(1)  903/     4EE : 3C                  		inc	a
(1)  904/     4EF : CB 2F               		sra	a
(1)  905/     4F1 : 5F                  		ld	e,a
(1)  906/     4F2 :                     
(1)  907/     4F2 :                     ; shared with effects E and F
(1)  908/     4F2 :                     .set_portam:
(1)  909/     4F2 : DD 72 19            		ld	(ix+(chnl_EfPortam+1)),d
(1)  910/     4F5 : DD 73 18            		ld	(ix+chnl_EfPortam),e
(1)  911/     4F8 :                     
(1)  912/     4F8 :                     .prtdwn_cont:
(1)  913/     4F8 : C9                  		ret
(1)  914/     4F9 :                     
(1)  915/     4F9 :                     ; -------------------------------------
(1)  916/     4F9 :                     ; Effect F - Portametro up
(1)  917/     4F9 :                     ; 
(1)  918/     4F9 :                     ; NOTE: not accurate
(1)  919/     4F9 :                     ; -------------------------------------
(1)  920/     4F9 :                     
(1)  921/     4F9 :                     .eff_F:
(1)  922/     4F9 : 79                  		ld	a,c
(1)  923/     4FA : B7                  		or	a
(1)  924/     4FB : CA 31 05            		jp	z,.prtup_cont
(1)  925/     4FE : E6 F0               		and	11110000b
(1)  926/     500 : FE E0               		cp	0E0h
(1)  927/     502 : CA 1A 05            		jp	z,.up_exfine
(1)  928/     505 : FE F0               		cp	0F0h
(1)  929/     507 : CA 26 05            		jp	z,.up_fine
(1)  930/     50A :                     		
(1)  931/     50A :                     ; Normal
(1)  932/     50A : 79                  		ld	a,c
(1)  933/     50B : E6 1F               		and	00011111b
(1)  934/     50D : 57                  		ld	d,a
(1)  935/     50E : 87                  		add	a,a
(1)  936/     50F : 87                  		add	a,a
(1)  937/     510 : 5F                  		ld	e,a
(1)  938/     511 : 7A                  		ld	a,d
(1)  939/     512 : 07                  		rlca
(1)  940/     513 : 07                  		rlca	
(1)  941/     514 : E6 03               		and	00000011b
(1)  942/     516 : 57                  		ld	d,a
(1)  943/     517 : C3 F2 04            		jp	.set_portam
(1)  944/     51A :                     .up_exfine:
(1)  945/     51A : 11 00 00            		ld	de,0
(1)  946/     51D : 79                  		ld	a,c
(1)  947/     51E : E6 0F               		and	00001111b
(1)  948/     520 : CB 2F               		sra	a
(1)  949/     522 : 5F                  		ld	e,a
(1)  950/     523 : C3 F2 04            		jp	.set_portam
(1)  951/     526 :                     .up_fine:
(1)  952/     526 : 11 00 00            		ld	de,0
(1)  953/     529 : 79                  		ld	a,c
(1)  954/     52A : E6 0F               		and	00001111b
(1)  955/     52C : 87                  		add	a,a
(1)  956/     52D : 5F                  		ld	e,a
(1)  957/     52E : C3 F2 04            		jp	.set_portam
(1)  958/     531 :                     .prtup_cont:
(1)  959/     531 : C9                  		ret
(1)  960/     532 :                     		
(1)  961/     532 :                     ; -------------------------------------
(1)  962/     532 :                     ; Effect X - Set panning (FM ONLY)
(1)  963/     532 :                     ; -------------------------------------
(1)  964/     532 :                     
(1)  965/     532 :                     .eff_X:
(1)  966/     532 : 79                  		ld	a,c
(1)  967/     533 : 07                  		rlca
(1)  968/     534 : 07                  		rlca
(1)  969/     535 : E6 03               		and	00000011b
(1)  970/     537 : 11 41 05            		ld	de,.fmpan_list
(1)  971/     53A : 83                  		add 	a,e
(1)  972/     53B : 5F                  		ld	e,a
(1)  973/     53C : 1A                  		ld	a,(de)
(1)  974/     53D : DD 77 0D            		ld	(ix+chnl_FmPan),a
(1)  975/     540 : C9                  		ret
(1)  976/     541 :                     .fmpan_list:
(1)  977/     541 : 80                  		db 080h		; 000h
(1)  978/     542 : 80                  		db 080h		; 040h
(1)  979/     543 : C0                  		db 0C0h		; 080h
(1)  980/     544 : 40                  		db 040h		; 0C0h
(1)  981/     545 :                     
(1)  982/     545 :                     ; ---------------------------------------------
(1)  983/     545 :                     ; Grab instrument from slot
(1)  984/     545 :                     ; 
(1)  985/     545 :                     ; Output
(1)  986/     545 :                     ; hl - current instrument
(1)  987/     545 :                     ; ---------------------------------------------
(1)  988/     545 :                     
(1)  989/     545 :                     .grab_instslot:
(1)  990/     545 : FD 6E 16            		ld	l,(iy+trck_Instr)
(1)  991/     548 : FD 66 17            		ld	h,(iy+(trck_Instr+1))
(1)  992/     54B : DD 7E 03            		ld	a,(ix+chnl_Ins)
(1)  993/     54E : 3D                  		dec 	a
(1)  994/     54F : 47                  		ld	b,a
(1)  995/     550 : 87                  		add 	a,a
(1)  996/     551 : 87                  		add 	a,a
(1)  997/     552 : 4F                  		ld	c,a
(1)  998/     553 : 78                  		ld	a,b
(1)  999/     554 : 07                  		rlca
(1) 1000/     555 : 07                  		rlca
(1) 1001/     556 : E6 03               		and	3
(1) 1002/     558 : 47                  		ld	b,a
(1) 1003/     559 : 09                  		add	hl,bc
(1) 1004/     55A : C9                  		ret
(1) 1005/     55B :                     
(1) 1006/     55B :                     ; ---------------------------------------------
(1) 1007/     55B :                     ; These routines send the result data from
(1) 1008/     55B :                     ; the channel buffer to their respective
(1) 1009/     55B :                     ; sound chips
(1) 1010/     55B :                     ; ---------------------------------------------
(1) 1011/     55B :                     
(1) 1012/     55B :                     .run_frequency:
(1) 1013/     55B : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1) 1014/     55E : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1) 1015/     561 : 78                  		ld	a,b
(1) 1016/     562 : B7                  		or	a			; Type 080h/0E0h?
(1) 1017/     563 : F2 6B 05            		jp	p,.freqrn_not3
(1) 1018/     566 : CB 79               		bit 	7,c			; PSG channel?
(1) 1019/     568 : C2 79 05            		jp	nz,.freqrn_psg
(1) 1020/     56B :                     .freqrn_not3:
(1) 1021/     56B : 78                  		ld	a,b
(1) 1022/     56C : FE 02               		cp	2				; Type 2?
(1) 1023/     56E : C2 77 05            		jp	nz,.freqrn_fm
(1) 1024/     571 : 79                  		ld	a,c				; Channel 6?
(1) 1025/     572 : FE 06               		cp	6
(1) 1026/     574 : CA 78 05            		jp	z,.freqrn_smpl
(1) 1027/     577 :                     .freqrn_fm:
(1) 1028/     577 : C9                  		ret
(1) 1029/     578 :                     ; 		ld	e,(ix+chnl_Chip)
(1) 1030/     578 :                     ; 		bit	7,e
(1) 1031/     578 :                     ; 		ret	nz
(1) 1032/     578 :                     ; 		ld	d,28h
(1) 1033/     578 :                     ; 		call	SndDrv_FmSet_1			; KEYS OFF
(1) 1034/     578 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1035/     578 :                     ; 		cp	-2
(1) 1036/     578 :                     ; 		ret	z
(1) 1037/     578 :                     ; 		cp	-1
(1) 1038/     578 :                     ; 		ret	z
(1) 1039/     578 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1040/     578 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1041/     578 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1042/     578 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1043/     578 :                     ; 		call	.set_fm_freq
(1) 1044/     578 :                     ; 		ld	e,(ix+chnl_FmRegKeys)		; KEYS ON
(1) 1045/     578 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1046/     578 :                     ; 		or	e
(1) 1047/     578 :                     ; 		ld	e,a
(1) 1048/     578 :                     ; 		ld	d,28h
(1) 1049/     578 :                     ; 		jp	SndDrv_FmSet_1
(1) 1050/     578 :                     
(1) 1051/     578 :                     .freqrn_smpl:
(1) 1052/     578 : C9                  		ret
(1) 1053/     579 :                     ; 		ld	e,040h
(1) 1054/     579 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1055/     579 :                     ; 		cp	-2
(1) 1056/     579 :                     ; 		jp	z,.set_smpflag
(1) 1057/     579 :                     ; 		cp	-1
(1) 1058/     579 :                     ; 		jp	z,.set_smpflag
(1) 1059/     579 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1060/     579 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1061/     579 :                     ; 		ld	a,h
(1) 1062/     579 :                     ; 		or	l
(1) 1063/     579 :                     ; 		ret	z
(1) 1064/     579 :                     ; 	; Play SAMPLE
(1) 1065/     579 :                     ; 		ld	de,2806h
(1) 1066/     579 :                     ; 		call	SndDrv_FmSet_1
(1) 1067/     579 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1068/     579 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1069/     579 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1070/     579 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1071/     579 :                     ; 		ld	a,l
(1) 1072/     579 :                     ; 		ld	(Sample_Speed),a
(1) 1073/     579 :                     ; 		ld	a,h
(1) 1074/     579 :                     ; 		ld	(Sample_Speed+1),a
(1) 1075/     579 :                     ; 		ld	a,(ix+chnl_SmplFlags)
(1) 1076/     579 :                     ; 		rlca
(1) 1077/     579 :                     ; 		or	1
(1) 1078/     579 :                     ; 		ld	e,a
(1) 1079/     579 :                     ; .set_smpflag:
(1) 1080/     579 :                     ; 		ld	a,e
(1) 1081/     579 :                     ; 		ld	(Sample_Flags),a
(1) 1082/     579 :                     ; 		ret
(1) 1083/     579 :                     
(1) 1084/     579 :                     .freqrn_psg:
(1) 1085/     579 : DD 66 0A            		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1086/     57C : DD 6E 09            		ld	l,(ix+chnl_Freq)
(1) 1087/     57F : DD 74 1B            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1088/     582 : DD 75 1A            		ld	(ix+chnl_EfNewFreq),l
(1) 1089/     585 : C3 AB 05            		jp	.set_psg_freq
(1) 1090/     588 :                     
(1) 1091/     588 :                     ; ------------------------------------
(1) 1092/     588 :                     ; Turn FM volume regs down
(1) 1093/     588 :                     ; TL = 07Fh
(1) 1094/     588 :                     ; 
(1) 1095/     588 :                     ; ix - current channel
(1) 1096/     588 :                     ; ------------------------------------
(1) 1097/     588 :                     
(1) 1098/     588 :                     .fm_turnoff:
(1) 1099/     588 : C9                  		ret
(1) 1100/     589 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1101/     589 :                     ; 		ld	c,a
(1) 1102/     589 :                     ; 		cp	6
(1) 1103/     589 :                     ; 		jp	nz,.not_dac
(1) 1104/     589 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1105/     589 :                     ; 		cp	2
(1) 1106/     589 :                     ; 		jp	nz,.not_dac
(1) 1107/     589 :                     ; 		ld	a,40h
(1) 1108/     589 :                     ; 		ld	(Sample_Flags),a
(1) 1109/     589 :                     ; .not_dac:
(1) 1110/     589 :                     ; 		ld	a,c
(1) 1111/     589 :                     ; 		or	a
(1) 1112/     589 :                     ; 		ret	m
(1) 1113/     589 :                     ; 		
(1) 1114/     589 :                     ; .fm_settloff:
(1) 1115/     589 :                     ; 		ld	e,a
(1) 1116/     589 :                     ; 		ld	d,28h
(1) 1117/     589 :                     ; 		call	SndDrv_FmSet_1
(1) 1118/     589 :                     ; 		ld	a,e
(1) 1119/     589 :                     ; 		and	11b
(1) 1120/     589 :                     ; 		or	40h
(1) 1121/     589 :                     ; 		ld	e,7Fh
(1) 1122/     589 :                     ; 		ld	d,a
(1) 1123/     589 :                     ; 		call	SndDrv_FmAutoSet
(1) 1124/     589 :                     ; 		inc	d
(1) 1125/     589 :                     ; 		inc	d
(1) 1126/     589 :                     ; 		inc	d
(1) 1127/     589 :                     ; 		inc	d
(1) 1128/     589 :                     ; 		call	SndDrv_FmAutoSet
(1) 1129/     589 :                     ; 		inc	d
(1) 1130/     589 :                     ; 		inc	d
(1) 1131/     589 :                     ; 		inc	d
(1) 1132/     589 :                     ; 		inc	d
(1) 1133/     589 :                     ; 		call	SndDrv_FmAutoSet
(1) 1134/     589 :                     ; 		inc	d
(1) 1135/     589 :                     ; 		inc	d
(1) 1136/     589 :                     ; 		inc	d
(1) 1137/     589 :                     ; 		inc	d
(1) 1138/     589 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1139/     589 :                     
(1) 1140/     589 :                     ; ------------------------------------
(1) 1141/     589 :                     ; FM normal registers
(1) 1142/     589 :                     ; 
(1) 1143/     589 :                     ; NOTE: call this first BEFORE
(1) 1144/     589 :                     ; modyfing the volume
(1) 1145/     589 :                     ; 
(1) 1146/     589 :                     ; ix - current channel
(1) 1147/     589 :                     ; ------------------------------------
(1) 1148/     589 :                     
(1) 1149/     589 :                     .set_fm_ins:
(1) 1150/     589 : C9                  		ret
(1) 1151/     58A :                     ; 		ld	c,(ix+chnl_Chip)
(1) 1152/     58A :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1153/     58A :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1154/     58A :                     ; 		ld	a,h
(1) 1155/     58A :                     ; 		or	l
(1) 1156/     58A :                     ; 		ret	z
(1) 1157/     58A :                     ; 		ld	a,c			; FM6?
(1) 1158/     58A :                     ; 		cp	6
(1) 1159/     58A :                     ; 		jp	nz,.no_chnl6
(1) 1160/     58A :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1161/     58A :                     ; 		cp	2			; Type 2?
(1) 1162/     58A :                     ; 		jp	z,.set_sampl
(1) 1163/     58A :                     ; 		ld	a,40h			; IF type != 2, stop sample to unlock FM6
(1) 1164/     58A :                     ; 		ld	(Sample_Flags),a
(1) 1165/     58A :                     ; .no_chnl6:
(1) 1166/     58A :                     ; 		ld	a,c
(1) 1167/     58A :                     ; 		and	11b
(1) 1168/     58A :                     ; 		or	30h
(1) 1169/     58A :                     ; 		ld	d,a
(1) 1170/     58A :                     ; 		ld	b,1Ch/4
(1) 1171/     58A :                     ; .fmfiles:
(1) 1172/     58A :                     ; 		ld	e,(hl)
(1) 1173/     58A :                     ; 		inc 	hl
(1) 1174/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1175/     58A :                     ; 		inc 	d
(1) 1176/     58A :                     ; 		inc 	d
(1) 1177/     58A :                     ; 		inc 	d
(1) 1178/     58A :                     ; 		inc 	d
(1) 1179/     58A :                     ; 		ld	e,(hl)
(1) 1180/     58A :                     ; 		inc 	hl
(1) 1181/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1182/     58A :                     ; 		inc 	d
(1) 1183/     58A :                     ; 		inc 	d
(1) 1184/     58A :                     ; 		inc 	d
(1) 1185/     58A :                     ; 		inc 	d
(1) 1186/     58A :                     ; 		ld	e,(hl)
(1) 1187/     58A :                     ; 		inc 	hl
(1) 1188/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1189/     58A :                     ; 		inc 	d
(1) 1190/     58A :                     ; 		inc 	d
(1) 1191/     58A :                     ; 		inc 	d
(1) 1192/     58A :                     ; 		inc 	d
(1) 1193/     58A :                     ; 		ld	e,(hl)
(1) 1194/     58A :                     ; 		inc 	hl
(1) 1195/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1196/     58A :                     ; 		inc 	d
(1) 1197/     58A :                     ; 		inc 	d
(1) 1198/     58A :                     ; 		inc 	d
(1) 1199/     58A :                     ; 		inc 	d
(1) 1200/     58A :                     ; 		djnz	.fmfiles
(1) 1201/     58A :                     ; 
(1) 1202/     58A :                     ; 		ld	d,0B0h
(1) 1203/     58A :                     ; 		ld	a,c
(1) 1204/     58A :                     ; 		and	11b
(1) 1205/     58A :                     ; 		or	d
(1) 1206/     58A :                     ; 		ld	d,a
(1) 1207/     58A :                     ; 		ld	e,(hl)			; 0B0h
(1) 1208/     58A :                     ; 		ld	(ix+chnl_FmRegB0),e
(1) 1209/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1210/     58A :                     ; 		inc 	hl
(1) 1211/     58A :                     ; 		ld	e,(hl)			; 0B4h
(1) 1212/     58A :                     ; 		ld	d,0B4h
(1) 1213/     58A :                     ; 		ld	a,c
(1) 1214/     58A :                     ; 		and	11b
(1) 1215/     58A :                     ; 		or	d
(1) 1216/     58A :                     ; 		ld	d,a
(1) 1217/     58A :                     ; 		ld	a,(hl)
(1) 1218/     58A :                     ; 		ld	(ix+chnl_FmRegB4),a	
(1) 1219/     58A :                     ; 		or	(ix+chnl_FmPan)		; FM panning
(1) 1220/     58A :                     ; 		ld	e,a
(1) 1221/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1222/     58A :                     ; 		inc 	hl
(1) 1223/     58A :                     ; 		ld	e,(hl)			; FM3 flag
(1) 1224/     58A :                     ; 		inc 	hl
(1) 1225/     58A :                     ; 		ld	a,(hl)			; 028h
(1) 1226/     58A :                     ; 		inc 	hl
(1) 1227/     58A :                     ; 		ld	(ix+chnl_FmRegKeys),a
(1) 1228/     58A :                     ; 
(1) 1229/     58A :                     ; 		ld	a,c
(1) 1230/     58A :                     ; 		cp	2			; Channel 3?
(1) 1231/     58A :                     ; 		ret	nz
(1) 1232/     58A :                     ; 		ld	e,0
(1) 1233/     58A :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1234/     58A :                     ; 		cp	1			; Type 1?
(1) 1235/     58A :                     ; 		jp	nz,.set_fm3reg
(1) 1236/     58A :                     ; 		ld	d,0A6h			; OP1
(1) 1237/     58A :                     ; 		ld	e,(hl)
(1) 1238/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1239/     58A :                     ; 		inc 	hl
(1) 1240/     58A :                     ; 		ld	d,0A2h
(1) 1241/     58A :                     ; 		ld	e,(hl)
(1) 1242/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1243/     58A :                     ; 		inc 	hl
(1) 1244/     58A :                     ; 		ld	d,0ACh			; OP2
(1) 1245/     58A :                     ; 		ld	e,(hl)
(1) 1246/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1247/     58A :                     ; 		inc 	hl
(1) 1248/     58A :                     ; 		ld	d,0A8h
(1) 1249/     58A :                     ; 		ld	e,(hl)
(1) 1250/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1251/     58A :                     ; 		inc 	hl
(1) 1252/     58A :                     ; 		ld	d,0ADh			; OP3
(1) 1253/     58A :                     ; 		ld	e,(hl)
(1) 1254/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1255/     58A :                     ; 		inc 	hl
(1) 1256/     58A :                     ; 		ld	d,0A9h
(1) 1257/     58A :                     ; 		ld	e,(hl)
(1) 1258/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1259/     58A :                     ; 		inc 	hl
(1) 1260/     58A :                     ; 		ld	d,0AEh			; OP4
(1) 1261/     58A :                     ; 		ld	e,(hl)
(1) 1262/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1263/     58A :                     ; 		inc 	hl
(1) 1264/     58A :                     ; 		ld	d,0AAh
(1) 1265/     58A :                     ; 		ld	e,(hl)
(1) 1266/     58A :                     ; 		call	SndDrv_FmAutoSet
(1) 1267/     58A :                     ; 		ld	e,(ix+chnl_FmRegKeys)	; KEYS ON
(1) 1268/     58A :                     ; 		ld	a,c
(1) 1269/     58A :                     ; 		and	111b
(1) 1270/     58A :                     ; 		or	e
(1) 1271/     58A :                     ; 		ld	e,a
(1) 1272/     58A :                     ; 		ld	d,28h
(1) 1273/     58A :                     ; 		call	SndDrv_FmSet_1
(1) 1274/     58A :                     ; 		ld	e,40h
(1) 1275/     58A :                     ; .set_fm3reg:
(1) 1276/     58A :                     ; 		ld	d,27h
(1) 1277/     58A :                     ; 		jp	SndDrv_FmSet_1
(1) 1278/     58A :                      
(1) 1279/     58A :                     ; ------------------------------------
(1) 1280/     58A :                     ; Set FM frequency
(1) 1281/     58A :                     ; 
(1) 1282/     58A :                     ; hl - frequency
(1) 1283/     58A :                     ; ------------------------------------
(1) 1284/     58A :                     
(1) 1285/     58A :                     .set_fm_freq:
(1) 1286/     58A : C9                  		ret
(1) 1287/     58B :                     ; 		ld	d,(ix+chnl_Chip)
(1) 1288/     58B :                     ; 		ld	e,(ix+chnl_InsType)
(1) 1289/     58B :                     ; 		ld	a,d
(1) 1290/     58B :                     ; 		cp	6			; Check channel 6
(1) 1291/     58B :                     ; 		jp	nz,.no_chnl6f
(1) 1292/     58B :                     ; 		ld	a,e
(1) 1293/     58B :                     ; 		cp	2
(1) 1294/     58B :                     ; 		ret	z
(1) 1295/     58B :                     ; .no_chnl6f:
(1) 1296/     58B :                     ; 		ld	a,d
(1) 1297/     58B :                     ; 		cp	2			; Check channel 3
(1) 1298/     58B :                     ; 		jp	nz,.no_chnl3f
(1) 1299/     58B :                     ; 		ld	a,e
(1) 1300/     58B :                     ; 		cp	1			; CH3 OP regs are already
(1) 1301/     58B :                     ; 		ret	z			; set from the instrument data
(1) 1302/     58B :                     ; .no_chnl3f:
(1) 1303/     58B :                     ; 
(1) 1304/     58B :                     ; 		ld	e,d
(1) 1305/     58B :                     ; 		ld	a,(ix+chnl_Note)
(1) 1306/     58B :                     ; 		cp	-10
(1) 1307/     58B :                     ; 		jp	z,.set_keycut
(1) 1308/     58B :                     ; 		cp	-1
(1) 1309/     58B :                     ; 		ret	z
(1) 1310/     58B :                     ; 		cp	-2
(1) 1311/     58B :                     ; 		jp	nz,.no_keycut
(1) 1312/     58B :                     ; .set_keycut:
(1) 1313/     58B :                     ; 		ld	a,d
(1) 1314/     58B :                     ; 		jp	.fm_settloff
(1) 1315/     58B :                     ; .no_keycut:
(1) 1316/     58B :                     ; 		ld	a,e
(1) 1317/     58B :                     ; 		and	11b
(1) 1318/     58B :                     ; 		ld	b,a
(1) 1319/     58B :                     ; 		ld	a,0A4h
(1) 1320/     58B :                     ; 		or	b
(1) 1321/     58B :                     ; 		ld	d,a
(1) 1322/     58B :                     ; 		ld	e,h
(1) 1323/     58B :                     ; 		call	SndDrv_FmAutoSet
(1) 1324/     58B :                     ; 		dec 	d
(1) 1325/     58B :                     ; 		dec 	d
(1) 1326/     58B :                     ; 		dec	d
(1) 1327/     58B :                     ; 		dec 	d
(1) 1328/     58B :                     ; 		ld	e,l
(1) 1329/     58B :                     ; 		jp	SndDrv_FmAutoSet
(1) 1330/     58B :                     
(1) 1331/     58B :                     ; ------------------------------------
(1) 1332/     58B :                     ; Set FM Volume
(1) 1333/     58B :                     ; 
(1) 1334/     58B :                     ; This one might blow your mind
(1) 1335/     58B :                     ; ------------------------------------
(1) 1336/     58B :                     
(1) 1337/     58B :                     .set_fm_vol:
(1) 1338/     58B : C9                  		ret
(1) 1339/     58C :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1340/     58C :                     ; 		ld	e,a
(1) 1341/     58C :                     ; 		cp	6
(1) 1342/     58C :                     ; 		jp	nz,.notdac
(1) 1343/     58C :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1344/     58C :                     ; 		cp	2
(1) 1345/     58C :                     ; 		ret	z
(1) 1346/     58C :                     ; .notdac:
(1) 1347/     58C :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1348/     58C :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1349/     58C :                     ; 		ld	a,h
(1) 1350/     58C :                     ; 		or	l
(1) 1351/     58C :                     ; 		ret	z
(1) 1352/     58C :                     ; 		inc 	hl			; Skip 30h
(1) 1353/     58C :                     ; 		inc 	hl
(1) 1354/     58C :                     ; 		inc 	hl
(1) 1355/     58C :                     ; 		inc 	hl
(1) 1356/     58C :                     ; 		ld	a,b
(1) 1357/     58C :                     ; 		cp	40h
(1) 1358/     58C :                     ; 		jp	c,.too_much
(1) 1359/     58C :                     ; 		ld	a,40h
(1) 1360/     58C :                     ; .too_much:
(1) 1361/     58C :                     ; 		or	a
(1) 1362/     58C :                     ; 		jp	p,.too_low
(1) 1363/     58C :                     ; 		xor	a
(1) 1364/     58C :                     ; .too_low:
(1) 1365/     58C :                     ; 		sub 	a,40h
(1) 1366/     58C :                     ; 		cpl
(1) 1367/     58C :                     ; 		inc 	a
(1) 1368/     58C :                     ; 		ld	(ix+chnl_FmVolBase),a
(1) 1369/     58C :                     ; 		ld	c,(ix+chnl_FmVolBase)
(1) 1370/     58C :                     ; 		ld	d,40h			; 40h
(1) 1371/     58C :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1372/     58C :                     ; 		and	11b
(1) 1373/     58C :                     ; 		or	d
(1) 1374/     58C :                     ; 		ld	d,a
(1) 1375/     58C :                     ; 		ld	a,(ix+chnl_FmRegB0)
(1) 1376/     58C :                     ; 		and	111b
(1) 1377/     58C :                     ; 		ld	b,a
(1) 1378/     58C :                     ; 		cp	7
(1) 1379/     58C :                     ; 		jp	nz,.tl_lv1
(1) 1380/     58C :                     ; 		ld	a,(hl)
(1) 1381/     58C :                     ; 		add 	a,c
(1) 1382/     58C :                     ; 		or	a
(1) 1383/     58C :                     ; 		jp	p,.tl_lv1_tm
(1) 1384/     58C :                     ; 		ld	a,7Fh
(1) 1385/     58C :                     ; .tl_lv1_tm:
(1) 1386/     58C :                     ; 		ld	e,a
(1) 1387/     58C :                     ; 		call	SndDrv_FmAutoSet
(1) 1388/     58C :                     ; .tl_lv1:
(1) 1389/     58C :                     ; 		inc 	hl
(1) 1390/     58C :                     ; 		inc 	d
(1) 1391/     58C :                     ; 		inc 	d
(1) 1392/     58C :                     ; 		inc 	d
(1) 1393/     58C :                     ; 		inc 	d
(1) 1394/     58C :                     ; 		ld	a,b
(1) 1395/     58C :                     ; 		cp	7
(1) 1396/     58C :                     ; 		jp	z,.tl_lv2_ok
(1) 1397/     58C :                     ; 		cp	6
(1) 1398/     58C :                     ; 		jp	z,.tl_lv2_ok
(1) 1399/     58C :                     ; 		cp	5
(1) 1400/     58C :                     ; 		jp	nz,.tl_lv2
(1) 1401/     58C :                     ; .tl_lv2_ok:
(1) 1402/     58C :                     ; 		ld	a,(hl)
(1) 1403/     58C :                     ; 		add 	a,c
(1) 1404/     58C :                     ; 		or	a
(1) 1405/     58C :                     ; 		jp	p,.tl_lv2_tm
(1) 1406/     58C :                     ; 		ld	a,7Fh
(1) 1407/     58C :                     ; .tl_lv2_tm:
(1) 1408/     58C :                     ; 		ld	e,a
(1) 1409/     58C :                     ; 		call	SndDrv_FmAutoSet
(1) 1410/     58C :                     ; .tl_lv2:
(1) 1411/     58C :                     ; 		inc 	hl
(1) 1412/     58C :                     ; 		inc 	d
(1) 1413/     58C :                     ; 		inc 	d
(1) 1414/     58C :                     ; 		inc 	d
(1) 1415/     58C :                     ; 		inc 	d
(1) 1416/     58C :                     ; 		ld	a,b
(1) 1417/     58C :                     ; 		and	100b
(1) 1418/     58C :                     ; 		or	a
(1) 1419/     58C :                     ; 		jp	z,.tl_lv3
(1) 1420/     58C :                     ; 		ld	a,(hl)
(1) 1421/     58C :                     ; 		add 	a,c
(1) 1422/     58C :                     ; 		or	a
(1) 1423/     58C :                     ; 		jp	p,.tl_lv3_tm
(1) 1424/     58C :                     ; 		ld	a,7Fh
(1) 1425/     58C :                     ; .tl_lv3_tm:
(1) 1426/     58C :                     ; 		ld	e,a
(1) 1427/     58C :                     ; 		call	SndDrv_FmAutoSet
(1) 1428/     58C :                     ; .tl_lv3:
(1) 1429/     58C :                     ; 		inc 	hl
(1) 1430/     58C :                     ; 		inc 	d
(1) 1431/     58C :                     ; 		inc 	d
(1) 1432/     58C :                     ; 		inc 	d
(1) 1433/     58C :                     ; 		inc 	d
(1) 1434/     58C :                     ; 		ld	a,(hl)
(1) 1435/     58C :                     ; 		add 	a,c
(1) 1436/     58C :                     ; 		or	a
(1) 1437/     58C :                     ; 		jp	p,.tl_lv4_tm
(1) 1438/     58C :                     ; 		ld	a,7Fh
(1) 1439/     58C :                     ; .tl_lv4_tm:
(1) 1440/     58C :                     ; 		ld	e,a
(1) 1441/     58C :                     ; 		inc 	hl
(1) 1442/     58C :                     ; 		jp	SndDrv_FmAutoSet
(1) 1443/     58C :                     
(1) 1444/     58C :                     ; ------------------------------------
(1) 1445/     58C :                     
(1) 1446/     58C :                     .set_sampl:
(1) 1447/     58C : C9                  		ret
(1) 1448/     58D :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1449/     58D :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1450/     58D :                     ; 
(1) 1451/     58D :                     ; 		ld	e,(hl)
(1) 1452/     58D :                     ; 		inc 	hl
(1) 1453/     58D :                     ; 		ld	d,(hl)
(1) 1454/     58D :                     ; 		inc 	hl
(1) 1455/     58D :                     ; 		ld	a,(hl)
(1) 1456/     58D :                     ; 		inc 	hl
(1) 1457/     58D :                     ; 		ld	(Sample_Start),de
(1) 1458/     58D :                     ; 		ld	(Sample_Start+2),a
(1) 1459/     58D :                     ; 
(1) 1460/     58D :                     ; 		ld	e,(hl)
(1) 1461/     58D :                     ; 		inc 	hl
(1) 1462/     58D :                     ; 		ld	d,(hl)
(1) 1463/     58D :                     ; 		inc 	hl
(1) 1464/     58D :                     ; 		ld	a,(hl)
(1) 1465/     58D :                     ; 		inc 	hl
(1) 1466/     58D :                     ; 		ld	(Sample_End),de
(1) 1467/     58D :                     ; 		ld	(Sample_End+2),a
(1) 1468/     58D :                     ; 		
(1) 1469/     58D :                     ; 		ld	e,(hl)
(1) 1470/     58D :                     ; 		inc 	hl
(1) 1471/     58D :                     ; 		ld	d,(hl)
(1) 1472/     58D :                     ; 		inc 	hl
(1) 1473/     58D :                     ; 		ld	a,(hl)
(1) 1474/     58D :                     ; 		inc 	hl
(1) 1475/     58D :                     ; 		ld	(Sample_Loop),de
(1) 1476/     58D :                     ; 		ld	(Sample_Loop+2),a
(1) 1477/     58D :                     ; 		
(1) 1478/     58D :                     ; 		ld	a,(hl)
(1) 1479/     58D :                     ; 		ld	(ix+chnl_SmplFlags),a
(1) 1480/     58D :                     ; 		ret
(1) 1481/     58D :                     		
(1) 1482/     58D :                     ; --------------------------------------------
(1) 1483/     58D :                     ; Set PSG Volume
(1) 1484/     58D :                     ; --------------------------------------------
(1) 1485/     58D :                     
(1) 1486/     58D :                     .set_psg_vol:
(1) 1487/     58D : 1E 00               		ld	e,0
(1) 1488/     58F : FE 40               		cp	40h
(1) 1489/     591 : DA 96 05            		jp	c,.pntoo_much
(1) 1490/     594 : 3E 40               		ld	a,40h
(1) 1491/     596 :                     .pntoo_much:
(1) 1492/     596 : B7                  		or	a
(1) 1493/     597 : F2 9B 05            		jp	p,.pntoo_low
(1) 1494/     59A : AF                  		xor	a
(1) 1495/     59B :                     .pntoo_low:
(1) 1496/     59B : FE 40               		cp	40h
(1) 1497/     59D : CA A7 05            		jp	z,.pntoppsgv
(1) 1498/     5A0 : 3D                  		dec 	a
(1) 1499/     5A1 : 0F                  		rrca
(1) 1500/     5A2 : 0F                  		rrca
(1) 1501/     5A3 : 2F                  		cpl
(1) 1502/     5A4 : E6 0F               		and	00001111b
(1) 1503/     5A6 : 5F                  		ld	e,a
(1) 1504/     5A7 :                     .pntoppsgv:
(1) 1505/     5A7 : DD 73 12            		ld	(ix+chnl_PsgVolBase),e
(1) 1506/     5AA : C9                  		ret
(1) 1507/     5AB :                     
(1) 1508/     5AB :                     ; --------------------------------------------
(1) 1509/     5AB :                     ; Set PSG Frequency
(1) 1510/     5AB :                     ; 
(1) 1511/     5AB :                     ; hl - frequency
(1) 1512/     5AB :                     ; --------------------------------------------
(1) 1513/     5AB :                     
(1) 1514/     5AB :                     .set_psg_freq:
(1) 1515/     5AB : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1516/     5AE : E6 E0               		and	11100000b
(1) 1517/     5B0 : 47                  		ld	b,a
(1) 1518/     5B1 : FE C0               		cp	0C0h
(1) 1519/     5B3 : C2 BE 05            		jp	nz,.not_nse3
(1) 1520/     5B6 : FD 7E 0C            		ld	a,(iy+trck_PsgNoise)
(1) 1521/     5B9 : E6 03               		and	3
(1) 1522/     5BB : FE 03               		cp	3
(1) 1523/     5BD : C8                  		ret	z
(1) 1524/     5BE :                     .not_nse3:
(1) 1525/     5BE : 78                  		ld	a,b
(1) 1526/     5BF : FE E0               		cp	0E0h
(1) 1527/     5C1 : C2 CE 05            		jp	nz,.not_nse
(1) 1528/     5C4 : DD 7E 0B            		ld	a,(ix+chnl_InsType)
(1) 1529/     5C7 : E6 03               		and	011b
(1) 1530/     5C9 : FE 03               		cp	3
(1) 1531/     5CB : C0                  		ret	nz
(1) 1532/     5CC : 06 C0               		ld	b,0C0h
(1) 1533/     5CE :                     .not_nse:
(1) 1534/     5CE : 7C                  		ld	a,h
(1) 1535/     5CF : B5                  		or	l
(1) 1536/     5D0 : C8                  		ret	z
(1) 1537/     5D1 :                     		
(1) 1538/     5D1 : 7D                  		ld	a,l
(1) 1539/     5D2 : 57                  		ld	d,a
(1) 1540/     5D3 : E6 0F               		and 	00001111b
(1) 1541/     5D5 : B0                  		or	b
(1) 1542/     5D6 : 5F                  		ld	e,a
(1) 1543/     5D7 : 7D                  		ld	a,l
(1) 1544/     5D8 : 0F                  		rrca
(1) 1545/     5D9 : 0F                  		rrca
(1) 1546/     5DA : 0F                  		rrca
(1) 1547/     5DB : 0F                  		rrca
(1) 1548/     5DC : E6 0F               		and	00001111b
(1) 1549/     5DE : 57                  		ld	d,a
(1) 1550/     5DF : 7C                  		ld	a,h
(1) 1551/     5E0 : 0F                  		rrca
(1) 1552/     5E1 : 0F                  		rrca
(1) 1553/     5E2 : 0F                  		rrca
(1) 1554/     5E3 : 0F                  		rrca
(1) 1555/     5E4 : E6 30               		and	00110000b
(1) 1556/     5E6 : B2                  		or	d
(1) 1557/     5E7 : DD 77 1D            		ld	(ix+(chnl_PsgOutFreq+1)),a
(1) 1558/     5EA : DD 73 1C            		ld	(ix+chnl_PsgOutFreq),e
(1) 1559/     5ED : C9                  		ret
(1) 1560/     5EE :                     
(1) 1561/     5EE :                     ; --------------------------------
(1) 1562/     5EE :                     ; Run effects
(1) 1563/     5EE :                     ; 
(1) 1564/     5EE :                     ; apply effects on the channels
(1) 1565/     5EE :                     ; if unlocked
(1) 1566/     5EE :                     ; --------------------------------
(1) 1567/     5EE :                     
(1) 1568/     5EE :                     .run_effect:
(1) 1569/     5EE : 11 00 00            		ld	de,0
(1) 1570/     5F1 : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1) 1571/     5F4 : 87                  		add 	a,a
(1) 1572/     5F5 : E6 FE               		and	11111110b
(1) 1573/     5F7 : 5F                  		ld	e,a
(1) 1574/     5F8 : 21 07 06            		ld	hl,.list_doeff
(1) 1575/     5FB : 19                  		add	hl,de
(1) 1576/     5FC : DD 46 00            		ld	b,(ix+chnl_Chip)
(1) 1577/     5FF : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1) 1578/     602 : 7E                  		ld	a,(hl)
(1) 1579/     603 : 23                  		inc	hl
(1) 1580/     604 : 66                  		ld	h,(hl)
(1) 1581/     605 : 6F                  		ld	l,a
(1) 1582/     606 : E9                  		jp	(hl)
(1) 1583/     607 :                     .list_doeff:
(1) 1584/     607 : 50 04               		dw .eff_null
(1) 1585/     609 : 50 04               		dw .eff_null	; A | Set ticks
(1) 1586/     60B : 50 04               		dw .eff_null	; B | Jump to block
(1) 1587/     60D : 50 04               		dw .eff_null	; C | Break to row (not possible here)
(1) 1588/     60F : 3D 06               		dw .set_D	; D | Volume slide
(1) 1589/     611 : 57 06               		dw .set_E_F	; E
(1) 1590/     613 : 57 06               		dw .set_E_F	; F
(1) 1591/     615 : 50 04               		dw .eff_null	; G
(1) 1592/     617 : 50 04               		dw .eff_null	; H
(1) 1593/     619 : 50 04               		dw .eff_null	; I
(1) 1594/     61B : 50 04               		dw .eff_null	; J	
(1) 1595/     61D : 50 04               		dw .eff_null	; K
(1) 1596/     61F : 50 04               		dw .eff_null	; L
(1) 1597/     621 : 50 04               		dw .eff_null	; M
(1) 1598/     623 : 50 04               		dw .eff_null	; N
(1) 1599/     625 : 50 04               		dw .eff_null	; O
(1) 1600/     627 : 50 04               		dw .eff_null	; P
(1) 1601/     629 : 50 04               		dw .eff_null	; Q
(1) 1602/     62B : 50 04               		dw .eff_null	; R
(1) 1603/     62D : 50 04               		dw .eff_null	; S
(1) 1604/     62F : 50 04               		dw .eff_null	; T
(1) 1605/     631 : 50 04               		dw .eff_null	; U
(1) 1606/     633 : 50 04               		dw .eff_null	; V
(1) 1607/     635 : 50 04               		dw .eff_null	; W
(1) 1608/     637 : 92 06               		dw .set_X	; X
(1) 1609/     639 : 50 04               		dw .eff_null	; Y
(1) 1610/     63B : 50 04               		dw .eff_null	; Z
(1) 1611/     63D :                     
(1) 1612/     63D :                     ; ------------------------------------
(1) 1613/     63D :                     ; Effect D - Volume slide
(1) 1614/     63D :                     ; ------------------------------------
(1) 1615/     63D :                     
(1) 1616/     63D :                     .set_D:
(1) 1617/     63D : DD 7E 17            		ld	a,(ix+chnl_EfNewVol)
(1) 1618/     640 : DD 86 16            		add 	a,(ix+chnl_EfVolSlide)
(1) 1619/     643 : DD 77 17            		ld	(ix+chnl_EfNewVol),a
(1) 1620/     646 : CB 78               		bit	7,b
(1) 1621/     648 : C2 51 06            		jp	nz,.setpsg_vol
(1) 1622/     64B : DD 46 17            		ld	b,(ix+chnl_EfNewVol)
(1) 1623/     64E : C3 8B 05            		jp	.set_fm_vol
(1) 1624/     651 :                     .setpsg_vol:
(1) 1625/     651 : DD 7E 17            		ld	a,(ix+chnl_EfNewVol)
(1) 1626/     654 : C3 8D 05            		jp	.set_psg_vol
(1) 1627/     657 :                     
(1) 1628/     657 :                     ; ------------------------------------
(1) 1629/     657 :                     ; Effect E - Portametro down
(1) 1630/     657 :                     ; ------------------------------------
(1) 1631/     657 :                     
(1) 1632/     657 :                     .set_E_F:
(1) 1633/     657 : DD CB 00 7E         		bit	7,(ix+chnl_Chip)
(1) 1634/     65B : C2 74 06            		jp	nz,.psg_EF
(1) 1635/     65E :                     		
(1) 1636/     65E : DD 56 19            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1637/     661 : DD 5E 18            		ld	e,(ix+chnl_EfPortam)
(1) 1638/     664 : DD 66 1B            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1639/     667 : DD 6E 1A            		ld	l,(ix+chnl_EfNewFreq)
(1) 1640/     66A : 19                  		add 	hl,de
(1) 1641/     66B : DD 74 1B            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1642/     66E : DD 75 1A            		ld	(ix+chnl_EfNewFreq),l
(1) 1643/     671 : C3 8A 05            		jp	.set_fm_freq
(1) 1644/     674 :                     
(1) 1645/     674 :                     .psg_EF:
(1) 1646/     674 : DD 56 19            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1647/     677 : DD 5E 18            		ld	e,(ix+chnl_EfPortam)
(1) 1648/     67A : DD 66 1B            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1649/     67D : DD 6E 1A            		ld	l,(ix+chnl_EfNewFreq)
(1) 1650/     680 : 37                  		scf
(1) 1651/     681 : ED 52               		sbc 	hl,de
(1) 1652/     683 : F2 89 06            		jp	p,.toolow
(1) 1653/     686 : 21 00 00            		ld	hl,0
(1) 1654/     689 :                     .toolow:
(1) 1655/     689 : DD 74 1B            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1656/     68C : DD 75 1A            		ld	(ix+chnl_EfNewFreq),l
(1) 1657/     68F : C3 AB 05            		jp	.set_psg_freq
(1) 1658/     692 :                     		
(1) 1659/     692 :                     ; ------------------------------------
(1) 1660/     692 :                     ; Effect X - Set panning (FM ONLY)
(1) 1661/     692 :                     ; ------------------------------------
(1) 1662/     692 :                     
(1) 1663/     692 :                     .set_X:
(1) 1664/     692 :                     	; TODO: GG PAN
(1) 1665/     692 : C9                  		ret
(1) 1666/     693 :                     ; 		ld	d,0B4h
(1) 1667/     693 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1668/     693 :                     ; 		and	11b
(1) 1669/     693 :                     ; 		or	d
(1) 1670/     693 :                     ; 		ld	d,a
(1) 1671/     693 :                     ; 		ld	a,(ix+chnl_FmRegB4)
(1) 1672/     693 :                     ; 		or	(ix+chnl_FmPan)
(1) 1673/     693 :                     ; 		ld	e,a
(1) 1674/     693 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1675/     693 :                     
(1) 1676/     693 :                     ; ===================================================================
(1) 1677/     693 :                     ; ----------------------------------------------------
(1) 1678/     693 :                     ; Subs
(1) 1679/     693 :                     ; ----------------------------------------------------
(1) 1680/     693 :                     
(1) 1681/     693 :                     ; ------------------------------------
(1) 1682/     693 :                     ; Track request
(1) 1683/     693 :                     ; ------------------------------------
(1) 1684/     693 :                     
(1) 1685/     693 :                     SndDrv_ReqTrack:
(1) 1686/     693 : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1) 1687/     696 : FD 36 0A 00         		ld	(iy+trck_ReqFlag),0
(1) 1688/     69A : FD 36 0C E0         		ld	(iy+trck_PsgNoise),0E0h
(1) 1689/     69E : 07                  		rlca
(1) 1690/     69F : E6 FE               		and	11111110b
(1) 1691/     6A1 : 11 00 00            		ld	de,0
(1) 1692/     6A4 : 5F                  		ld	e,a
(1) 1693/     6A5 : 21 AE 06            		ld	hl,.req_list
(1) 1694/     6A8 : 19                  		add	hl,de
(1) 1695/     6A9 : 7E                  		ld	a,(hl)
(1) 1696/     6AA : 23                  		inc	hl
(1) 1697/     6AB : 66                  		ld	h,(hl)
(1) 1698/     6AC : 6F                  		ld	l,a
(1) 1699/     6AD : E9                  		jp	(hl)
(1) 1700/     6AE :                     .req_list:
(1) 1701/     6AE : 00 00               		dw 0
(1) 1702/     6B0 : B4 06               		dw .req01
(1) 1703/     6B2 : 0D 07               		dw .req02
(1) 1704/     6B4 :                     
(1) 1705/     6B4 :                     ; ------------------------------------
(1) 1706/     6B4 :                     ; Flag 01h
(1) 1707/     6B4 :                     ; ------------------------------------
(1) 1708/     6B4 :                     
(1) 1709/     6B4 :                     .req01:
(1) 1710/     6B4 : FD 46 00            		ld	b,(iy+trck_ReqBlk)		; Copy addresses
(1) 1711/     6B7 : FD 4E 01            		ld	c,(iy+(trck_ReqBlk+1))
(1) 1712/     6BA : FD 56 02            		ld	d,(iy+trck_ReqPatt)
(1) 1713/     6BD : FD 5E 03            		ld	e,(iy+(trck_ReqPatt+1))
(1) 1714/     6C0 : FD 66 04            		ld	h,(iy+trck_ReqIns)
(1) 1715/     6C3 : FD 6E 05            		ld	l,(iy+(trck_ReqIns+1))
(1) 1716/     6C6 : FD 70 12            		ld	(iy+trck_Blocks),b
(1) 1717/     6C9 : FD 71 13            		ld	(iy+(trck_Blocks+1)),c
(1) 1718/     6CC : FD 72 14            		ld	(iy+trck_PattBase),d
(1) 1719/     6CF : FD 73 15            		ld	(iy+(trck_PattBase+1)),e
(1) 1720/     6D2 : FD 72 18            		ld	(iy+trck_PattRead),d
(1) 1721/     6D5 : FD 73 19            		ld	(iy+(trck_PattRead+1)),e
(1) 1722/     6D8 : FD 74 16            		ld	(iy+trck_Instr),h
(1) 1723/     6DB : FD 75 17            		ld	(iy+(trck_Instr+1)),l
(1) 1724/     6DE : FD 56 06            		ld	d,(iy+trck_ReqTicks)		; Tempo and ticks
(1) 1725/     6E1 : FD 4E 07            		ld	c,(iy+trck_ReqTempo)
(1) 1726/     6E4 : FD 46 08            		ld	b,(iy+trck_ReqCurrBlk)
(1) 1727/     6E7 : FD 7E 09            		ld	a,(iy+trck_ReqSndBnk)
(1) 1728/     6EA : FD 72 1F            		ld	(iy+trck_TicksCurr),d
(1) 1729/     6ED : FD 72 1C            		ld	(iy+trck_TicksMain),d
(1) 1730/     6F0 : FD 72 0D            		ld	(iy+trck_TicksRead),d
(1) 1731/     6F3 : FD 71 1D            		ld	(iy+trck_TempoBits),c
(1) 1732/     6F6 : FD 70 0E            		ld	(iy+trck_BlockCurr),b
(1) 1733/     6F9 : 32 49 C1            		ld	(curr_SndBank),a
(1) 1734/     6FC : AF                  		xor	a
(1) 1735/     6FD : FD 77 1A            		ld	(iy+trck_RowSteps),a
(1) 1736/     700 : FD 77 1B            		ld	(iy+(trck_RowSteps+1)),a		
(1) 1737/     703 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1) 1738/     706 : 3C                  		inc 	a
(1) 1739/     707 : FD 77 11            		ld	(iy+trck_Active),a
(1) 1740/     70A : C3 11 07            		jp	SndDrv_ResetChan
(1) 1741/     70D :                     		
(1) 1742/     70D :                     ; ------------------------------------
(1) 1743/     70D :                     ; Flag 02h
(1) 1744/     70D :                     ; ------------------------------------
(1) 1745/     70D :                     
(1) 1746/     70D :                     .req02:
(1) 1747/     70D : AF                  		xor	a
(1) 1748/     70E : FD 77 11            		ld	(iy+trck_Active),a
(1) 1749/     711 :                     
(1) 1750/     711 :                     ; ------------------------------------
(1) 1751/     711 :                     ; Reset channels and silence them
(1) 1752/     711 :                     ; ------------------------------------
(1) 1753/     711 :                     
(1) 1754/     711 :                     SndDrv_ResetChan:
(1) 1755/     711 : 21 00 C0            		ld	hl,SndBuff_UsedChnls
(1) 1756/     714 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1) 1757/     717 : B7                  		or	a
(1) 1758/     718 : CA 1E 07            		jp	z,.lowprio
(1) 1759/     71B : 21 04 C0            		ld	hl,SndBuff_UsedChnls_2
(1) 1760/     71E :                     .lowprio:
(1) 1761/     71E : 06 04               		ld	b,MAX_CHNLS
(1) 1762/     720 : AF                  		xor	a
(1) 1763/     721 :                     .nexttype:
(1) 1764/     721 : 77                  		ld	(hl),a
(1) 1765/     722 : 23                  		inc 	hl
(1) 1766/     723 : 10 FC               		djnz	.nexttype
(1) 1767/     725 : DD E5               		push	ix
(1) 1768/     727 : 06 04               		ld	b,MAX_CHNLS
(1) 1769/     729 : AF                  		xor	a
(1) 1770/     72A : 11 20 00            		ld	de,20h
(1) 1771/     72D :                     .initchnls:
(1) 1772/     72D : DD 36 01 00         		ld	(ix+chnl_Type),0		; Note request
(1) 1773/     731 : DD 36 02 FE         		ld	(ix+chnl_Note),-2		; Set Note off
(1) 1774/     735 : DD 36 04 40         		ld	(ix+chnl_Vol),64		; Max volume
(1) 1775/     739 : DD 36 17 40         		ld	(ix+chnl_EfNewVol),64
(1) 1776/     73D : DD 36 0D C0         		ld	(ix+chnl_FmPan),0C0h
(1) 1777/     741 : DD 77 0B            		ld	(ix+chnl_InsType),a
(1) 1778/     744 : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1) 1779/     747 : DD 77 16            		ld	(ix+chnl_EfVolSlide),a
(1) 1780/     74A : DD 77 13            		ld	(ix+chnl_PsgVolEnv),a
(1) 1781/     74D : DD 77 14            		ld	(ix+chnl_PsgIndx),a
(1) 1782/     750 : DD 19               		add 	ix,de
(1) 1783/     752 : 10 D9               		djnz	.initchnls
(1) 1784/     754 : DD E1               		pop	ix
(1) 1785/     756 :                     		
(1) 1786/     756 :                     ; ------------------------------------
(1) 1787/     756 :                     
(1) 1788/     756 : DD E5               		push	ix
(1) 1789/     758 : 11 04 C0            		ld	de,SndBuff_UsedChnls_2
(1) 1790/     75B : 21 00 C0            		ld	hl,SndBuff_UsedChnls
(1) 1791/     75E : 06 04               		ld	b,MAX_CHNLS
(1) 1792/     760 :                     .nxtfmchnl:
(1) 1793/     760 : C5                  		push	bc
(1) 1794/     761 : 1A                  		ld	a,(de)
(1) 1795/     762 : 4E                  		ld	c,(hl)
(1) 1796/     763 : B1                  		or	c
(1) 1797/     764 : B7                  		or	a
(1) 1798/     765 : C2 76 07            		jp	nz,.dontvolfm
(1) 1799/     768 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1800/     76B : B7                  		or	a
(1) 1801/     76C : F2 76 07            		jp	p,.fm_shut
(1) 1802/     76F : F6 1F               		or	01Fh
(1) 1803/     771 : D3 7F               		out	(psg_ctrl),a
(1) 1804/     773 : C3 76 07            		jp	.dontvolfm
(1) 1805/     776 :                     .fm_shut:
(1) 1806/     776 :                     ; 		push 	de
(1) 1807/     776 :                     ; 		ld	d,28h
(1) 1808/     776 :                     ; 		ld	e,a
(1) 1809/     776 :                     ; 		call	SndDrv_FmSet_1
(1) 1810/     776 :                     ; 		pop	de
(1) 1811/     776 :                     .dontvolfm:
(1) 1812/     776 : 23                  		inc 	hl
(1) 1813/     777 : 13                  		inc 	de
(1) 1814/     778 : 01 20 00            		ld	bc,20h
(1) 1815/     77B : DD 09               		add 	ix,bc
(1) 1816/     77D : C1                  		pop	bc
(1) 1817/     77E : 10 E0               		djnz	.nxtfmchnl
(1) 1818/     780 : DD E1               		pop	ix
(1) 1819/     782 : C9                  		ret
(1) 1820/     783 :                     
(1) 1821/     783 :                     ; ---------------------------------------------
(1) 1822/     783 :                     ; FM send registers
(1) 1823/     783 :                     ; 
(1) 1824/     783 :                     ; Input:
(1) 1825/     783 :                     ; d - ctrl
(1) 1826/     783 :                     ; e - data
(1) 1827/     783 :                     ; c - channel
(1) 1828/     783 :                     ; ---------------------------------------------
(1) 1829/     783 :                     
(1) 1830/     783 :                     ; SndDrv_FmAutoSet:
(1) 1831/     783 :                     ; 		bit 	2,(ix+chnl_Chip)
(1) 1832/     783 :                     ; 		jp	nz,SndDrv_FmSet_2
(1) 1833/     783 :                     ; 		
(1) 1834/     783 :                     ; SndDrv_FmSet_1:
(1) 1835/     783 :                     ; 		ld	a,d
(1) 1836/     783 :                     ; 		ld	(Zym_ctrl_1),a
(1) 1837/     783 :                     ; 		nop
(1) 1838/     783 :                     ; 		ld	a,e
(1) 1839/     783 :                     ; 		ld	(Zym_data_1),a
(1) 1840/     783 :                     ; 		nop
(1) 1841/     783 :                     ; 		ret
(1) 1842/     783 :                     ; 
(1) 1843/     783 :                     ; SndDrv_FmSet_2:
(1) 1844/     783 :                     ; 		ld	a,d
(1) 1845/     783 :                     ; 		ld	(Zym_ctrl_2),a
(1) 1846/     783 :                     ; 		nop
(1) 1847/     783 :                     ; 		ld	a,e
(1) 1848/     783 :                     ; 		ld	(Zym_data_2),a
(1) 1849/     783 :                     ; 		nop
(1) 1850/     783 :                     ; 		ret
(1) 1851/     783 :                     
(1) 1852/     783 :                     ; ====================================================================
(1) 1853/     783 :                     ; fmFreq_List:	dw 644			; C-0
(1) 1854/     783 :                     ; 		dw 681
(1) 1855/     783 :                     ; 		dw 722
(1) 1856/     783 :                     ; 		dw 765
(1) 1857/     783 :                     ; 		dw 810
(1) 1858/     783 :                     ; 		dw 858
(1) 1859/     783 :                     ; 		dw 910
(1) 1860/     783 :                     ; 		dw 964
(1) 1861/     783 :                     ; 		dw 1021
(1) 1862/     783 :                     ; 		dw 1081
(1) 1863/     783 :                     ; 		dw 1146
(1) 1864/     783 :                     ; 		dw 1214
(1) 1865/     783 :                     ; 		dw 644|800h		; C-1
(1) 1866/     783 :                     ; 		dw 681|800h
(1) 1867/     783 :                     ; 		dw 722|800h
(1) 1868/     783 :                     ; 		dw 765|800h
(1) 1869/     783 :                     ; 		dw 810|800h
(1) 1870/     783 :                     ; 		dw 858|800h
(1) 1871/     783 :                     ; 		dw 910|800h
(1) 1872/     783 :                     ; 		dw 964|800h
(1) 1873/     783 :                     ; 		dw 1021|800h
(1) 1874/     783 :                     ; 		dw 1081|800h
(1) 1875/     783 :                     ; 		dw 1146|800h
(1) 1876/     783 :                     ; 		dw 1214|800h
(1) 1877/     783 :                     ; 		dw 644|1000h		; C-2
(1) 1878/     783 :                     ; 		dw 681|1000h
(1) 1879/     783 :                     ; 		dw 722|1000h
(1) 1880/     783 :                     ; 		dw 765|1000h
(1) 1881/     783 :                     ; 		dw 810|1000h
(1) 1882/     783 :                     ; 		dw 858|1000h
(1) 1883/     783 :                     ; 		dw 910|1000h
(1) 1884/     783 :                     ; 		dw 964|1000h
(1) 1885/     783 :                     ; 		dw 1021|1000h
(1) 1886/     783 :                     ; 		dw 1081|1000h
(1) 1887/     783 :                     ; 		dw 1146|1000h
(1) 1888/     783 :                     ; 		dw 1214|1000h
(1) 1889/     783 :                     ; 		dw 644|1800h		; C-3
(1) 1890/     783 :                     ; 		dw 681|1800h
(1) 1891/     783 :                     ; 		dw 722|1800h
(1) 1892/     783 :                     ; 		dw 765|1800h
(1) 1893/     783 :                     ; 		dw 810|1800h
(1) 1894/     783 :                     ; 		dw 858|1800h
(1) 1895/     783 :                     ; 		dw 910|1800h
(1) 1896/     783 :                     ; 		dw 964|1800h
(1) 1897/     783 :                     ; 		dw 1021|1800h
(1) 1898/     783 :                     ; 		dw 1081|1800h
(1) 1899/     783 :                     ; 		dw 1146|1800h
(1) 1900/     783 :                     ; 		dw 1214|1800h
(1) 1901/     783 :                     ; 		dw 644|2000h		; C-4
(1) 1902/     783 :                     ; 		dw 681|2000h
(1) 1903/     783 :                     ; 		dw 722|2000h
(1) 1904/     783 :                     ; 		dw 765|2000h
(1) 1905/     783 :                     ; 		dw 810|2000h
(1) 1906/     783 :                     ; 		dw 858|2000h
(1) 1907/     783 :                     ; 		dw 910|2000h
(1) 1908/     783 :                     ; 		dw 964|2000h
(1) 1909/     783 :                     ; 		dw 1021|2000h
(1) 1910/     783 :                     ; 		dw 1081|2000h
(1) 1911/     783 :                     ; 		dw 1146|2000h
(1) 1912/     783 :                     ; 		dw 1214|2000h
(1) 1913/     783 :                     ; 		dw 644|2800h		; C-5
(1) 1914/     783 :                     ; 		dw 681|2800h
(1) 1915/     783 :                     ; 		dw 722|2800h
(1) 1916/     783 :                     ; 		dw 765|2800h
(1) 1917/     783 :                     ; 		dw 810|2800h
(1) 1918/     783 :                     ; 		dw 858|2800h
(1) 1919/     783 :                     ; 		dw 910|2800h
(1) 1920/     783 :                     ; 		dw 964|2800h
(1) 1921/     783 :                     ; 		dw 1021|2800h
(1) 1922/     783 :                     ; 		dw 1081|2800h
(1) 1923/     783 :                     ; 		dw 1146|2800h
(1) 1924/     783 :                     ; 		dw 1214|2800h		
(1) 1925/     783 :                     ; 		dw 644|3000h		; C-6
(1) 1926/     783 :                     ; 		dw 681|3000h
(1) 1927/     783 :                     ; 		dw 722|3000h
(1) 1928/     783 :                     ; 		dw 765|3000h
(1) 1929/     783 :                     ; 		dw 810|3000h
(1) 1930/     783 :                     ; 		dw 858|3000h
(1) 1931/     783 :                     ; 		dw 910|3000h
(1) 1932/     783 :                     ; 		dw 964|3000h
(1) 1933/     783 :                     ; 		dw 1021|3000h
(1) 1934/     783 :                     ; 		dw 1081|3000h
(1) 1935/     783 :                     ; 		dw 1146|3000h
(1) 1936/     783 :                     ; 		dw 1214|3000h
(1) 1937/     783 :                     ; 		dw 644|3800h		; C-7
(1) 1938/     783 :                     ; 		dw 681|3800h
(1) 1939/     783 :                     ; 		dw 722|3800h
(1) 1940/     783 :                     ; 		dw 765|3800h
(1) 1941/     783 :                     ; 		dw 810|3800h
(1) 1942/     783 :                     ; 		dw 858|3800h
(1) 1943/     783 :                     ; 		dw 910|3800h
(1) 1944/     783 :                     ; 		dw 964|3800h
(1) 1945/     783 :                     ; 		dw 1021|3800h
(1) 1946/     783 :                     ; 		dw 1081|3800h
(1) 1947/     783 :                     ; 		dw 1146|3800h
(1) 1948/     783 :                     ; 		dw 1214|3800h
(1) 1949/     783 :                     
(1) 1950/     783 :                     psgFreq_List:
(1) 1951/     783 : FF FF               		dw -1		; C-0 $0
(1) 1952/     785 : FF FF               		dw -1
(1) 1953/     787 : FF FF               		dw -1
(1) 1954/     789 : FF FF               		dw -1
(1) 1955/     78B : FF FF               		dw -1
(1) 1956/     78D : FF FF               		dw -1
(1) 1957/     78F : FF FF               		dw -1
(1) 1958/     791 : FF FF               		dw -1
(1) 1959/     793 : FF FF               		dw -1
(1) 1960/     795 : FF FF               		dw -1
(1) 1961/     797 : FF FF               		dw -1
(1) 1962/     799 : FF FF               		dw -1
(1) 1963/     79B : FF FF               		dw -1		; C-1 $C
(1) 1964/     79D : FF FF               		dw -1
(1) 1965/     79F : FF FF               		dw -1
(1) 1966/     7A1 : FF FF               		dw -1
(1) 1967/     7A3 : FF FF               		dw -1
(1) 1968/     7A5 : FF FF               		dw -1
(1) 1969/     7A7 : FF FF               		dw -1
(1) 1970/     7A9 : FF FF               		dw -1
(1) 1971/     7AB : FF FF               		dw -1
(1) 1972/     7AD : FF FF               		dw -1
(1) 1973/     7AF : FF FF               		dw -1
(1) 1974/     7B1 : FF FF               		dw -1
(1) 1975/     7B3 : FF FF               		dw -1		; C-2 $18
(1) 1976/     7B5 : FF FF               		dw -1
(1) 1977/     7B7 : FF FF               		dw -1
(1) 1978/     7B9 : FF FF               		dw -1
(1) 1979/     7BB : FF FF               		dw -1
(1) 1980/     7BD : FF FF               		dw -1
(1) 1981/     7BF : FF FF               		dw -1
(1) 1982/     7C1 : FF FF               		dw -1
(1) 1983/     7C3 : FF FF               		dw -1
(1) 1984/     7C5 : FF FF               		dw -1
(1) 1985/     7C7 : FF FF               		dw -1
(1) 1986/     7C9 : FF FF               		dw -1
(1) 1987/     7CB : FF FF               		dw -1		; C-3 $24
(1) 1988/     7CD : FF FF               		dw -1
(1) 1989/     7CF : FF FF               		dw -1
(1) 1990/     7D1 : FF FF               		dw -1
(1) 1991/     7D3 : FF FF               		dw -1
(1) 1992/     7D5 : FF FF               		dw -1
(1) 1993/     7D7 : FF FF               		dw -1
(1) 1994/     7D9 : FF FF               		dw -1
(1) 1995/     7DB : FF FF               		dw -1
(1) 1996/     7DD : F8 03               		dw 3F8h
(1) 1997/     7DF : BF 03               		dw 3BFh
(1) 1998/     7E1 : 89 03               		dw 389h
(1) 1999/     7E3 : 56 03               		dw 356h		;C-4 30
(1) 2000/     7E5 : 26 03               		dw 326h
(1) 2001/     7E7 : F9 02               		dw 2F9h
(1) 2002/     7E9 : CE 02               		dw 2CEh
(1) 2003/     7EB : A5 02               		dw 2A5h
(1) 2004/     7ED : 80 02               		dw 280h
(1) 2005/     7EF : 5C 02               		dw 25Ch
(1) 2006/     7F1 : 3A 02               		dw 23Ah
(1) 2007/     7F3 : 1A 02               		dw 21Ah
(1) 2008/     7F5 : FB 01               		dw 1FBh
(1) 2009/     7F7 : DF 01               		dw 1DFh
(1) 2010/     7F9 : C4 01               		dw 1C4h
(1) 2011/     7FB : AB 01               		dw 1ABh		;C-5 3C
(1) 2012/     7FD : 93 01               		dw 193h
(1) 2013/     7FF : 7D 01               		dw 17Dh
(1) 2014/     801 : 67 01               		dw 167h
(1) 2015/     803 : 53 01               		dw 153h
(1) 2016/     805 : 40 01               		dw 140h
(1) 2017/     807 : 2E 01               		dw 12Eh
(1) 2018/     809 : 1D 01               		dw 11Dh
(1) 2019/     80B : 0D 01               		dw 10Dh
(1) 2020/     80D : FE 00               		dw 0FEh
(1) 2021/     80F : EF 00               		dw 0EFh
(1) 2022/     811 : E2 00               		dw 0E2h
(1) 2023/     813 : D6 00               		dw 0D6h		;C-6 48
(1) 2024/     815 : C9 00               		dw 0C9h
(1) 2025/     817 : BE 00               		dw 0BEh
(1) 2026/     819 : B4 00               		dw 0B4h
(1) 2027/     81B : A9 00               		dw 0A9h
(1) 2028/     81D : A0 00               		dw 0A0h
(1) 2029/     81F : 97 00               		dw 97h
(1) 2030/     821 : 8F 00               		dw 8Fh
(1) 2031/     823 : 87 00               		dw 87h
(1) 2032/     825 : 7F 00               		dw 7Fh
(1) 2033/     827 : 78 00               		dw 78h
(1) 2034/     829 : 71 00               		dw 71h
(1) 2035/     82B : 6B 00               		dw 6Bh		; C-7 54
(1) 2036/     82D : 65 00               		dw 65h
(1) 2037/     82F : 5F 00               		dw 5Fh
(1) 2038/     831 : 5A 00               		dw 5Ah
(1) 2039/     833 : 55 00               		dw 55h
(1) 2040/     835 : 50 00               		dw 50h
(1) 2041/     837 : 4B 00               		dw 4Bh
(1) 2042/     839 : 47 00               		dw 47h
(1) 2043/     83B : 43 00               		dw 43h
(1) 2044/     83D : 40 00               		dw 40h
(1) 2045/     83F : 3C 00               		dw 3Ch
(1) 2046/     841 : 39 00               		dw 39h
(1) 2047/     843 : 36 00               		dw 36h		; C-8 $60
(1) 2048/     845 : 33 00               		dw 33h
(1) 2049/     847 : 30 00               		dw 30h
(1) 2050/     849 : 2D 00               		dw 2Dh
(1) 2051/     84B : 2B 00               		dw 2Bh
(1) 2052/     84D : 28 00               		dw 28h
(1) 2053/     84F : 26 00               		dw 26h
(1) 2054/     851 : 24 00               		dw 24h
(1) 2055/     853 : 22 00               		dw 22h
(1) 2056/     855 : 20 00               		dw 20h
(1) 2057/     857 : 1F 00               		dw 1Fh
(1) 2058/     859 : 1D 00               		dw 1Dh
(1) 2059/     85B : 1B 00               		dw 1Bh		; C-9 $6C
(1) 2060/     85D : 1A 00               		dw 1Ah
(1) 2061/     85F : 18 00               		dw 18h
(1) 2062/     861 : 17 00               		dw 17h
(1) 2063/     863 : 16 00               		dw 16h
(1) 2064/     865 : 15 00               		dw 15h
(1) 2065/     867 : 13 00               		dw 13h
(1) 2066/     869 : 12 00               		dw 12h
(1) 2067/     86B : 11 00               		dw 11h
(1) 2068/     86D : 10 00                		dw 10h
(1) 2069/     86F : 09 00                		dw 9h
(1) 2070/     871 : 08 00                		dw 8h
(1) 2071/     873 : 00 00               		dw 0		; use +60 if using C-5 for tone 3 noise
(1) 2072/     875 :                     		
(1) 2073/     875 :                     ; wavFreq_List:	dw 100h		; C-0
(1) 2074/     875 :                     ; 		dw 100h
(1) 2075/     875 :                     ; 		dw 100h
(1) 2076/     875 :                     ; 		dw 100h
(1) 2077/     875 :                     ; 		dw 100h
(1) 2078/     875 :                     ; 		dw 100h
(1) 2079/     875 :                     ; 		dw 100h	
(1) 2080/     875 :                     ; 		dw 100h
(1) 2081/     875 :                     ; 		dw 100h
(1) 2082/     875 :                     ; 		dw 100h
(1) 2083/     875 :                     ; 		dw 100h
(1) 2084/     875 :                     ; 		dw 100h
(1) 2085/     875 :                     ; 		dw 100h		; C-1
(1) 2086/     875 :                     ; 		dw 100h
(1) 2087/     875 :                     ; 		dw 100h
(1) 2088/     875 :                     ; 		dw 100h
(1) 2089/     875 :                     ; 		dw 100h
(1) 2090/     875 :                     ; 		dw 100h
(1) 2091/     875 :                     ; 		dw 100h	
(1) 2092/     875 :                     ; 		dw 100h
(1) 2093/     875 :                     ; 		dw 100h
(1) 2094/     875 :                     ; 		dw 100h
(1) 2095/     875 :                     ; 		dw 100h
(1) 2096/     875 :                     ; 		dw 100h
(1) 2097/     875 :                     ; 		dw 100h		; C-2
(1) 2098/     875 :                     ; 		dw 100h
(1) 2099/     875 :                     ; 		dw 100h
(1) 2100/     875 :                     ; 		dw 100h
(1) 2101/     875 :                     ; 		dw 100h
(1) 2102/     875 :                     ; 		dw 100h
(1) 2103/     875 :                     ; 		dw 100h
(1) 2104/     875 :                     ; 		dw 100h
(1) 2105/     875 :                     ; 		dw 100h
(1) 2106/     875 :                     ; 		dw 100h
(1) 2107/     875 :                     ; 		dw 100h
(1) 2108/     875 :                     ; 		dw 03Bh
(1) 2109/     875 :                     ; 		dw 03Eh		; C-3 5512
(1) 2110/     875 :                     ; 		dw 043h		; C#3
(1) 2111/     875 :                     ; 		dw 046h		; D-3
(1) 2112/     875 :                     ; 		dw 049h		; D#3
(1) 2113/     875 :                     ; 		dw 04Eh		; E-3
(1) 2114/     875 :                     ; 		dw 054h		; F-3
(1) 2115/     875 :                     ; 		dw 058h		; F#3
(1) 2116/     875 :                     ; 		dw 05Eh		; G-3 8363 -17
(1) 2117/     875 :                     ; 		dw 063h		; G#3
(1) 2118/     875 :                     ; 		dw 068h		; A-3
(1) 2119/     875 :                     ; 		dw 070h		; A#3
(1) 2120/     875 :                     ; 		dw 075h		; B-3
(1) 2121/     875 :                     ; 		dw 07Fh		; C-4 11025 -12
(1) 2122/     875 :                     ; 		dw 088h		; C#4
(1) 2123/     875 :                     ; 		dw 08Fh		; D-4
(1) 2124/     875 :                     ; 		dw 097h		; D#4
(1) 2125/     875 :                     ; 		dw 0A0h		; E-4
(1) 2126/     875 :                     ; 		dw 0ADh		; F-4
(1) 2127/     875 :                     ; 		dw 0B5h		; F#4
(1) 2128/     875 :                     ; 		dw 0C0h		; G-4
(1) 2129/     875 :                     ; 		dw 0CCh		; G#4
(1) 2130/     875 :                     ; 		dw 0D7h		; A-4
(1) 2131/     875 :                     ; 		dw 0E7h		; A#4
(1) 2132/     875 :                     ; 		dw 0F0h		; B-4
(1) 2133/     875 :                     ; 		dw 100h		; C-5 22050
(1) 2134/     875 :                     ; 		dw 110h		; C#5
(1) 2135/     875 :                     ; 		dw 120h		; D-5
(1) 2136/     875 :                     ; 		dw 12Ch		; D#5
(1) 2137/     875 :                     ; 		dw 142h		; E-5
(1) 2138/     875 :                     ; 		dw 158h		; F-5
(1) 2139/     875 :                     ; 		dw 16Ah		; F#5 32000 +6
(1) 2140/     875 :                     ; 		dw 17Eh		; G-5
(1) 2141/     875 :                     ; 		dw 190h		; G#5
(1) 2142/     875 :                     ; 		dw 1ACh		; A-5
(1) 2143/     875 :                     ; 		dw 1C2h		; A#5
(1) 2144/     875 :                     ; 		dw 1E0h		; B-5
(1) 2145/     875 :                     ; 		dw 1F8h		; C-6 44100 +12
(1) 2146/     875 :                     ; 		dw 210h		; C#6
(1) 2147/     875 :                     ; 		dw 240h		; D-6
(1) 2148/     875 :                     ; 		dw 260h		; D#6
(1) 2149/     875 :                     ; 		dw 280h		; E-6
(1) 2150/     875 :                     ; 		dw 2A0h		; F-6
(1) 2151/     875 :                     ; 		dw 2D0h		; F#6
(1) 2152/     875 :                     ; 		dw 2F8h		; G-6
(1) 2153/     875 :                     ; 		dw 320h		; G#6
(1) 2154/     875 :                     ; 		dw 350h		; A-6
(1) 2155/     875 :                     ; 		dw 380h		; A#6
(1) 2156/     875 :                     ; 		dw 3C0h		; B-6
(1) 2157/     875 :                     ; 		dw 400h		; C-7 88200
(1) 2158/     875 :                     ; 		dw 100h
(1) 2159/     875 :                     ; 		dw 100h
(1) 2160/     875 :                     ; 		dw 100h
(1) 2161/     875 :                     ; 		dw 100h
(1) 2162/     875 :                     ; 		dw 100h
(1) 2163/     875 :                     ; 		dw 100h	
(1) 2164/     875 :                     ; 		dw 100h
(1) 2165/     875 :                     ; 		dw 100h
(1) 2166/     875 :                     ; 		dw 100h
(1) 2167/     875 :                     ; 		dw 100h
(1) 2168/     875 :                     ; 		dw 100h	
(1) 2169/     875 :                     ; 		dw 100h		; C-8
(1) 2170/     875 :                     ; 		dw 100h
(1) 2171/     875 :                     ; 		dw 100h
(1) 2172/     875 :                     ; 		dw 100h
(1) 2173/     875 :                     ; 		dw 100h
(1) 2174/     875 :                     ; 		dw 100h
(1) 2175/     875 :                     ; 		dw 100h	
(1) 2176/     875 :                     ; 		dw 100h
(1) 2177/     875 :                     ; 		dw 100h
(1) 2178/     875 :                     ; 		dw 100h
(1) 2179/     875 :                     ; 		dw 100h
(1) 2180/     875 :                     ; 		dw 100h	
(1) 2181/     875 :                     ; 		dw 100h		; C-9
(1) 2182/     875 :                     ; 		dw 100h
(1) 2183/     875 :                     ; 		dw 100h
(1) 2184/     875 :                     ; 		dw 100h
(1) 2185/     875 :                     ; 		dw 100h
(1) 2186/     875 :                     ; 		dw 100h
(1) 2187/     875 :                     ; 		dw 100h	
(1) 2188/     875 :                     ; 		dw 100h
(1) 2189/     875 :                     ; 		dw 100h
(1) 2190/     875 :                     ; 		dw 100h
(1) 2191/     875 :                     ; 		dw 100h
(1) 2192/     875 :                     ; 		dw 100h
(1) 2193/     875 :                     
(1) 2194/     875 :                     ; ====================================================================
(1) 2195/     875 :                     ; ----------------------------------------------------------------
(1) 2196/     875 :                     ; MUSIC DATA
(1) 2197/     875 :                     ; ----------------------------------------------------------------
(1) 2198/     875 :                     
(1) 2199/     875 :                     ; ----------------------------------------------------
(1) 2200/     875 :                     ; PSG Instruments
(1) 2201/     875 :                     ; ----------------------------------------------------
(1) 2202/     875 :                     
(1) 2203/     875 : 00                  PsgIns_00:	db 0
(1) 2204/     876 : FF                  		db -1
(1) 2205/     877 : 00 02 04 05 06      PsgIns_01:	db 0,2,4,5,6
(1) 2206/     87C : FF                  		db -1
(1) 2207/     87D : 00 0F               PsgIns_02:	db 0,15
(1) 2208/     87F : FF                  		db -1
(1) 2209/     880 : 00 00 01 01 02 02   PsgIns_03:	db 0,0,1,1,2,2,3,4,6,10,15
                    03 04 06 0A 0F 
(1) 2210/     88B : FF                  		db -1
(1) 2211/     88C : 00 02 04 06 0A      PsgIns_04:	db 0,2,4,6,10
(1) 2212/     891 : FF                  		db -1
(1) 2213/     892 :                     
     119/     892 :                     		include "system/video.asm"	; Video
(1)    1/     892 :                     ; ====================================================================
(1)    2/     892 :                     ; ----------------------------------------------------------------
(1)    3/     892 :                     ; Video
(1)    4/     892 :                     ; ----------------------------------------------------------------
(1)    5/     892 :                     
(1)    6/     892 :                     ; --------------------------------------------------------
(1)    7/     892 :                     ; Init Video
(1)    8/     892 :                     ; --------------------------------------------------------
(1)    9/     892 :                     
(1)   10/     892 :                     Video_Init:
(1)   11/     892 : CD E5 08            		call	Video_Clear
(1)   12/     895 :                      
(1)   13/     895 : 21 B2 0A            		ld      hl,list_vdpregs		; hl - data array for default register data
(1)   14/     898 : 11 7C C1            		ld	de,RAM_VdpCache		; de - VDP cache on RAM
(1)   15/     89B : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   16/     89D : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   17/     89F :                     .loop:
(1)   18/     89F : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   19/     8A0 : 12                  		ld	(de),a
(1)   20/     8A1 : 13                  		inc 	de
(1)   21/     8A2 : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   22/     8A4 : 79                  		ld	a,c			; Now set the register
(1)   23/     8A5 : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   24/     8A7 : 0C                  		inc	c			; Next register to use
(1)   25/     8A8 : 23                  		inc 	hl			; Next byte from the list
(1)   26/     8A9 : 10 F4               		djnz    .loop    		; decrement b and jump if b != 0
(1)   27/     8AB : C9                  		ret
(1)   28/     8AC :                     
(1)   29/     8AC :                     ; --------------------------------------------------------
(1)   30/     8AC :                     ; Video_InitPrint
(1)   31/     8AC :                     ; 
(1)   32/     8AC :                     ; Call this before using any on-screen text print
(1)   33/     8AC :                     ; 
(1)   34/     8AC :                     ; Graphics will be located at in 160h
(1)   35/     8AC :                     ; (ASCII starts at 140h)
(1)   36/     8AC :                     ; Uses palette line 0
(1)   37/     8AC :                     ; --------------------------------------------------------
(1)   38/     8AC :                     
(1)   39/     8AC :                     Video_InitPrint:
(1)   40/     8AC : 11 40 01            		ld	de,140h			; VRAM | Palette 2
(1)   41/     8AF : ED 53 7A C1         		ld	(RAM_VidPrntVram),de
(1)   42/     8B3 : 21 BD 0A            		ld	hl,Art_PrintFont
(1)   43/     8B6 : 11 00 0C            		ld	de,Art_PrintFont_e-Art_PrintFont
(1)   44/     8B9 : 01 60 01            		ld	bc,140h+20h
(1)   45/     8BC : CD 55 09            		call	Video_LoadArt
(1)   46/     8BF :                     		
(1)   47/     8BF : 21 BD 16            		ld	hl,Pal_PrintFont
(1)   48/     8C2 : 06 10               		ld	b,16
(1)   49/     8C4 : 16 00               		ld	d,0
(1)   50/     8C6 : CD 18 09            		call	Video_LoadPal		
(1)   51/     8C9 : 21 BD 16            		ld	hl,Pal_PrintFont
(1)   52/     8CC : 06 06               		ld	b,6
(1)   53/     8CE : 16 10               		ld	d,16
(1)   54/     8D0 : C3 18 09            		jp	Video_LoadPal
(1)   55/     8D3 :                     
(1)   56/     8D3 :                     ; ====================================================================
(1)   57/     8D3 :                     ; ----------------------------------------------------------------
(1)   58/     8D3 :                     ; Video subroutines
(1)   59/     8D3 :                     ; ----------------------------------------------------------------
(1)   60/     8D3 :                     
(1)   61/     8D3 :                     ; ---------------------------------
(1)   62/     8D3 :                     ; Video_Update
(1)   63/     8D3 :                     ; 
(1)   64/     8D3 :                     ; Update registers from cache
(1)   65/     8D3 :                     ; to VDP
(1)   66/     8D3 :                     ; ---------------------------------
(1)   67/     8D3 :                     
(1)   68/     8D3 :                     Video_Update:
(1)   69/     8D3 : 21 7C C1            		ld      hl,RAM_VdpCache		; hl - data array for default register data
(1)   70/     8D6 : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   71/     8D8 : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   72/     8DA :                     .loop:
(1)   73/     8DA : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   74/     8DB : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   75/     8DD : 79                  		ld	a,c			; Now set the register
(1)   76/     8DE : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   77/     8E0 : 0C                  		inc	c			; Next register to use
(1)   78/     8E1 : 23                  		inc 	hl			; Next byte from the list
(1)   79/     8E2 : 10 F6               		djnz    .loop    		; decrement b and jump if b != 0
(1)   80/     8E4 : C9                  		ret
(1)   81/     8E5 :                     
(1)   82/     8E5 :                     ; --------------------------------------------------------
(1)   83/     8E5 :                     ; Video_Clear
(1)   84/     8E5 :                     ; 
(1)   85/     8E5 :                     ; Clear everything on-screen
(1)   86/     8E5 :                     ;
(1)   87/     8E5 :                     ; Uses:
(1)   88/     8E5 :                     ; hl,bc,de
(1)   89/     8E5 :                     ; --------------------------------------------------------
(1)   90/     8E5 :                     
(1)   91/     8E5 :                     Video_Clear:
(1)   92/     8E5 : 06 10               		ld	b,16			; Clear pallete
(1)   93/     8E7 : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)   94/     8E9 : E6 1F               		and	1Fh
(1)   95/     8EB : C2 F0 08            		jp	nz,.mark_ms
(1)   96/     8EE : CB 20               		sla	b			; Length * 2
(1)   97/     8F0 :                     .mark_ms:
(1)   98/     8F0 : 21 00 C0            		ld	hl,0C000h
(1)   99/     8F3 : 0E BF               		ld	c,vdp_ctrl
(1)  100/     8F5 : ED 69               		out	(c),l
(1)  101/     8F7 : ED 61               		out	(c),h
(1)  102/     8F9 : AF                  		xor	a
(1)  103/     8FA : 0E BE               		ld	c,vdp_data
(1)  104/     8FC :                     .pal_clr:
(1)  105/     8FC : ED 79               		out	(c),a
(1)  106/     8FE : 10 FC               		djnz	.pal_clr
(1)  107/     900 :                     	
(1)  108/     900 :                     	; Clear ALL VRAM
(1)  109/     900 : 21 00 40            		ld	hl,4000h		; Clear screen
(1)  110/     903 : 0E BF               		ld	c,vdp_ctrl
(1)  111/     905 : ED 69               		out	(c),l
(1)  112/     907 : ED 61               		out	(c),h
(1)  113/     909 : 21 00 40            		ld	hl,4000h
(1)  114/     90C : 0E BE               		ld	c,vdp_data
(1)  115/     90E :                     .clrscrn:
(1)  116/     90E : AF                  		xor	a
(1)  117/     90F : ED 79               		out	(c),a
(1)  118/     911 : 2B                  		dec 	hl
(1)  119/     912 : 7C                  		ld	a,h
(1)  120/     913 : B5                  		or	l
(1)  121/     914 : C2 0E 09            		jp	nz,.clrscrn
(1)  122/     917 : C9                  		ret
(1)  123/     918 :                     		
(1)  124/     918 :                     ; --------------------------------------------------------
(1)  125/     918 :                     ; Video_LoadPal
(1)  126/     918 :                     ; 
(1)  127/     918 :                     ; Load GAME GEAR palette to VDP, auto-converts for
(1)  128/     918 :                     ; Master System
(1)  129/     918 :                     ;
(1)  130/     918 :                     ; NOTE: Color dots will be shown on screen
(1)  131/     918 :                     ; 
(1)  132/     918 :                     ; Input:
(1)  133/     918 :                     ; hl - Palette data
(1)  134/     918 :                     ; b - Number of colors
(1)  135/     918 :                     ; d - Start position
(1)  136/     918 :                     ;
(1)  137/     918 :                     ; Uses:
(1)  138/     918 :                     ; hl,bc,de
(1)  139/     918 :                     ; --------------------------------------------------------
(1)  140/     918 :                     
(1)  141/     918 :                     Video_LoadPal:
(1)  142/     918 : 0E BE               		ld	c,vdp_data
(1)  143/     91A : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)  144/     91C : E6 1F               		and	1Fh
(1)  145/     91E : C2 2F 09            		jp	nz,.mark_ms
(1)  146/     921 :                     
(1)  147/     921 :                     	; Game Gear palette
(1)  148/     921 : CB 20               		sla	b
(1)  149/     923 : CB 22               		sla	d
(1)  150/     925 : 7A                  		ld	a,d
(1)  151/     926 : D3 BF               		out	(vdp_ctrl),a
(1)  152/     928 : 3E C0               		ld	a,0C0h
(1)  153/     92A : D3 BF               		out	(vdp_ctrl),a
(1)  154/     92C : ED B3               		otir				; out (hl) to the port at C, increment hl, decrement b
(1)  155/     92E : C9                  		ret
(1)  156/     92F :                     
(1)  157/     92F :                     	; GG to MS convertion
(1)  158/     92F :                     .mark_ms:
(1)  159/     92F : 0E BF               		ld	c,vdp_ctrl
(1)  160/     931 : 3E C0               		ld	a,0C0h
(1)  161/     933 : ED 51               		out	(c),d
(1)  162/     935 : ED 79               		out	(c),a
(1)  163/     937 :                     .loopms:
(1)  164/     937 : 7E                  		ld	a,(hl)
(1)  165/     938 : CB 2F               		sra	a
(1)  166/     93A : CB 2F               		sra	a
(1)  167/     93C : E6 03               		and	11b
(1)  168/     93E : 57                  		ld	d,a
(1)  169/     93F : 7E                  		ld	a,(hl)
(1)  170/     940 : 1F                  		rra
(1)  171/     941 : 1F                  		rra
(1)  172/     942 : 1F                  		rra
(1)  173/     943 : 1F                  		rra
(1)  174/     944 : E6 0C               		and	1100b
(1)  175/     946 : 5F                  		ld	e,a
(1)  176/     947 : 23                  		inc	hl
(1)  177/     948 : 7E                  		ld	a,(hl)
(1)  178/     949 : 17                  		rla
(1)  179/     94A : 17                  		rla
(1)  180/     94B : E6 30               		and	110000b
(1)  181/     94D : B2                  		or	d
(1)  182/     94E : B3                  		or	e
(1)  183/     94F : 23                  		inc	hl
(1)  184/     950 :                     
(1)  185/     950 : D3 BE               		out	(vdp_data),a
(1)  186/     952 : 10 E3               		djnz	.loopms
(1)  187/     954 : C9                  		ret
(1)  188/     955 :                     
(1)  189/     955 :                     ; --------------------------------------------------------
(1)  190/     955 :                     ; Video_LoadArt
(1)  191/     955 :                     ; 
(1)  192/     955 :                     ; Load graphics to VRAM
(1)  193/     955 :                     ;
(1)  194/     955 :                     ; Input:
(1)  195/     955 :                     ; hl - Art data
(1)  196/     955 :                     ; de - Size
(1)  197/     955 :                     ; bc - VRAM (cell)
(1)  198/     955 :                     ; --------------------------------------------------------
(1)  199/     955 :                     
(1)  200/     955 :                     Video_LoadArt:
(1)  201/     955 : 78                  		ld	a,b		; Multiply VRAM >> 5
(1)  202/     956 : 0F                  		rrca
(1)  203/     957 : 0F                  		rrca
(1)  204/     958 : 0F                  		rrca
(1)  205/     959 : E6 20               		and	00100000b
(1)  206/     95B : 47                  		ld	b,a
(1)  207/     95C : 79                  		ld	a,c
(1)  208/     95D : 0F                  		rrca
(1)  209/     95E : 0F                  		rrca
(1)  210/     95F : 0F                  		rrca
(1)  211/     960 : E6 1F               		and	00011111b
(1)  212/     962 : B0                  		or	b
(1)  213/     963 : F6 40               		or	40h		; VRAM write mode
(1)  214/     965 : 47                  		ld	b,a
(1)  215/     966 : 79                  		ld	a,c
(1)  216/     967 : E6 07               		and	00000111b
(1)  217/     969 : 0F                  		rrca
(1)  218/     96A : 0F                  		rrca
(1)  219/     96B : 0F                  		rrca
(1)  220/     96C : 0E BF               		ld	c,vdp_ctrl
(1)  221/     96E : ED 79               		out	(c),a		; a - 00xx
(1)  222/     970 : ED 41               		out	(c),b		; b - xx00
(1)  223/     972 :                     
(1)  224/     972 :                     	; start
(1)  225/     972 : 0E BE               		ld	c,vdp_data
(1)  226/     974 :                     .loop:
(1)  227/     974 : ED A3               		outi
(1)  228/     976 : 1B                  		dec 	de
(1)  229/     977 : 7B                  		ld	a,e
(1)  230/     978 : B2                  		or	d
(1)  231/     979 : C2 74 09            		jp	nz,.loop
(1)  232/     97C : C9                  		ret
(1)  233/     97D :                     
(1)  234/     97D :                     ; --------------------------------------------------------
(1)  235/     97D :                     ; Video_Print
(1)  236/     97D :                     ; 
(1)  237/     97D :                     ; Print text on screen
(1)  238/     97D :                     ; Note: doesn't check for OOB
(1)  239/     97D :                     ; 
(1)  240/     97D :                     ; Input:
(1)  241/     97D :                     ; ix - String data
(1)  242/     97D :                     ; bc - X pos | Y pos
(1)  243/     97D :                     ; 
(1)  244/     97D :                     ; Uses
(1)  245/     97D :                     ; de,hl,iy
(1)  246/     97D :                     ; --------------------------------------------------------
(1)  247/     97D :                     
(1)  248/     97D :                     Video_Print:
(1)  249/     97D : C5                  		push	bc
(1)  250/     97E : D5                  		push	de
(1)  251/     97F : E5                  		push	hl
(1)  252/     980 : FD E5               		push	iy
(1)  253/     982 :                     
(1)  254/     982 : FD 21 4A C1         		ld	iy,RAM_VidPrntList
(1)  255/     986 : 21 00 38            		ld	hl,3800h
(1)  256/     989 : DB 00               		in	a,(gg_info)
(1)  257/     98B : E6 1F               		and	1Fh
(1)  258/     98D : C2 92 09            		jp	nz,.nocent
(1)  259/     990 : 2E CC               		ld	l,0CCh
(1)  260/     992 :                     .nocent:
(1)  261/     992 : 11 00 00            		ld	de,0
(1)  262/     995 : 79                  		ld	a,c		; Y pos left
(1)  263/     996 : 0F                  		rrca	
(1)  264/     997 : 0F                  		rrca
(1)  265/     998 : E6 07               		and	07h
(1)  266/     99A : 57                  		ld	d,a
(1)  267/     99B : 78                  		ld	a,b		; X pos + Y pos right YYXXXXXXb
(1)  268/     99C : E6 1F               		and	1Fh
(1)  269/     99E : 87                  		add 	a,a
(1)  270/     99F : 5F                  		ld	e,a
(1)  271/     9A0 : 79                  		ld	a,c
(1)  272/     9A1 : E6 03               		and	11b
(1)  273/     9A3 : 0F                  		rrca
(1)  274/     9A4 : 0F                  		rrca
(1)  275/     9A5 : B3                  		or	e
(1)  276/     9A6 : 5F                  		ld	e,a
(1)  277/     9A7 : 19                  		add 	hl,de
(1)  278/     9A8 :                     
(1)  279/     9A8 :                     	; X/Y pos goes here
(1)  280/     9A8 : 0E BF               		ld	c,vdp_ctrl
(1)  281/     9AA : 7C                  		ld	a,h
(1)  282/     9AB : F6 40               		or	40h
(1)  283/     9AD : 67                  		ld	h,a
(1)  284/     9AE : ED 69               		out	(c),l
(1)  285/     9B0 : ED 61               		out	(c),h
(1)  286/     9B2 : 11 00 00            		ld	de,0
(1)  287/     9B5 : 44                  		ld	b,h
(1)  288/     9B6 : 4D                  		ld	c,l
(1)  289/     9B7 :                     
(1)  290/     9B7 :                     	; bc - curr position for values
(1)  291/     9B7 :                     	; hl - curr position for jump
(1)  292/     9B7 :                     .loop:
(1)  293/     9B7 : DD 7E 00            		ld	a,(ix)
(1)  294/     9BA : DD 23               		inc	ix
(1)  295/     9BC : FE 0A               		cp	00Ah		; 00Ah - next line?
(1)  296/     9BE : CA DB 09            		jp	z,.next
(1)  297/     9C1 : FE 5C               		cp	05Ch		; 05Ch ("\") special?
(1)  298/     9C3 : CA E9 09            		jp	z,.special		
(1)  299/     9C6 : B7                  		or	a		; Zero?
(1)  300/     9C7 : CA 34 0A            		jp	z,.exit
(1)  301/     9CA : E5                  		push	hl
(1)  302/     9CB : 2A 7A C1            		ld	hl,(RAM_VidPrntVram)
(1)  303/     9CE : 5F                  		ld	e,a
(1)  304/     9CF : 19                  		add	hl,de
(1)  305/     9D0 : 7D                  		ld	a,l
(1)  306/     9D1 : D3 BE               		out	(vdp_data),a
(1)  307/     9D3 : 7C                  		ld	a,h
(1)  308/     9D4 : D3 BE               		out	(vdp_data),a
(1)  309/     9D6 : E1                  		pop	hl
(1)  310/     9D7 : 03                  		inc 	bc		; Next pos for values
(1)  311/     9D8 : 03                  		inc 	bc
(1)  312/     9D9 : 18 DC               		jr	.loop
(1)  313/     9DB :                     
(1)  314/     9DB :                     ; Next line
(1)  315/     9DB :                     .next:
(1)  316/     9DB : 11 40 00            		ld	de,40h		; TL add line
(1)  317/     9DE : 19                  		add 	hl,de
(1)  318/     9DF : 44                  		ld	b,h		; Save pos to value beam
(1)  319/     9E0 : 4D                  		ld	c,l
(1)  320/     9E1 : 7D                  		ld	a,l		; Reset position with new
(1)  321/     9E2 : D3 BF               		out	(vdp_ctrl),a
(1)  322/     9E4 : 7C                  		ld	a,h
(1)  323/     9E5 : D3 BF               		out	(vdp_ctrl),a
(1)  324/     9E7 : 18 CE               		jr	.loop
(1)  325/     9E9 :                     ; Special
(1)  326/     9E9 :                     .special:
(1)  327/     9E9 : DD 7E 00            		ld	a,(ix)
(1)  328/     9EC : DD 23               		inc	ix
(1)  329/     9EE : FE 62               		cp	"b"		; Byte?
(1)  330/     9F0 : CA 18 0A            		jp	z,.breq
(1)  331/     9F3 : FE 77               		cp	"w"		; Word?
(1)  332/     9F5 : C2 B7 09            		jp	nz,.loop
(1)  333/     9F8 :                     ; word
(1)  334/     9F8 : FD 71 00            		ld	(iy),c		; Set address
(1)  335/     9FB : FD 70 01            		ld	(iy+1),b
(1)  336/     9FE : FD 36 02 02         		ld	(iy+2),2	; Set request
(1)  337/     A02 : FD 23               		inc 	iy		; Next entry
(1)  338/     A04 : FD 23               		inc 	iy
(1)  339/     A06 : FD 23               		inc 	iy
(1)  340/     A08 : 03                  		inc 	bc		; Four cells
(1)  341/     A09 : 03                  		inc 	bc
(1)  342/     A0A : 03                  		inc 	bc
(1)  343/     A0B : 03                  		inc 	bc
(1)  344/     A0C : 03                  		inc 	bc
(1)  345/     A0D : 03                  		inc 	bc
(1)  346/     A0E : 03                  		inc 	bc
(1)  347/     A0F : 03                  		inc 	bc
(1)  348/     A10 : 79                  		ld	a,c
(1)  349/     A11 : D3 BF               		out	(vdp_ctrl),a
(1)  350/     A13 : 78                  		ld	a,b
(1)  351/     A14 : D3 BF               		out	(vdp_ctrl),a
(1)  352/     A16 : 18 9F               		jr	.loop
(1)  353/     A18 :                     ; byte
(1)  354/     A18 :                     .breq:
(1)  355/     A18 : FD 71 00            		ld	(iy),c		; Set address
(1)  356/     A1B : FD 70 01            		ld	(iy+1),b
(1)  357/     A1E : FD 36 02 01         		ld	(iy+2),1	; Set request
(1)  358/     A22 : FD 23               		inc 	iy		; Next entry
(1)  359/     A24 : FD 23               		inc 	iy
(1)  360/     A26 : FD 23               		inc 	iy
(1)  361/     A28 : 03                  		inc 	bc		; Two cells
(1)  362/     A29 : 03                  		inc 	bc
(1)  363/     A2A : 03                  		inc 	bc
(1)  364/     A2B : 03                  		inc 	bc
(1)  365/     A2C : 79                  		ld	a,c
(1)  366/     A2D : D3 BF               		out	(vdp_ctrl),a
(1)  367/     A2F : 78                  		ld	a,b
(1)  368/     A30 : D3 BF               		out	(vdp_ctrl),a
(1)  369/     A32 : 18 83               		jr	.loop
(1)  370/     A34 :                     .exit:
(1)  371/     A34 :                     
(1)  372/     A34 :                     ; ------------------------------------------------
(1)  373/     A34 :                     ; Print values
(1)  374/     A34 :                     ; check MAX_PRNTLIST for maximum values
(1)  375/     A34 :                     ; 
(1)  376/     A34 :                     ; vvvv tt
(1)  377/     A34 :                     ; v - vdp pos
(1)  378/     A34 :                     ; t - value type
(1)  379/     A34 :                     ; ------------------------------------------------
(1)  380/     A34 :                     
(1)  381/     A34 : FD 21 4A C1         		ld	iy,RAM_VidPrntList
(1)  382/     A38 :                     .loopval:
(1)  383/     A38 : FD 7E 00            		ld	a,(iy)
(1)  384/     A3B : FD 46 01            		ld	b,(iy+1)
(1)  385/     A3E : B7                  		or	a
(1)  386/     A3F : CA 7C 0A            		jp	z,.endval
(1)  387/     A42 : 4F                  		ld	c,a
(1)  388/     A43 :                     
(1)  389/     A43 :                     	; Check byte
(1)  390/     A43 : FD 7E 02            		ld	a,(iy+2)
(1)  391/     A46 : FE 01               		cp	1
(1)  392/     A48 : C2 54 0A            		jp	nz,.nobyte
(1)  393/     A4B : DD 6E 00            		ld	l,(ix)
(1)  394/     A4E : DD 66 01            		ld	h,(ix+1)
(1)  395/     A51 : CD 82 0A            		call	.put_byte
(1)  396/     A54 :                     .nobyte:
(1)  397/     A54 : FD 7E 02            		ld	a,(iy+2)
(1)  398/     A57 : FE 02               		cp	2
(1)  399/     A59 : C2 69 0A            		jp	nz,.noword
(1)  400/     A5C : DD 6E 00            		ld	l,(ix)
(1)  401/     A5F : DD 66 01            		ld	h,(ix+1)
(1)  402/     A62 : CD 82 0A            		call	.put_byte
(1)  403/     A65 : 23                  		inc 	hl
(1)  404/     A66 : CD 82 0A            		call	.put_byte
(1)  405/     A69 :                     .noword:
(1)  406/     A69 :                     
(1)  407/     A69 : AF                  		xor	a		; Clear current entry 
(1)  408/     A6A : FD 77 00            		ld	(iy),a		; and move to next
(1)  409/     A6D : FD 77 01            		ld	(iy+1),a
(1)  410/     A70 : FD 77 02            		ld	(iy+2),a
(1)  411/     A73 : FD 23               		inc 	iy
(1)  412/     A75 : FD 23               		inc 	iy
(1)  413/     A77 : FD 23               		inc 	iy
(1)  414/     A79 : C3 38 0A            		jp	.loopval
(1)  415/     A7C :                     .endval:	
(1)  416/     A7C : FD E1               		pop	iy
(1)  417/     A7E : E1                  		pop	hl
(1)  418/     A7F : D1                  		pop	de
(1)  419/     A80 : C1                  		pop	bc
(1)  420/     A81 : C9                  		ret
(1)  421/     A82 :                     
(1)  422/     A82 :                     ; draw nibble
(1)  423/     A82 :                     .put_byte:
(1)  424/     A82 : 7E                  		ld	a,(hl)
(1)  425/     A83 : 0F                  		rrca
(1)  426/     A84 : 0F                  		rrca
(1)  427/     A85 : 0F                  		rrca
(1)  428/     A86 : 0F                  		rrca
(1)  429/     A87 : CD 8B 0A            		call	.do_nibbl
(1)  430/     A8A : 7E                  		ld	a,(hl)
(1)  431/     A8B :                     .do_nibbl:
(1)  432/     A8B : E5                  		push	hl
(1)  433/     A8C : 21 00 00            		ld	hl,0
(1)  434/     A8F : E6 0F               		and 	0Fh
(1)  435/     A91 : FE 0A               		cp	0Ah
(1)  436/     A93 : DA 98 0A            		jp	c,.noadd
(1)  437/     A96 : C6 07               		add 	a,7
(1)  438/     A98 :                     .noadd:
(1)  439/     A98 : 6F                  		ld	l,a
(1)  440/     A99 : ED 5B 7A C1         		ld	de,(RAM_VidPrntVram)	; Start at font VRAM
(1)  441/     A9D : 19                  		add 	hl,de
(1)  442/     A9E : 11 30 00            		ld	de,30h			; at char 0
(1)  443/     AA1 : 19                  		add 	hl,de
(1)  444/     AA2 : 79                  		ld	a,c			; mark vdp pos
(1)  445/     AA3 : D3 BF               		out	(vdp_ctrl),a
(1)  446/     AA5 : 78                  		ld	a,b
(1)  447/     AA6 : D3 BF               		out	(vdp_ctrl),a
(1)  448/     AA8 : 03                  		inc 	bc			; next layer cell
(1)  449/     AA9 : 03                  		inc 	bc
(1)  450/     AAA : 7D                  		ld	a,l			; put vram value
(1)  451/     AAB : D3 BE               		out 	(vdp_data),a
(1)  452/     AAD : 7C                  		ld	a,h
(1)  453/     AAE : D3 BE               		out	(vdp_data),a
(1)  454/     AB0 : E1                  		pop	hl
(1)  455/     AB1 : C9                  		ret
(1)  456/     AB2 :                     		
(1)  457/     AB2 :                     ; ====================================================================
(1)  458/     AB2 :                     ; --------------------------------------------------------
(1)  459/     AB2 :                     ; Video data
(1)  460/     AB2 :                     ; --------------------------------------------------------
(1)  461/     AB2 :                     
(1)  462/     AB2 :                     list_vdpregs:
(1)  463/     AB2 : 06                  		db      00000110b       ; ---H---- | H-Hint
(1)  464/     AB3 : E2                  		db      11100010b       ; -DV---W- | D-Display ON / V-Vint / W-8x16 sprites
(1)  465/     AB4 : FF                  		db      11111111b       ;
(1)  466/     AB5 : FF                  		db      11111111b       ;
(1)  467/     AB6 : FF                  		db      11111111b       ;
(1)  468/     AB7 : FF                  		db      11111111b       ;
(1)  469/     AB8 : 04                  		db      00000100b       ; -----S-- | S-Sprite VRAM Add ($100)
(1)  470/     AB9 : 00                  		db      00000000b       ;
(1)  471/     ABA : 00                  		db      00000000b       ;
(1)  472/     ABB : 00                  		db      00000000b       ;
(1)  473/     ABC : 00                  		db      00000000b       ;
(1)  474/     ABD :                     
(1)  475/     ABD :                     Art_PrintFont:	binclude "system/data/art_prntfont.bin"
(1)  476/    16BD :                     Art_PrintFont_e:
(1)  477/    16BD :                     Pal_PrintFont:;	binclude "system/data/pal_prntfont.bin"
(1)  478/    16BD : 00 00 EE 0E CC 0C   		dw 0000h,0EEEh,0CCCh,0AAAh,0888h,0444h,000Eh,0008h
                    AA 0A 88 08 44 04 
                    0E 00 08 00 
(1)  479/    16CD : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  480/    16DD :                     
     120/    16DD :                     		include "system/setup.asm"	; System
(1)    1/    16DD :                     ; ====================================================================
(1)    2/    16DD :                     ; ----------------------------------------------------------------
(1)    3/    16DD :                     ; System
(1)    4/    16DD :                     ; ----------------------------------------------------------------
(1)    5/    16DD :                     
(1)    6/    16DD :                     ; --------------------------------------------------------
(1)    7/    16DD :                     ; Init System
(1)    8/    16DD :                     ; --------------------------------------------------------
(1)    9/    16DD :                     
(1)   10/    16DD :                     System_Init:
(1)   11/    16DD :                     	;Clear WORK RAM ($C001 to $DFEF)
(1)   12/    16DD : 21 00 C0            		ld      hl,0C000h  		; hl - System RAM
(1)   13/    16E0 : 11 01 C0            		ld      de,0C001h  		; de - (System RAM + 1)
(1)   14/    16E3 : 01 00 10            		ld      bc,01000h  		; bc - Bytes to copy
(1)   15/    16E6 : 36 00               		ld      (hl),0			; Set $00 at first byte of RAM before copying bytes
(1)   16/    16E8 : ED B0               		ldir				; read (RAM), write to (RAM+1), increment de, hl and decrement bc
(1)   17/    16EA :                     
(1)   18/    16EA : DB 00               		in	a,(gg_info)		; Read Game Gear extra bits
(1)   19/    16EC : E6 1F               		and	1Fh			; only grab 5 bits
(1)   20/    16EE : C2 FC 16            		jp	nz,.not_gg		; If not Zero, don't set extra gg regs
(1)   21/    16F1 : 3E FF               		ld      a,11111111b   		; all ones
(1)   22/    16F3 : D3 02               		out     (gg_ext_bitdir),a   	; set i/o port 2h (read/write) to all ones
(1)   23/    16F5 : D3 06                               out 	(gg_stereo),a		; gg psg stereo full
(1)   24/    16F7 : AF                  		xor     a         		; set a to zero
(1)   25/    16F8 : D3 01               		out     (gg_ext_comm),a   	; set i/o port 1h to zero
(1)   26/    16FA : D3 05               		out     (gg_serial),a   	; set i/o port 5h to zero
(1)   27/    16FC :                     .not_gg:
(1)   28/    16FC : AF                  		xor     a         		; set a to zero
(1)   29/    16FD : 32 FC FF            		ld      (bank_ctrl),a		; set bank control register to all zeros
(1)   30/    1700 : 32 FD FF            		ld      (bank_0),a		; set bank reg #0 to all zeros
(1)   31/    1703 : 3C                  		inc	a
(1)   32/    1704 : 32 FE FF            		ld      (bank_1),a		; set bank reg #1 to 0001
(1)   33/    1707 : 3C                  		inc	a
(1)   34/    1708 : 32 FF FF            		ld      (bank_2),a		; set bank reg #2 to 0010
(1)   35/    170B :                     		
(1)   36/    170B : 3E C3               		ld	a,0C3h
(1)   37/    170D : 32 4F C2            		ld	(RAM_VBlank),a
(1)   38/    1710 : 32 52 C2            		ld	(RAM_HBlank),a
(1)   39/    1713 : 01 67 00            		ld	bc,MS_VInt
(1)   40/    1716 : 11 86 00            		ld	de,MS_HInt
(1)   41/    1719 : ED 43 50 C2         		ld	(RAM_VBlank+1),bc
(1)   42/    171D : ED 53 53 C2         		ld	(RAM_HBlank+1),de
(1)   43/    1721 : C9                  		ret
(1)   44/    1722 :                     
(1)   45/    1722 :                     ; ====================================================================
(1)   46/    1722 :                     ; ----------------------------------------------------------------
(1)   47/    1722 :                     ; System subroutines
(1)   48/    1722 :                     ; ----------------------------------------------------------------
(1)   49/    1722 :                     
(1)   50/    1722 :                     ; --------------------------------------------------------
(1)   51/    1722 :                     ; System_VSync
(1)   52/    1722 :                     ; 
(1)   53/    1722 :                     ; Wait for VBlank
(1)   54/    1722 :                     ; --------------------------------------------------------
(1)   55/    1722 :                     
(1)   56/    1722 :                     System_VSync:
(1)   57/    1722 : DB BF               		in	a,(vdp_ctrl)		; Read VDP Control
(1)   58/    1724 : E6 80               		and	10000000b		; Get VBlank bit
(1)   59/    1726 : CA 22 17            		jp	z,System_VSync		; if Zero, keep waiting
(1)   60/    1729 : C9                  		ret
(1)   61/    172A :                     		
(1)   62/    172A :                     ; --------------------------------------------------------
(1)   63/    172A :                     ; System_Input
(1)   64/    172A :                     ; 
(1)   65/    172A :                     ; WARNING: Don't call this outside of VBLANK
(1)   66/    172A :                     ; (call System_VSync first)
(1)   67/    172A :                     ; 
(1)   68/    172A :                     ; Uses:
(1)   69/    172A :                     ; hl,bc
(1)   70/    172A :                     ; --------------------------------------------------------
(1)   71/    172A :                     
(1)   72/    172A :                     System_Input:
(1)   73/    172A :                      
(1)   74/    172A :                     ; ---------------------------
(1)   75/    172A :                     ; Read current controllers
(1)   76/    172A :                     ; ---------------------------
(1)   77/    172A :                     
(1)   78/    172A : 21 4B C2            		ld	hl,RAM_InputData	; hl - Input data stored in RAM
(1)   79/    172D :                     
(1)   80/    172D :                     	; Controller 1
(1)   81/    172D : 06 00               		ld	b,0			; b = 0
(1)   82/    172F : DB 00               		in	a,(gg_info)		; Read GG port 00h (START button and region)
(1)   83/    1731 : 4F                  		ld	c,a			; Copy result to c
(1)   84/    1732 : E6 1F               		and	1Fh			; only read right 5 bits
(1)   85/    1734 : C2 3C 17            		jp	nz,.no_ggstrt		; if != 0, skip this
(1)   86/    1737 : 79                  		ld	a,c			; move our copy to a
(1)   87/    1738 : 2F                  		cpl				; reverse bits
(1)   88/    1739 : E6 80               		and	80h			; only read the MSB
(1)   89/    173B : 47                  		ld	b,a			; b = Start button bit press
(1)   90/    173C :                     .no_ggstrt:
(1)   91/    173C : DB DC               		in      a,(joypad_1)		; Read controller 1 port
(1)   92/    173E : 2F                  		cpl				; Reverse bits
(1)   93/    173F : E6 3F               		and	00111111b		; Only grab 0012RLDU 
(1)   94/    1741 : B0                  		or	b			; Merge GG start button if available S012RLDU
(1)   95/    1742 : 47                  		ld	b,a			; Copy input from a to b
(1)   96/    1743 : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)   97/    1744 : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)   98/    1745 : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)   99/    1746 : 23                  		inc	hl			; Next RAM byte
(1)  100/    1747 : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  101/    1748 : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  102/    1749 : 23                  		inc 	hl			; Next controller
(1)  103/    174A :                      
(1)  104/    174A :                     	; Controller 2
(1)  105/    174A : DB DC               		in      a,(joypad_1)		; Read controller 1 port again (for P2's Down/Up)
(1)  106/    174C : 2F                  		cpl				; Reverse bits, DU??????
(1)  107/    174D : 07                  		rlca				; U?????D
(1)  108/    174E : 07                  		rlca				; ?????DU
(1)  109/    174F : E6 03               		and	11b			; 00000DU
(1)  110/    1751 : 47                  		ld	b,a			; Save copy to b
(1)  111/    1752 : DB DD               		in      a,(joypad_2)		; Read controller 2 port (for 2/1/Right/Left)
(1)  112/    1754 : 2F                  		cpl				; Reverse bits, ????21RL
(1)  113/    1755 : 07                  		rlca				; ???21RL?
(1)  114/    1756 : 07                  		rlca				; ??21RL??
(1)  115/    1757 : E6 3C               		and	00111100b		; 0021RL00
(1)  116/    1759 : B0                  		or	b			; Combine results: 0021RLDU
(1)  117/    175A : 47                  		ld	b,a			; Copy input from a to b
(1)  118/    175B : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)  119/    175C : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)  120/    175D : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)  121/    175E : 23                  		inc	hl			; Next RAM byte
(1)  122/    175F : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  123/    1760 : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  124/    1761 : C9                  		ret
(1)  125/    1762 :                     		
(1)  126/    1762 :                     ; ====================================================================
(1)  127/    1762 :                     ; ----------------------------------------------------------------
(1)  128/    1762 :                     ; System data
(1)  129/    1762 :                     ; ----------------------------------------------------------------
(1)  130/    1762 :                     
     121/    1762 :                     
     122/    1762 :                     ; ====================================================================
     123/    1762 :                     ; ----------------------------------------------------------------
     124/    1762 :                     ; MS Start
     125/    1762 :                     ; ----------------------------------------------------------------
     126/    1762 :                     
     127/    1762 :                     		align 400h
     128/    1800 :                     MS_Init:
     129/    1800 : 31 F0 DF            		ld	sp,0DFF0h		; Stacks starts at 0DFF0h, goes backwards
     130/    1803 : CD DD 16            		call	System_Init		; Init System
     131/    1806 : CD 89 00            		call	Sound_Init		; Init Sound
     132/    1809 : CD 92 08            		call	Video_Init		; Init Video
     133/    180C :                     
     134/    180C :                     ; ================================================================
     135/    180C :                     ; ------------------------------------------------------------
     136/    180C :                     ; Your code starts here
     137/    180C :                     ; ------------------------------------------------------------
     138/    180C :                     
     139/    180C :                     		align 400h
     140/    1C00 :                     CodeBank0:
     141/    1C00 :                     		include	"game/code.asm"
(1)    1/    1C00 :                     ; ====================================================================
(1)    2/    1C00 :                     ; ----------------------------------------------------------------
(1)    3/    1C00 :                     ; Structs
(1)    4/    1C00 :                     ; ----------------------------------------------------------------
(1)    5/    1C00 :                     
(1)    6/    1C00 : (MACRO)             		struct 0
(1)    6/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)    6/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)    6/    1C00 :                                     dephase
(1)    6/       0 :                                     phase 0
(1)    7/       0 :                     plyr_x		ds 2
(1)    8/       2 :                     plyr_y		ds 2
(1)    9/       4 :                     plyr_frame	ds 1
(1)   10/       5 :                     plyr_ani_timer	ds 1
(1)   11/       6 :                     plyr_ani_cntr 	ds 1
(1)   12/       7 : (MACRO)             		finish
(1)   12/       0 :                                     !org GLBL_LASTORG
(1)   12/    1C00 :                                     phase GLBL_LASTPC
(1)   13/    1C00 :                     
(1)   14/    1C00 : (MACRO)             		struct RAM_Local
(1)   14/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)   14/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)   14/    1C00 :                                     dephase
(1)   14/    C255 :                                     phase RAM_LOCAL
(1)   15/    C255 :                     RAM_CurrPlySlot	ds 1
(1)   16/    C256 :                     RAM_CurrTrckId	ds 2
(1)   17/    C258 :                     RAM_CurrTrckVol	ds 2
(1)   18/    C25A : (MACRO)             		finish
(1)   18/    C255 :                                     !org GLBL_LASTORG
(1)   18/    1C00 :                                     phase GLBL_LASTPC
(1)   19/    1C00 :                     
(1)   20/    1C00 :                     ; ====================================================================
(1)   21/    1C00 :                     ; ----------------------------------------------------------------
(1)   22/    1C00 :                     ; Main
(1)   23/    1C00 :                     ; ----------------------------------------------------------------
(1)   24/    1C00 :                     
(1)   25/    1C00 : CD AC 08            		call	Video_InitPrint
(1)   26/    1C03 :                     
(1)   27/    1C03 : 3E 00               		ld	a,0
(1)   28/    1C05 : DD 21 16 1D         		ld	ix,str_Test
(1)   29/    1C09 : 01 03 02            		ld	bc,0203h
(1)   30/    1C0C : CD 7D 09            		call	Video_Print
(1)   31/    1C0F : 21 60 1D            		ld	hl,pal_FontNew
(1)   32/    1C12 : 06 20               		ld	b,32
(1)   33/    1C14 : 16 00               		ld	d,0
(1)   34/    1C16 : CD 18 09            		call	Video_LoadPal
(1)   35/    1C19 :                     		
(1)   36/    1C19 : AF                  		xor	a
(1)   37/    1C1A : 32 55 C2            		ld	(RAM_CurrPlySlot),a
(1)   38/    1C1D : CD 9C 1C            		call	.show_values
(1)   39/    1C20 :                     
(1)   40/    1C20 :                     .loop:
(1)   41/    1C20 : CD 22 17            		call	System_VSync
(1)   42/    1C23 : CD 2A 17            		call	System_Input
(1)   43/    1C26 : CD BC 00            		call	Sound_Run
(1)   44/    1C29 :                     
(1)   45/    1C29 : 3A 4B C2            		ld	a,(Controller_1+on_hold)
(1)   46/    1C2C : 47                  		ld	b,a
(1)   47/    1C2D : 3A 4C C2            		ld	a,(Controller_1+on_press)
(1)   48/    1C30 : 4F                  		ld	c,a
(1)   49/    1C31 : AF                  		xor	a
(1)   50/    1C32 :                     
(1)   51/    1C32 :                     
(1)   52/    1C32 :                     
(1)   53/    1C32 : 21 56 C2            		ld	hl,RAM_CurrTrckId
(1)   54/    1C35 : 3A 55 C2            		ld	a,(RAM_CurrPlySlot)
(1)   55/    1C38 : B7                  		or	a
(1)   56/    1C39 : CA 3D 1C            		jp	z,.slot1noad
(1)   57/    1C3C : 23                  		inc 	hl
(1)   58/    1C3D :                     .slot1noad:
(1)   59/    1C3D : 16 01               		ld	d,1
(1)   60/    1C3F : CB 59               		bit	bitJoyRight,c
(1)   61/    1C41 : C4 6B 1C            		call	nz,.modify_track
(1)   62/    1C44 : 16 FF               		ld	d,-1
(1)   63/    1C46 : CB 51               		bit	bitJoyLeft,c
(1)   64/    1C48 : C4 6B 1C            		call	nz,.modify_track
(1)   65/    1C4B : CB 41               		bit	bitJoyUp,c
(1)   66/    1C4D : C4 71 1C            		call	nz,.modify_slot
(1)   67/    1C50 : 16 01               		ld	d,1
(1)   68/    1C52 : CB 49               		bit	bitJoyDown,c
(1)   69/    1C54 : C4 71 1C            		call	nz,.modify_slot
(1)   70/    1C57 :                     
(1)   71/    1C57 : CB 69               		bit	bitJoy2,c		; c is lost after this
(1)   72/    1C59 : C4 7B 1C            		call	nz,.play_track
(1)   73/    1C5C : CB 61               		bit	bitJoy1,c
(1)   74/    1C5E : C4 96 1C            		call	nz,.stop_track
(1)   75/    1C61 :                     
(1)   76/    1C61 : 3A 4C C2            		ld	a,(Controller_1+on_press)	; update values on any press
(1)   77/    1C64 : B7                  		or	a
(1)   78/    1C65 : C4 9C 1C            		call	nz,.show_values
(1)   79/    1C68 : C3 20 1C            		jp	.loop
(1)   80/    1C6B :                     
(1)   81/    1C6B :                     ; ====================================================================
(1)   82/    1C6B :                     ; ----------------------------------------------------------------
(1)   83/    1C6B :                     ; Subs
(1)   84/    1C6B :                     ; ----------------------------------------------------------------
(1)   85/    1C6B :                     
(1)   86/    1C6B :                     ; hl - RAM_CurrTrckId
(1)   87/    1C6B :                     .modify_track:
(1)   88/    1C6B : 7E                  		ld	a,(hl)
(1)   89/    1C6C : 82                  		add 	a,d
(1)   90/    1C6D : E6 03               		and	00000011b			; limit
(1)   91/    1C6F : 77                  		ld	(hl),a
(1)   92/    1C70 : C9                  		ret
(1)   93/    1C71 :                     
(1)   94/    1C71 :                     .modify_slot:
(1)   95/    1C71 : 3A 55 C2            		ld	a,(RAM_CurrPlySlot)
(1)   96/    1C74 : 82                  		add 	a,d
(1)   97/    1C75 : E6 01               		and	00000001b			; limit
(1)   98/    1C77 : 32 55 C2            		ld	(RAM_CurrPlySlot),a
(1)   99/    1C7A : C9                  		ret
(1)  100/    1C7B :                     		
(1)  101/    1C7B :                     .play_track:
(1)  102/    1C7B : 7E                  		ld	a,(hl)
(1)  103/    1C7C : 11 00 00            		ld	de,0
(1)  104/    1C7F : 87                  		add 	a,a
(1)  105/    1C80 : 87                  		add 	a,a
(1)  106/    1C81 : 87                  		add	a,a
(1)  107/    1C82 : 87                  		add	a,a
(1)  108/    1C83 : 5F                  		ld	e,a
(1)  109/    1C84 : 21 A0 1D            		ld	hl,trackData_test
(1)  110/    1C87 : 19                  		add 	hl,de
(1)  111/    1C88 : 46                  		ld	b,(hl)
(1)  112/    1C89 : 23                  		inc 	hl
(1)  113/    1C8A : 4E                  		ld	c,(hl)
(1)  114/    1C8B : 23                  		inc 	hl
(1)  115/    1C8C : 56                  		ld	d,(hl)
(1)  116/    1C8D : 23                  		inc 	hl
(1)  117/    1C8E : 5E                  		ld	e,(hl)
(1)  118/    1C8F : 23                  		inc 	hl
(1)  119/    1C90 : 3A 55 C2            		ld	a,(RAM_CurrPlySlot)
(1)  120/    1C93 : C3 D3 00            		jp	Sound_SetTrack
(1)  121/    1C96 :                     
(1)  122/    1C96 :                     .stop_track:
(1)  123/    1C96 : 3A 55 C2            		ld	a,(RAM_CurrPlySlot)
(1)  124/    1C99 : C3 0D 01            		jp	Sound_StopTrack
(1)  125/    1C9C :                     	
(1)  126/    1C9C :                     ; show values
(1)  127/    1C9C :                     .show_values:
(1)  128/    1C9C : 11 70 09            		ld	de,140h+30h|800h
(1)  129/    1C9F : 3A 55 C2            		ld	a,(RAM_CurrPlySlot)
(1)  130/    1CA2 : B7                  		or	a
(1)  131/    1CA3 : CA A9 1C            		jp	z,.slot_1
(1)  132/    1CA6 : 11 70 01            		ld	de,140h+30h
(1)  133/    1CA9 :                     .slot_1:
(1)  134/    1CA9 : 01 08 07            		ld	bc,0708h
(1)  135/    1CAC : DD 21 56 C2         		ld	ix,RAM_CurrTrckId
(1)  136/    1CB0 : CD C5 1C            		call	.this_val
(1)  137/    1CB3 : DD 23               		inc 	ix
(1)  138/    1CB5 :                     		
(1)  139/    1CB5 : 11 70 09            		ld	de,140h+30h|800h
(1)  140/    1CB8 : 3A 55 C2            		ld	a,(RAM_CurrPlySlot)
(1)  141/    1CBB : B7                  		or	a
(1)  142/    1CBC : C2 C2 1C            		jp	nz,.slot_2
(1)  143/    1CBF : 11 70 01            		ld	de,140h+30h
(1)  144/    1CC2 :                     .slot_2:
(1)  145/    1CC2 : 01 0A 07            		ld	bc,070Ah
(1)  146/    1CC5 :                     
(1)  147/    1CC5 :                     ; ----------------------------------------
(1)  148/    1CC5 :                     ; show current value
(1)  149/    1CC5 :                     .this_val:
(1)  150/    1CC5 : 21 00 38            		ld	hl,3800h
(1)  151/    1CC8 : DB 00               		in	a,(gg_info)
(1)  152/    1CCA : E6 1F               		and	1Fh
(1)  153/    1CCC : C2 D1 1C            		jp	nz,.nocent
(1)  154/    1CCF : 2E CC               		ld	l,0CCh
(1)  155/    1CD1 :                     .nocent:
(1)  156/    1CD1 : D5                  		push	de
(1)  157/    1CD2 : 11 00 00            		ld	de,0
(1)  158/    1CD5 : 79                  		ld	a,c		; Y pos left
(1)  159/    1CD6 : 0F                  		rrca	
(1)  160/    1CD7 : 0F                  		rrca
(1)  161/    1CD8 : E6 07               		and	07h
(1)  162/    1CDA : 57                  		ld	d,a
(1)  163/    1CDB : 78                  		ld	a,b		; X pos + Y pos right YYXXXXXXb
(1)  164/    1CDC : E6 1F               		and	1Fh
(1)  165/    1CDE : 87                  		add 	a,a
(1)  166/    1CDF : 5F                  		ld	e,a
(1)  167/    1CE0 : 79                  		ld	a,c
(1)  168/    1CE1 : E6 03               		and	11b
(1)  169/    1CE3 : 0F                  		rrca
(1)  170/    1CE4 : 0F                  		rrca
(1)  171/    1CE5 : B3                  		or	e
(1)  172/    1CE6 : 5F                  		ld	e,a
(1)  173/    1CE7 : 19                  		add 	hl,de
(1)  174/    1CE8 : D1                  		pop	de
(1)  175/    1CE9 :                     
(1)  176/    1CE9 :                     	; X/Y pos goes here
(1)  177/    1CE9 : 0E BF               		ld	c,vdp_ctrl
(1)  178/    1CEB : 7C                  		ld	a,h
(1)  179/    1CEC : F6 40               		or	40h
(1)  180/    1CEE : 67                  		ld	h,a
(1)  181/    1CEF : ED 69               		out	(c),l
(1)  182/    1CF1 : ED 61               		out	(c),h
(1)  183/    1CF3 :                     
(1)  184/    1CF3 : 0E BE               		ld	c,vdp_data
(1)  185/    1CF5 : 21 00 00            		ld	hl,0
(1)  186/    1CF8 : DD 7E 00            		ld	a,(ix)
(1)  187/    1CFB : 0F                  		rrca
(1)  188/    1CFC : 0F                  		rrca
(1)  189/    1CFD : 0F                  		rrca
(1)  190/    1CFE : 0F                  		rrca
(1)  191/    1CFF : E6 0F               		and	00001111b
(1)  192/    1D01 : 6F                  		ld	l,a
(1)  193/    1D02 : 19                  		add 	hl,de
(1)  194/    1D03 : ED 69               		out	(c),l
(1)  195/    1D05 : ED 61               		out	(c),h
(1)  196/    1D07 :                     
(1)  197/    1D07 : 21 00 00            		ld	hl,0
(1)  198/    1D0A : DD 7E 00            		ld	a,(ix)
(1)  199/    1D0D : E6 0F               		and	00001111b
(1)  200/    1D0F : 6F                  		ld	l,a
(1)  201/    1D10 : 19                  		add 	hl,de
(1)  202/    1D11 : ED 69               		out	(c),l
(1)  203/    1D13 : ED 61               		out	(c),h
(1)  204/    1D15 : C9                  		ret
(1)  205/    1D16 :                     
(1)  206/    1D16 :                     ; ====================================================================
(1)  207/    1D16 :                     ; ----------------------------------------------------------------
(1)  208/    1D16 :                     ; Small data
(1)  209/    1D16 :                     ; ----------------------------------------------------------------
(1)  210/    1D16 :                     
(1)  211/    1D16 : 50 75 6C 73 65 4D   str_Test:	db "PulseMini tester",0Ah
                    69 6E 69 20 74 65 
                    73 74 65 72 0A 
(1)  212/    1D27 : 56 65 72 20 30 38   		db "Ver 08/2019",0Ah
                    2F 32 30 31 39 0A 
(1)  213/    1D33 : 0A                  		db 0Ah
(1)  214/    1D34 : 2D 2D 2D 20 54 72   		db "--- Trk / Vol",0Ah
                    6B 20 2F 20 56 6F 
                    6C 0A 
(1)  215/    1D42 : 0A                  		db 0Ah
(1)  216/    1D43 : 53 46 58 20 20 20   		db "SFX          ",0Ah
                    20 20 20 20 20 20 
                    20 0A 
(1)  217/    1D51 : 0A                  		db 0Ah
(1)  218/    1D52 : 42 47 4D 20 20 20   		db "BGM          ",0
                    20 20 20 20 20 20 
                    20 00 
(1)  219/    1D60 :                     
(1)  220/    1D60 :                     pal_FontNew:
(1)  221/    1D60 : 00 00 EE 0E CC 0C   		dw 0000h,0EEEh,0CCCh,0AAAh,0888h,0444h,000Eh,0008h
                    AA 0A 88 08 44 04 
                    0E 00 08 00 
(1)  222/    1D70 : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  223/    1D80 : 00 00 AE 00 8C 00   		dw 0000h,00AEh,008Ch,006Ah,0048h,0024h,000Eh,0008h
                    6A 00 48 00 24 00 
                    0E 00 08 00 
(1)  224/    1D90 : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  225/    1DA0 :                     		
(1)  226/    1DA0 :                     trackData_test:
(1)  227/    1DA0 : 01                  		db DataBank0>>14
(1)  228/    1DA1 : 00                  		db 0
(1)  229/    1DA2 : 00                  		db 0
(1)  230/    1DA3 : 03                  		db 3
(1)  231/    1DA4 : 13 40               		dw MusicBlk_TestMe
(1)  232/    1DA6 : 15 40               		dw MusicPat_TestMe
(1)  233/    1DA8 : E9 40               		dw MusicIns_TestMe
(1)  234/    1DAA : 00 00 00 00         		dw 0,0
(1)  235/    1DAE : 00 00               		dw 0
(1)  236/    1DB0 :                     
(1)  237/    1DB0 : 01                  		db DataBank0>>14
(1)  238/    1DB1 : 00                  		db 0
(1)  239/    1DB2 : 00                  		db 0
(1)  240/    1DB3 : 02                  		db 2
(1)  241/    1DB4 : 21 41               		dw MusicBlk_Gigalo
(1)  242/    1DB6 : 2E 41               		dw MusicPat_Gigalo
(1)  243/    1DB8 : 88 60               		dw MusicIns_Gigalo
(1)  244/    1DBA : 00 00 00 00         		dw 0,0
(1)  245/    1DBE : 00 00               		dw 0
(1)  246/    1DC0 :                     		
(1)  247/    1DC0 : 01                  		db DataBank0>>14
(1)  248/    1DC1 : 00                  		db 0
(1)  249/    1DC2 : 00                  		db 0
(1)  250/    1DC3 : 03                  		db 3
(1)  251/    1DC4 : 13 40               		dw MusicBlk_TestMe
(1)  252/    1DC6 : 15 40               		dw MusicPat_TestMe
(1)  253/    1DC8 : E9 40               		dw MusicIns_TestMe
(1)  254/    1DCA : 00 00 00 00         		dw 0,0
(1)  255/    1DCE : 00 00               		dw 0
(1)  256/    1DD0 :                     		
(1)  257/    1DD0 : 01                  		db DataBank0>>14
(1)  258/    1DD1 : 00                  		db 0
(1)  259/    1DD2 : 00                  		db 0
(1)  260/    1DD3 : 03                  		db 3
(1)  261/    1DD4 : 13 40               		dw MusicBlk_TestMe
(1)  262/    1DD6 : 15 40               		dw MusicPat_TestMe
(1)  263/    1DD8 : E9 40               		dw MusicIns_TestMe
(1)  264/    1DDA : 00 00 00 00         		dw 0,0
(1)  265/    1DDE : 00 00               		dw 0
(1)  266/    1DE0 :                     
     142/    1DE0 :                     CodeBank0_e:
     146/    1DE0 :                     	
     147/    1DE0 :                     ; ====================================================================
     148/    1DE0 :                     ; DEFAULT BANK 1
     149/    1DE0 :                     ; 4000-7FFFh
     150/    1DE0 :                     ; ====================================================================
     151/    1DE0 :                     		
     152/    1DE0 :                     		align 4000h
     153/    4000 :                     DataBank0:
     154/    4000 :                     		include	"game/data.asm"
(1)    1/    4000 :                     ; ====================================================================
(1)    2/    4000 :                     ; ----------------------------------------------------------------
(1)    3/    4000 :                     ; 
(1)    4/    4000 :                     ; ----------------------------------------------------------------
(1)    5/    4000 :                     
(1)    6/    4000 : 47 41 4D 45 20 44   		db "GAME DATA GOES HERE"
                    41 54 41 20 47 4F 
                    45 53 20 48 45 52 
                    45 
(1)    7/    4013 :                     
(1)    8/    4013 :                     
(1)    9/    4013 :                     
     155/    4013 :                     		include	"game/sound/data.asm"
(1)    1/    4013 :                     ; ================================================================
(1)    2/    4013 :                     ; ------------------------------------------------------------
(1)    3/    4013 :                     ; DATA SECTION
(1)    4/    4013 :                     ; 
(1)    5/    4013 :                     ; SOUND
(1)    6/    4013 :                     ; ------------------------------------------------------------
(1)    7/    4013 :                     
(1)    8/    4013 :                     ; TYPES:
(1)    9/    4013 :                     ;  -1 - ignore
(1)   10/    4013 :                     ;   0 - FM normal
(1)   11/    4013 :                     ;   1 - FM special
(1)   12/    4013 :                     ;   2 - FM sample
(1)   13/    4013 :                     ; $80 - PSG
(1)   14/    4013 :                     ; $E0 - PSG noise
(1)   15/    4013 :                     
(1)   16/    4013 : =0H                 insFM		equ 0
(1)   17/    4013 : =1H                 insFM3		equ 1
(1)   18/    4013 : =2H                 insFM6		equ 2
(1)   19/    4013 : =80H                insPSG		equ 80h
(1)   20/    4013 : =E0H                insPBass0	equ 0E0h
(1)   21/    4013 : =E1H                insPBass1	equ 0E1h
(1)   22/    4013 : =E2H                insPBass2	equ 0E2h
(1)   23/    4013 : =E3H                insPBass3	equ 0E3h		; Grabs PSG3 frequency
(1)   24/    4013 : =E4H                insPNoise0	equ 0E4h
(1)   25/    4013 : =E5H                insPNoise1	equ 0E5h
(1)   26/    4013 : =E6H                insPNoise2	equ 0E6h
(1)   27/    4013 : =E7H                insPNoise3	equ 0E7h		; Grabs PSG3 frequency
(1)   28/    4013 :                     
(1)   29/    4013 :                     instrSlot	macro TYPE,OPT,LABEL
(1)   30/    4013 :                     	if TYPE=-1
(1)   31/    4013 :                     		db -1,-1,-1,-1
(1)   32/    4013 :                     	else
(1)   33/    4013 :                     		db TYPE,OPT
(1)   34/    4013 :                     		dw LABEL
(1)   35/    4013 :                     	endif
(1)   36/    4013 :                     		endm
(1)   37/    4013 :                     
(1)   38/    4013 :                     ; ----------------------------------------------------
(1)   39/    4013 :                     ; Sound bank
(1)   40/    4013 :                     ; ----------------------------------------------------
(1)   41/    4013 :                     		
(1)   42/    4013 :                     ; MusicBlk_Sample:
(1)   43/    4013 :                     ; 		binclude "game/sound/music/musictrck_blk.bin"		; BLOCKS data
(1)   44/    4013 :                     ; MusicPat_Sample:
(1)   45/    4013 :                     ; 		binclude "game/sound/music/musictrck_patt.bin"		; PATTERN data
(1)   46/    4013 :                     ; Instruments staring from number 01
(1)   47/    4013 :                     ; MusicIns_Sample:
(1)   48/    4013 :                     ; 		instrSlot      insFM,0,FmIns_Piano_Small		; FM normal: type,pitch,regdata
(1)   49/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_OpenHat		; FM special (channel 3): type,pitch,regdata+exfreq
(1)   50/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_ClosedHat
(1)   51/    4013 :                     ; 		instrSlot     insFM6,0,.kick				; FM sample (channel 6): type,pitch,custompointer (see below)
(1)   52/    4013 :                     ; 		instrSlot     insFM6,0,.snare
(1)   53/    4013 :                     ; 		instrSlot     insPSG,0,PsgIns_00			; PSG (channels 1-3): type,pitch,envelope data
(1)   54/    4013 :                     ; 		instrSlot insPBass0,0,PsgIns_00				; PSG Noise (channels 1-3): type,pitch,envelope data
(1)   55/    4013 :                     ; 		instrSlot insPBass1,0,PsgIns_00
(1)   56/    4013 :                     ; 		instrSlot insPBass2,0,PsgIns_00
(1)   57/    4013 :                     ; 		instrSlot insPBass3,0,PsgIns_00				; If using bass/noise type 3, NOISE will grab the frequency from chnl 3
(1)   58/    4013 :                     ; 		instrSlot insPNoise0,0,PsgIns_00
(1)   59/    4013 :                     ; 		instrSlot insPNoise1,0,PsgIns_00
(1)   60/    4013 :                     ; 		instrSlot insPNoise2,0,PsgIns_00
(1)   61/    4013 :                     ; 		instrSlot insPNoise3,0,PsgIns_00
(1)   62/    4013 :                     ; if using insFM6 instruments:
(1)   63/    4013 :                     ; .kick:	instrSmpl 0,WavIns_Kick,WavIns_Kick_e,WavIns_Kick	; sample flags (ex. loop), START, END, LOOP
(1)   64/    4013 :                     ; .snare:	instrSmpl 0,WavIns_Snare,WavIns_Snare_e,WavIns_Snare
(1)   65/    4013 :                     
(1)   66/    4013 :                     ; ------------------------------------
(1)   67/    4013 :                     ; Track TESTME
(1)   68/    4013 :                     ; ------------------------------------
(1)   69/    4013 :                     
(1)   70/    4013 :                     MusicBlk_TestMe:
(1)   71/    4013 :                     		binclude "game/sound/music/lasttest_blk.bin"		; BLOCKS data
(1)   72/    4015 :                     MusicPat_TestMe:
(1)   73/    4015 :                     		binclude "game/sound/music/lasttest_patt.bin"		; PATTERN data
(1)   74/    40E9 :                     MusicIns_TestMe:
(1)   75/    40E9 : (MACRO)             		instrSlot -1
(1)   75/    40E9 : FF FF FF FF                         db -1,-1,-1,-1
(1)   76/    40ED : (MACRO)             		instrSlot -1
(1)   76/    40ED : FF FF FF FF                         db -1,-1,-1,-1
(1)   77/    40F1 : (MACRO)             		instrSlot -1
(1)   77/    40F1 : FF FF FF FF                         db -1,-1,-1,-1
(1)   78/    40F5 : (MACRO)             		instrSlot -1
(1)   78/    40F5 : FF FF FF FF                         db -1,-1,-1,-1
(1)   79/    40F9 : (MACRO)             		instrSlot -1
(1)   79/    40F9 : FF FF FF FF                         db -1,-1,-1,-1
(1)   80/    40FD : (MACRO)             		instrSlot     insPSG,0,PsgIns_00
(1)   80/    40FD : 80 00                               db INSPSG,0
(1)   80/    40FF : 75 08                               dw PSGINS_00
(1)   81/    4101 : (MACRO)             		instrSlot insPBass0,0,PsgIns_00
(1)   81/    4101 : E0 00                               db INSPBASS0,0
(1)   81/    4103 : 75 08                               dw PSGINS_00
(1)   82/    4105 : (MACRO)             		instrSlot insPBass1,0,PsgIns_00
(1)   82/    4105 : E1 00                               db INSPBASS1,0
(1)   82/    4107 : 75 08                               dw PSGINS_00
(1)   83/    4109 : (MACRO)             		instrSlot insPBass2,0,PsgIns_00
(1)   83/    4109 : E2 00                               db INSPBASS2,0
(1)   83/    410B : 75 08                               dw PSGINS_00
(1)   84/    410D : (MACRO)             		instrSlot insPBass3,0,PsgIns_00
(1)   84/    410D : E3 00                               db INSPBASS3,0
(1)   84/    410F : 75 08                               dw PSGINS_00
(1)   85/    4111 : (MACRO)             		instrSlot insPNoise0,0,PsgIns_00
(1)   85/    4111 : E4 00                               db INSPNOISE0,0
(1)   85/    4113 : 75 08                               dw PSGINS_00
(1)   86/    4115 : (MACRO)             		instrSlot insPNoise1,0,PsgIns_00
(1)   86/    4115 : E5 00                               db INSPNOISE1,0
(1)   86/    4117 : 75 08                               dw PSGINS_00
(1)   87/    4119 : (MACRO)             		instrSlot insPNoise2,0,PsgIns_00
(1)   87/    4119 : E6 00                               db INSPNOISE2,0
(1)   87/    411B : 75 08                               dw PSGINS_00
(1)   88/    411D : (MACRO)             		instrSlot insPNoise3,0,PsgIns_00
(1)   88/    411D : E7 00                               db INSPNOISE3,0
(1)   88/    411F : 75 08                               dw PSGINS_00
(1)   89/    4121 :                     
(1)   90/    4121 :                     ; ------------------------------------
(1)   91/    4121 :                     ; Track Gigalo
(1)   92/    4121 :                     ; ------------------------------------
(1)   93/    4121 :                     
(1)   94/    4121 :                     MusicBlk_Gigalo:
(1)   95/    4121 :                     		binclude "game/sound/music/gigalo_psg_blk.bin"
(1)   96/    412E :                     MusicPat_Gigalo:
(1)   97/    412E :                     		binclude "game/sound/music/gigalo_psg_patt.bin"
(1)   98/    6088 :                     MusicIns_Gigalo:
(1)   99/    6088 : (MACRO)             		instrSlot     insPSG,0,PsgIns_01
(1)   99/    6088 : 80 00                               db INSPSG,0
(1)   99/    608A : 77 08                               dw PSGINS_01
(1)  100/    608C : (MACRO)             		instrSlot insPNoise0,0,PsgIns_01
(1)  100/    608C : E4 00                               db INSPNOISE0,0
(1)  100/    608E : 77 08                               dw PSGINS_01
(1)  101/    6090 : (MACRO)             		instrSlot insPNoise1,0,PsgIns_01
(1)  101/    6090 : E5 00                               db INSPNOISE1,0
(1)  101/    6092 : 77 08                               dw PSGINS_01
(1)  102/    6094 : (MACRO)             		instrSlot insPNoise2,0,PsgIns_01
(1)  102/    6094 : E6 00                               db INSPNOISE2,0
(1)  102/    6096 : 77 08                               dw PSGINS_01
(1)  103/    6098 :                     
     156/    6098 :                     DataBank0_e:
     160/    6098 :                     	
     161/    6098 :                     ; ============================================================
     162/    6098 :                     ; Header must be at the end of BANK 1
     163/    6098 :                     ; ============================================================
     164/    6098 :                     
     165/    6098 :                     		align 7FF0h			; Align up to 7FF0h (almost at the end of BANK 1)
     166/    7FF0 : 54 4D 52 20 53 45   		db "TMR SEGA  "			; TMR SEGA
                    47 41 20 20 
     167/    7FFA : 00 00               		dw 0				; Checksum (externally calculated)
     168/    7FFC : 00 00               		dw 0				; Serial
     169/    7FFE : 00                  		db 0				; Version
     170/    7FFF : 4C                  		db 4Ch				; ROM size: 32k
     171/    8000 :                     
     172/    8000 :                     ; ====================================================================
     173/    8000 :                     		
     174/    8000 :                     ROM_END:	align 8000h
     175/    8000 :                     
 AS V1.42 Beta [Bld 118] - source file main.asm - page 2 - 8/15/2019 1:47:24


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :                                        x86_64-unknown-linux - |
 ART_PRINTFONT :                ABD C |  ART_PRINTFONT_E :             16BD C |
 BANK_0 :                      FFFD - |  BANK_1 :                      FFFE - |
 BANK_2 :                      FFFF - |  BANK_CTRL :                   FFFC - |
*BIGENDIAN :                      0 - |  BITJOY1 :                        4 - |
 BITJOY2 :                        5 - |  BITJOYDOWN :                     1 - |
 BITJOYLEFT :                     2 - |  BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - |  BITJOYUP :                       0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
 CHNL_CHIP :                      0 - |  CHNL_EFFARG :                    6 - |
 CHNL_EFFID :                     5 - |  CHNL_EFNEWFREQ :                1A - |
 CHNL_EFNEWVOL :                 17 - |  CHNL_EFPORTAM :                 18 - |
 CHNL_EFVOLSLIDE :               16 - |  CHNL_FMPAN :                     D - |
*CHNL_FMREGB0 :                   E - | *CHNL_FMREGB4 :                   F - |
*CHNL_FMREGKEYS :                10 - | *CHNL_FMVOLBASE :                11 - |
 CHNL_FREQ :                      9 - |  CHNL_INS :                       3 - |
 CHNL_INSADDR :                   7 - |  CHNL_INSOPT :                    C - |
 CHNL_INSTYPE :                   B - |  CHNL_NOTE :                      2 - |
 CHNL_PSGINDX :                  14 - |  CHNL_PSGOUTFREQ :               1C - |
 CHNL_PSGVOLBASE :               12 - |  CHNL_PSGVOLENV :                13 - |
*CHNL_SMPLFLAGS :                15 - |  CHNL_TYPE :                      1 - |
 CHNL_VOL :                       4 - | *CODEBANK0 :                   1C00 C |
*CODEBANK0_E :                 1DE0 C | *CONSTPI :        3.141592653589793 - |
 CONTROLLER_1 :                C24B - | *CONTROLLER_2 :                C24D - |
 CURR_NOISEMODE :              C148 C |  CURR_SNDBANK :                C149 C |
 DATABANK0 :                   4000 C | *DATABANK0_E :                 6098 C |
*DATE :                   8/15/2019 - | *FALSE :                          0 - |
*FULLPMMU :                       1 - |  GG_EXT_BITDIR :                  2 - |
 GG_EXT_COMM :                    1 - |  GG_INFO :                        0 - |
 GG_SERIAL :                      5 - | *GG_SERIAL_IN :                   4 - |
*GG_SERIAL_OUT :                  3 - |  GG_STEREO :                      6 - |
 GLBL_LASTORG :                1C00 - |  GLBL_LASTPC :                 1C00 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSFM :                          0 - |
*INSFM3 :                         1 - | *INSFM6 :                         2 - |
 INSPBASS0 :                     E0 - |  INSPBASS1 :                     E1 - |
 INSPBASS2 :                     E2 - |  INSPBASS3 :                     E3 - |
 INSPNOISE0 :                    E4 - |  INSPNOISE1 :                    E5 - |
 INSPNOISE2 :                    E6 - |  INSPNOISE3 :                    E7 - |
 INSPSG :                        80 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - |  INT_EXIT :                      4B C |
*JOY1 :                          10 - | *JOY2 :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
 JOYPAD_1 :                      DC - |  JOYPAD_2 :                      DD - |
*JOYPAD_CTRL :                   3F - | *JOYRIGHT :                       8 - |
*JOYUP :                          1 - | *LISTON :                         3 - |
 LIST_VDPREGS :                 AB2 C | *MACEXP :                         7 - |
 MAX_CHNLS :                      4 - |  MAX_MSERAM :                  1000 - |
 MAX_PRNTLIST :                  10 - | *MAX_TRACKS :                     2 - |
*MEMORY_CTRL :                   3E - | *MERCURY :                        1 - |
*MOMCPU :                        80 - | *MOMCPUNAME :                   Z80 - |
 MSRAM_START :                 C000 - |  MS_HINT :                       86 C |
 MS_INIT :                     1800 C |  MS_VINT :                       67 C |
 MUSICBLK_GIGALO :             4121 C |  MUSICBLK_TESTME :             4013 C |
 MUSICINS_GIGALO :             6088 C |  MUSICINS_TESTME :             40E9 C |
 MUSICPAT_GIGALO :             412E C |  MUSICPAT_TESTME :             4015 C |
*NESTMAX :                      100 - |  ON_HOLD :                        0 C |
 ON_PRESS :                       1 C | *PACKING :                        0 - |
*PADDING :                        1 - |  PAL_FONTNEW :                 1D60 C |
 PAL_PRINTFONT :               16BD C | *PLYR_ANI_CNTR :                  6 C |
*PLYR_ANI_TIMER :                 5 C | *PLYR_FRAME :                     4 C |
*PLYR_X :                         0 C | *PLYR_Y :                         2 C |
 PSGFREQ_LIST :                 783 C |  PSGINS_00 :                    875 C |
 PSGINS_01 :                    877 C | *PSGINS_02 :                    87D C |
*PSGINS_03 :                    880 C | *PSGINS_04 :                    88C C |
 PSG_CTRL :                      7F - |  RAM_CURRPLYSLOT :             C255 C |
*RAM_CURRSPRX :                C249 C | *RAM_CURRSPRY :                C247 C |
 RAM_CURRTRCKID :              C256 C | *RAM_CURRTRCKVOL :             C258 C |
 RAM_CURRTRCKVOL.LOOP :        1C20 C |  RAM_CURRTRCKVOL.MODIFY_SLOT : 1C71 C |
 RAM_CURRTRCKVOL.MODIFY_TRACK :                                        1C6B C |
 RAM_CURRTRCKVOL.NOCENT :      1CD1 C |  RAM_CURRTRCKVOL.PLAY_TRACK :  1C7B C |
 RAM_CURRTRCKVOL.SHOW_VALUES : 1C9C C |  RAM_CURRTRCKVOL.SLOT1NOAD :   1C3D C |
 RAM_CURRTRCKVOL.SLOT_1 :      1CA9 C |  RAM_CURRTRCKVOL.SLOT_2 :      1CC2 C |
 RAM_CURRTRCKVOL.STOP_TRACK :  1C96 C |  RAM_CURRTRCKVOL.THIS_VAL :    1CC5 C |
*RAM_GLBL_NULL :               D255 C |  RAM_GLOBAL :                  D255 C |
 RAM_HBLANK :                  C252 C |  RAM_INPUTDATA :               C24B C |
 RAM_LOCAL :                   C255 C |  RAM_MSSOUND :                 C000 C |
 RAM_MSSYSTEM :                C24B C |  RAM_MSVIDEO :                 C14A C |
*RAM_SPRTX :                   C1C7 C | *RAM_SPRTY :                   C187 C |
 RAM_VBLANK :                  C24F C |  RAM_VDPCACHE :                C17C C |
 RAM_VIDPRNTLIST :             C14A C |  RAM_VIDPRNTVRAM :             C17A C |
*RELAXED :                        0 - | *ROM_END :                     8000 C |
 SIZEOF_GLOBAL :               D256 C |  SIZEOF_GLOBAL.VINT :            48 C |
 SIZEOF_INPUT :                   2 C | *SIZEOF_MDRAM :                C005 C |
*SIZEOF_MSRAM :                D256 C |  SIZEOF_MSSND :                C14A C |
 SIZEOF_MSSYS :                C255 C |  SIZEOF_MSVID :                C24B C |
 SNDBUFF_CHNLBUFF_1 :          C048 C |  SNDBUFF_CHNLBUFF_2 :          C0C8 C |
 SNDBUFF_TRACK_1 :             C008 C |  SNDBUFF_TRACK_2 :             C028 C |
 SNDBUFF_USEDCHNLS :           C000 C |  SNDBUFF_USEDCHNLS_2 :         C004 C |
 SNDDRV_READTRACK :             11A C |  SNDDRV_READTRACK.CHIP_SETUP :  2C8 C |
 SNDDRV_READTRACK.DONTUPD_TRCK :                                        19C C |
 SNDDRV_READTRACK.DWN_EXFINE :  4D7 C |  SNDDRV_READTRACK.DWN_FINE :    4E7 C |
 SNDDRV_READTRACK.EFF_A :       487 C |  SNDDRV_READTRACK.EFF_B :       48F C |
 SNDDRV_READTRACK.EFF_D :       49F C |  SNDDRV_READTRACK.EFF_E :       4B9 C |
 SNDDRV_READTRACK.EFF_F :       4F9 C |  SNDDRV_READTRACK.EFF_LIST :    451 C |
 SNDDRV_READTRACK.EFF_NULL :    450 C |  SNDDRV_READTRACK.EFF_X :       532 C |
*SNDDRV_READTRACK.EXIT_BUSY :   213 C |  SNDDRV_READTRACK.EXIT_NOTES :  212 C |
 SNDDRV_READTRACK.FMPAN_LIST :  541 C |
 SNDDRV_READTRACK.FM_NORMALCHNL :                                       3D9 C |
*SNDDRV_READTRACK.FM_TURNOFF :  588 C |  SNDDRV_READTRACK.FORCE_ON :    13E C |
 SNDDRV_READTRACK.FREQRN_FM :   577 C |  SNDDRV_READTRACK.FREQRN_NOT3 : 56B C |
 SNDDRV_READTRACK.FREQRN_PSG :  579 C |  SNDDRV_READTRACK.FREQRN_SMPL : 578 C |
*SNDDRV_READTRACK.GO_DOWN :     4A9 C |  SNDDRV_READTRACK.GO_UP :       4AF C |
 SNDDRV_READTRACK.GRAB_INSTSLOT :                                       545 C |
 SNDDRV_READTRACK.KEEP_CTRL :   1CA C |  SNDDRV_READTRACK.LAST_ENV :    2B3 C |
 SNDDRV_READTRACK.LIST_DOEFF :  607 C |  SNDDRV_READTRACK.LOOP_ME :     1A7 C |
 SNDDRV_READTRACK.LOWPRIOSET :  37E C |  SNDDRV_READTRACK.LOWUNLKSET :  3E7 C |
*SNDDRV_READTRACK.NEXT_PSG :    2C7 C |  SNDDRV_READTRACK.NOTYPE3 :     3CD C |
 SNDDRV_READTRACK.NOT_NOISE :   26F C |  SNDDRV_READTRACK.NOT_NSE :     5CE C |
 SNDDRV_READTRACK.NOT_NSE3 :    5BE C |  SNDDRV_READTRACK.NO_EFF :      1F6 C |
 SNDDRV_READTRACK.NO_INST :     1DF C |  SNDDRV_READTRACK.NO_MAX :      2BF C |
 SNDDRV_READTRACK.NO_NEWEFF :   332 C |  SNDDRV_READTRACK.NO_NEWINST :  319 C |
 SNDDRV_READTRACK.NO_NEWVOL :   371 C |  SNDDRV_READTRACK.NO_NOTE :     1D6 C |
 SNDDRV_READTRACK.NO_NOTEREQ :  355 C |  SNDDRV_READTRACK.NO_UPD_FREQ : 297 C |
 SNDDRV_READTRACK.NO_VOL :      1E8 C |  SNDDRV_READTRACK.PNTOO_LOW :   59B C |
 SNDDRV_READTRACK.PNTOO_MUCH :  596 C |  SNDDRV_READTRACK.PNTOPPSGV :   5A7 C |
 SNDDRV_READTRACK.PRTDWN_CONT : 4F8 C |  SNDDRV_READTRACK.PRTUP_CONT :  531 C |
 SNDDRV_READTRACK.PSG_EF :      674 C |  SNDDRV_READTRACK.PSG_ENVLOPE : 24D C |
 SNDDRV_READTRACK.PSG_INSTR :   306 C |
 SNDDRV_READTRACK.ROW_COUNTDWN :                                        219 C |
 SNDDRV_READTRACK.RUN_EFFECT :  5EE C |
 SNDDRV_READTRACK.RUN_FREQUENCY :                                       55B C |
 SNDDRV_READTRACK.SEARCH_SLOT : 392 C |
 SNDDRV_READTRACK.SETFM_SAMPLE :                                        3FC C |
 SNDDRV_READTRACK.SETFREQ_PSG : 3FD C |  SNDDRV_READTRACK.SETPSG_VOL :  651 C |
 SNDDRV_READTRACK.SET_D :       63D C |  SNDDRV_READTRACK.SET_EFFECT :  437 C |
 SNDDRV_READTRACK.SET_E_F :     657 C |  SNDDRV_READTRACK.SET_FM_FREQ : 58A C |
 SNDDRV_READTRACK.SET_FM_INS :  589 C |  SNDDRV_READTRACK.SET_FM_VOL :  58B C |
 SNDDRV_READTRACK.SET_FREQUENCY :                                       3BD C |
 SNDDRV_READTRACK.SET_PORTAM :  4F2 C |
 SNDDRV_READTRACK.SET_PSG_FREQ :                                        5AB C |
 SNDDRV_READTRACK.SET_PSG_VOL : 58D C | *SNDDRV_READTRACK.SET_SAMPL :   58C C |
 SNDDRV_READTRACK.SET_TIMER :   20F C |  SNDDRV_READTRACK.SET_VOL :     2C4 C |
 SNDDRV_READTRACK.SET_VOLUME :  3AF C |  SNDDRV_READTRACK.SET_X :       692 C |
 SNDDRV_READTRACK.SKIP_BLOCK :  203 C |  SNDDRV_READTRACK.STOP_TRACK :  207 C |
 SNDDRV_READTRACK.TOOLOW :      689 C |
*SNDDRV_READTRACK.TRCK_RESTART :                                        157 C |
 SNDDRV_READTRACK.UNLOCK_CHNL : 3DA C |  SNDDRV_READTRACK.UP_EXFINE :   51A C |
 SNDDRV_READTRACK.UP_FINE :     526 C |  SNDDRV_READTRACK.USE_NEWEFF :  326 C |
 SNDDRV_READTRACK.USE_NEWINST : 2DE C |  SNDDRV_READTRACK.USE_NEWVOL :  362 C |
 SNDDRV_READTRACK.USE_NOTEREQ : 340 C |  SNDDRV_READTRACK.VOL_ISPSG :   3B9 C |
 SNDDRV_REQTRACK :              693 C |  SNDDRV_REQTRACK.REQ01 :        6B4 C |
 SNDDRV_REQTRACK.REQ02 :        70D C |  SNDDRV_REQTRACK.REQ_LIST :     6AE C |
 SNDDRV_RESETCHAN :             711 C |  SNDDRV_RESETCHAN.DONTVOLFM :   776 C |
 SNDDRV_RESETCHAN.FM_SHUT :     776 C |  SNDDRV_RESETCHAN.INITCHNLS :   72D C |
 SNDDRV_RESETCHAN.LOWPRIO :     71E C |  SNDDRV_RESETCHAN.NEXTTYPE :    721 C |
 SNDDRV_RESETCHAN.NXTFMCHNL :   760 C |  SOUND_INIT :                    89 C |
 SOUND_INIT.NXTCHNL :            AD C |  SOUND_RUN :                     BC C |
 SOUND_SETTRACK :                D3 C |  SOUND_SETTRACK.SFX_PRIO :       DF C |
 SOUND_STOPTRACK :              10D C |  SOUND_STOPTRACK.SFX_PRIO :     117 C |
 STR_TEST :                    1D16 C |  SYSTEM_INIT :                 16DD C |
 SYSTEM_INIT.NOT_GG :          16FC C |  SYSTEM_INPUT :                172A C |
 SYSTEM_INPUT.NO_GGSTRT :      173C C |  SYSTEM_VSYNC :                1722 C |
*TIME :                     1:47:24 - |  TRACKDATA_TEST :              1DA0 C |
 TRCK_ACTIVE :                   11 - |  TRCK_BLOCKCURR :                 E - |
 TRCK_BLOCKS :                   12 - |  TRCK_INSTR :                    16 - |
*TRCK_MASTERVOL :                 F - |  TRCK_PATTBASE :                 14 - |
 TRCK_PATTREAD :                 18 - |  TRCK_PRIORITY :                 10 - |
 TRCK_PSGNOISE :                  C - |  TRCK_REQBLK :                    0 - |
*TRCK_REQCHNLS :                  B - |  TRCK_REQCURRBLK :                8 - |
 TRCK_REQFLAG :                   A - |  TRCK_REQINS :                    4 - |
 TRCK_REQPATT :                   2 - |  TRCK_REQSNDBNK :                 9 - |
 TRCK_REQTEMPO :                  7 - |  TRCK_REQTICKS :                  6 - |
 TRCK_ROWSTEPS :                 1A - |  TRCK_ROWWAIT :                  1E - |
 TRCK_TEMPOBITS :                1D - |  TRCK_TICKSCURR :                1F - |
 TRCK_TICKSMAIN :                1C - |  TRCK_TICKSREAD :                 D - |
*TRUE :                           1 - | *VARNULLVRAM :                  1FF - |
 VDP_CTRL :                      BF - |  VDP_DATA :                      BE - |
*VDP_PALETTE :                 C000 - | *VERSION :                     142F - |
 VIDEO_CLEAR :                  8E5 C |  VIDEO_CLEAR.CLRSCRN :          90E C |
 VIDEO_CLEAR.MARK_MS :          8F0 C |  VIDEO_CLEAR.PAL_CLR :          8FC C |
 VIDEO_INIT :                   892 C |  VIDEO_INIT.LOOP :              89F C |
 VIDEO_INITPRINT :              8AC C |  VIDEO_LOADART :                955 C |
 VIDEO_LOADART.LOOP :           974 C |  VIDEO_LOADPAL :                918 C |
 VIDEO_LOADPAL.LOOPMS :         937 C |  VIDEO_LOADPAL.MARK_MS :        92F C |
 VIDEO_PRINT :                  97D C |  VIDEO_PRINT.BREQ :             A18 C |
 VIDEO_PRINT.DO_NIBBL :         A8B C |  VIDEO_PRINT.ENDVAL :           A7C C |
 VIDEO_PRINT.EXIT :             A34 C |  VIDEO_PRINT.LOOP :             9B7 C |
 VIDEO_PRINT.LOOPVAL :          A38 C |  VIDEO_PRINT.NEXT :             9DB C |
 VIDEO_PRINT.NOADD :            A98 C |  VIDEO_PRINT.NOBYTE :           A54 C |
 VIDEO_PRINT.NOCENT :           992 C |  VIDEO_PRINT.NOWORD :           A69 C |
 VIDEO_PRINT.PUT_BYTE :         A82 C |  VIDEO_PRINT.SPECIAL :          9E9 C |
*VIDEO_UPDATE :                 8D3 C |  VIDEO_UPDATE.LOOP :            8DA C |
*V_COUNTER :                     7E - |

    354 symbols
     82 unused symbols

 AS V1.42 Beta [Bld 118] - source file main.asm - page 3 - 8/15/2019 1:47:24


  defined macros:
  ---------------

FINISH                                | INSTRSLOT                            
ROMPAD                                | STRUCT                               

      4 macros

 AS V1.42 Beta [Bld 118] - source file main.asm - page 4 - 8/15/2019 1:47:24


  defined functions:
  ------------------

LOCATE                                |

 AS V1.42 Beta [Bld 118] - source file main.asm - page 5 - 8/15/2019 1:47:24


  codepages:
  ----------

STANDARD (0 changed characters)


0.20 seconds assembly time

   3703 lines source file
   3859 lines incl. macro expansions
      6 passes
      0 errors
      0 warnings
