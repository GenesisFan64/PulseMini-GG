 AS V1.42 Beta [Bld 118] - source file main.asm - page 1 - 8/13/2019 21:02:05


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; SEGA MASTER SYSTEM GAME TEMPLATE
       4/       0 :                     ; +-----------------------------------------------------------------+
       5/       0 :                     
       6/       0 :                     		!org 0				; [AS] Start at 0
       7/       0 :                     		listing purecode		; [AS] Want listing file, but only the final code in expanded macros
       8/       0 :                     		supmode on 			; [AS] Supervisor mode
       9/       0 :                     		page 0				; [AS] Listing page 0
      10/       0 :                     		cpu Z80				; [AS] Current CPU is Z80
      11/       0 :                     		
      12/       0 :                     ; ====================================================================
      13/       0 :                     ; ----------------------------------------------------------------
      14/       0 :                     ; Include variables
      15/       0 :                     ; ----------------------------------------------------------------
      16/       0 :                     
      17/       0 :                     		include "system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; ---------------------------------------------
(1)    8/       0 :                     ; Functions
(1)    9/       0 :                     ; ---------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; example of function
(1)   12/       0 :                     locate		function b,c,(c&0FFh)|(b<<8&0FF00h)		; Layer,X pos,Y pos for some video routines
(1)   13/       0 :                     
(1)   14/       0 :                     ; ====================================================================
(1)   15/       0 :                     ; ---------------------------------------------
(1)   16/       0 :                     ; Macros
(1)   17/       0 :                     ; ---------------------------------------------
(1)   18/       0 :                     
(1)   19/       0 :                     ; -------------------------------------
(1)   20/       0 :                     ; Reserve memory space
(1)   21/       0 :                     ; -------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   24/       0 :                     GLBL_LASTPC	eval $
(1)   25/       0 :                     GLBL_LASTORG	eval $
(1)   26/       0 :                     		dephase
(1)   27/       0 :                     		phase thisinput
(1)   28/       0 :                     		endm
(1)   29/       0 :                     		
(1)   30/       0 :                     ; -------------------------------------
(1)   31/       0 :                     ; Finish reserve
(1)   32/       0 :                     ; -------------------------------------
(1)   33/       0 :                     
(1)   34/       0 :                     finish		macro				; Then finish
(1)   35/       0 :                     		!org GLBL_LASTORG
(1)   36/       0 :                     		phase GLBL_LASTPC
(1)   37/       0 :                     		endm
(1)   38/       0 :                     
(1)   39/       0 :                     ; -------------------------------------
(1)   40/       0 :                     ; ZERO Fill padding
(1)   41/       0 :                     ; 
(1)   42/       0 :                     ; if AS align doesn't work
(1)   43/       0 :                     ; -------------------------------------
(1)   44/       0 :                     
(1)   45/       0 :                     rompad		macro address			; Zero fill
(1)   46/       0 :                     diff := address - *
(1)   47/       0 :                     		if diff < 0
(1)   48/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   49/       0 :                     		else
(1)   50/       0 :                     			while diff > 1024
(1)   51/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   52/       0 :                     				dc.b [1024]0
(1)   53/       0 :                     diff := diff - 1024
(1)   54/       0 :                     			endm
(1)   55/       0 :                     			dc.b [diff]0
(1)   56/       0 :                     		endif
(1)   57/       0 :                     	endm
(1)   58/       0 :                     
(1)   59/       0 :                     ; ====================================================================
(1)   60/       0 :                     
      18/       0 :                     		include "system/const.asm"	; Variables and constants
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =C000H              MSRAM_START	equ	0C000h		; MS RAM Start
(1)    7/       0 : =1000H              MAX_MSERAM	equ	1000h		; Maximum temporal RAM for screen modes
(1)    8/       0 : =10H                MAX_PRNTLIST	equ	16		; Max print values
(1)    9/       0 :                     
(1)   10/       0 : =1FFH               varNullVram	equ	1FFh
(1)   11/       0 :                     
(1)   12/       0 :                     ; ====================================================================
(1)   13/       0 :                     ; ----------------------------------------------------------------
(1)   14/       0 :                     ; Variables
(1)   15/       0 :                     ; ----------------------------------------------------------------
(1)   16/       0 :                     
(1)   17/       0 :                     ; --------------------------------------------------------
(1)   18/       0 :                     ; System
(1)   19/       0 :                     ; --------------------------------------------------------
(1)   20/       0 :                     
(1)   21/       0 :                     ; ------------------------------------------------
(1)   22/       0 :                     ; Controller buttons
(1)   23/       0 :                     ; ------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 : =7H                 bitJoyStart	equ 7
(1)   26/       0 : =4H                 bitJoy1		equ 4
(1)   27/       0 : =5H                 bitJoy2		equ 5
(1)   28/       0 : =3H                 bitJoyRight	equ 3
(1)   29/       0 : =2H                 bitJoyLeft	equ 2
(1)   30/       0 : =1H                 bitJoyDown	equ 1
(1)   31/       0 : =0H                 bitJoyUp	equ 0
(1)   32/       0 :                     
(1)   33/       0 : =1H                 JoyUp		equ 01h
(1)   34/       0 : =2H                 JoyDown 	equ 02h
(1)   35/       0 : =4H                 JoyLeft		equ 04h
(1)   36/       0 : =8H                 JoyRight	equ 08h
(1)   37/       0 : =10H                Joy1		equ 10h
(1)   38/       0 : =20H                Joy2		equ 20h
(1)   39/       0 :                     
(1)   40/       0 :                     ; --------------------------------------------------------
(1)   41/       0 :                     ; Sound
(1)   42/       0 :                     ; --------------------------------------------------------
(1)   43/       0 :                     
(1)   44/       0 :                     ; settings
(1)   45/       0 : =4H                 MAX_CHNLS	equ 4
(1)   46/       0 : =2H                 MAX_TRACKS	equ 2
(1)   47/       0 :                     
(1)   48/       0 :                     ; Track structure
(1)   49/       0 : =0H                 trck_ReqBlk	equ 00h		; word
(1)   50/       0 : =2H                 trck_ReqPatt	equ 02h		; word
(1)   51/       0 : =4H                 trck_ReqIns	equ 04h		; word
(1)   52/       0 : =6H                 trck_ReqTicks	equ 06h
(1)   53/       0 : =7H                 trck_ReqTempo	equ 07h
(1)   54/       0 : =8H                 trck_ReqCurrBlk	equ 08h
(1)   55/       0 : =9H                 trck_ReqSndBnk	equ 09h
(1)   56/       0 : =AH                 trck_ReqFlag	equ 0Ah
(1)   57/       0 : =BH                 trck_ReqChnls	equ 0Bh
(1)   58/       0 : =CH                 trck_PsgNoise	equ 0Ch
(1)   59/       0 : =DH                 trck_TicksRead	equ 0Dh
(1)   60/       0 : =EH                 trck_BlockCurr	equ 0Eh
(1)   61/       0 : =FH                 trck_MasterVol	equ 0Fh
(1)   62/       0 : =10H                trck_Priority	equ 10h
(1)   63/       0 : =11H                trck_Active	equ 11h
(1)   64/       0 : =12H                trck_Blocks	equ 12h		; word
(1)   65/       0 : =14H                trck_PattBase	equ 14h		; word
(1)   66/       0 : =16H                trck_Instr	equ 16h		; word
(1)   67/       0 : =18H                trck_PattRead	equ 18h		; word
(1)   68/       0 : =1AH                trck_RowSteps	equ 1Ah		; word
(1)   69/       0 : =1CH                trck_TicksMain 	equ 1Ch
(1)   70/       0 : =1DH                trck_TempoBits	equ 1Dh
(1)   71/       0 : =1EH                trck_RowWait	equ 1Eh
(1)   72/       0 : =1FH                trck_TicksCurr	equ 1Fh
(1)   73/       0 :                     
(1)   74/       0 :                     ; channel buffers
(1)   75/       0 : =0H                 chnl_Chip	equ 0
(1)   76/       0 : =1H                 chnl_Type	equ 1
(1)   77/       0 : =2H                 chnl_Note	equ 2
(1)   78/       0 : =3H                 chnl_Ins	equ 3
(1)   79/       0 : =4H                 chnl_Vol	equ 4
(1)   80/       0 : =5H                 chnl_EffId	equ 5
(1)   81/       0 : =6H                 chnl_EffArg	equ 6
(1)   82/       0 : =7H                 chnl_InsAddr	equ 7		; word
(1)   83/       0 : =9H                 chnl_Freq	equ 09h		; word
(1)   84/       0 : =BH                 chnl_InsType	equ 0Bh
(1)   85/       0 : =CH                 chnl_InsOpt	equ 0Ch
(1)   86/       0 : =DH                 chnl_FmPan	equ 0Dh
(1)   87/       0 : =EH                 chnl_FmRegB0	equ 0Eh
(1)   88/       0 : =FH                 chnl_FmRegB4	equ 0Fh
(1)   89/       0 : =10H                chnl_FmRegKeys	equ 10h
(1)   90/       0 : =11H                chnl_FmVolBase	equ 11h
(1)   91/       0 : =12H                chnl_PsgVolBase	equ 12h
(1)   92/       0 : =13H                chnl_PsgVolEnv	equ 13h
(1)   93/       0 : =14H                chnl_PsgIndx	equ 14h
(1)   94/       0 : =15H                chnl_SmplFlags	equ 15h
(1)   95/       0 : =16H                chnl_EfVolSlide	equ 16h
(1)   96/       0 : =17H                chnl_EfNewVol	equ 17h
(1)   97/       0 : =18H                chnl_EfPortam	equ 18h		; word
(1)   98/       0 : =1AH                chnl_EfNewFreq	equ 1Ah		; word
(1)   99/       0 : =1CH                chnl_PsgOutFreq	equ 1Ch		; word
(1)  100/       0 :                     
(1)  101/       0 :                     ; ====================================================================
(1)  102/       0 :                     ; ----------------------------------------------------------------
(1)  103/       0 :                     ; Alias
(1)  104/       0 :                     ; ----------------------------------------------------------------
(1)  105/       0 :                     
(1)  106/       0 : =C257H              Controller_1	equ RAM_InputData
(1)  107/       0 : =C259H              Controller_2	equ RAM_InputData+sizeof_input
(1)  108/       0 :                     
(1)  109/       0 : =C000H              VDP_PALETTE	equ 0C000h				; Palette
(1)  110/       0 :                     
(1)  111/       0 :                     ; ====================================================================
(1)  112/       0 :                     ; ----------------------------------------------------------------
(1)  113/       0 :                     ; Structures
(1)  114/       0 :                     ; ----------------------------------------------------------------
(1)  115/       0 :                     
(1)  116/       0 :                     ; Controller
(1)  117/       0 : (MACRO)             		struct 0
(1)  117/       0 : =0H                 GLBL_LASTPC     eval $
(1)  117/       0 : =0H                 GLBL_LASTORG    eval $
(1)  117/       0 :                                     dephase
(1)  117/       0 :                                     phase 0
(1)  118/       0 :                     on_hold		ds 1
(1)  119/       1 :                     on_press	ds 1
(1)  120/       2 :                     sizeof_input	ds 1
(1)  121/       3 : (MACRO)             		finish
(1)  121/       0 :                                     !org GLBL_LASTORG
(1)  121/       0 :                                     phase GLBL_LASTPC
(1)  122/       0 :                     
(1)  123/       0 :                     ; ====================================================================
(1)  124/       0 :                     ; ----------------------------------------------------------------
(1)  125/       0 :                     ; Master System RAM
(1)  126/       0 :                     ;
(1)  127/       0 :                     ; Note: 0DFFCh-0DFFFh (0FFFCh-0FFFFh)
(1)  128/       0 :                     ; is reserved for bankswitch
(1)  129/       0 :                     ; ----------------------------------------------------------------
(1)  130/       0 :                     
(1)  131/       0 :                     ; This looks bad but it works as intended
(1)  132/       0 :                     
(1)  133/       0 :                     	; First pass, empty sizes
(1)  134/       0 : (MACRO)             		struct MSRAM_START		; Set struct at start of our base RAM
(1)  134/       0 : =0H                 GLBL_LASTPC     eval $
(1)  134/       0 : =0H                 GLBL_LASTORG    eval $
(1)  134/       0 :                                     dephase
(1)  134/    C000 :                                     phase MSRAM_START
(1)  143/    C000 :                     	
(1)  144/    C000 :                     	; Second pass, sizes are set
(1)  145/    C000 :                     RAM_MsSound	ds sizeof_mssnd-RAM_MsSound
(1)  146/    C156 :                     RAM_MsVideo	ds sizeof_msvid-RAM_MsVideo
(1)  147/    C257 :                     RAM_MsSystem	ds sizeof_mssys-RAM_MsSystem
(1)  148/    C261 :                     RAM_Local	ds MAX_MSERAM
(1)  149/    D261 :                     RAM_Global	ds sizeof_global-RAM_Global
(1)  150/    D262 :                     sizeof_msram	ds 1
(1)  152/    D263 :                     	
(1)  153/    D263 :                     	; --------------------------------
(1)  154/    D263 :                     	; Report RAM usage
(1)  155/    D263 :                     	; on pass 7
(1)  159/    D263 : (MACRO)             		finish
(1)  159/    C000 :                                     !org GLBL_LASTORG
(1)  159/       0 :                                     phase GLBL_LASTPC
(1)  160/       0 :                     
(1)  161/       0 :                     ; ====================================================================
(1)  162/       0 :                     ; ----------------------------------------------------------------
(1)  163/       0 :                     ; System RAM
(1)  164/       0 :                     ; ----------------------------------------------------------------
(1)  165/       0 :                     
(1)  166/       0 : (MACRO)             		struct RAM_MsSystem
(1)  166/       0 : =0H                 GLBL_LASTPC     eval $
(1)  166/       0 : =0H                 GLBL_LASTORG    eval $
(1)  166/       0 :                                     dephase
(1)  166/    C257 :                                     phase RAM_MSSYSTEM
(1)  167/    C257 :                     RAM_InputData	ds sizeof_input*2		; 2 controller buffers
(1)  168/    C25B :                     RAM_VBlank	ds 3
(1)  169/    C25E :                     RAM_HBlank	ds 3
(1)  170/    C261 :                     sizeof_mssys	ds 1
(1)  171/    C262 : (MACRO)             		finish
(1)  171/    C257 :                                     !org GLBL_LASTORG
(1)  171/       0 :                                     phase GLBL_LASTPC
(1)  172/       0 :                     
(1)  173/       0 :                     ; ====================================================================
(1)  174/       0 :                     ; ----------------------------------------------------------------
(1)  175/       0 :                     ; Video cache RAM
(1)  176/       0 :                     ; ----------------------------------------------------------------
(1)  177/       0 :                     
(1)  178/       0 : (MACRO)             		struct RAM_MsVideo
(1)  178/       0 : =0H                 GLBL_LASTPC     eval $
(1)  178/       0 : =0H                 GLBL_LASTORG    eval $
(1)  178/       0 :                                     dephase
(1)  178/    C156 :                                     phase RAM_MSVIDEO
(1)  179/    C156 :                     RAM_VidPrntList	ds MAX_PRNTLIST*3		; VDP address (WORD), type (BYTE)
(1)  180/    C186 :                     RAM_VidPrntVram	ds 2				; Current VRAM address for the Print routines
(1)  181/    C188 :                     RAM_VdpCache	ds 11
(1)  182/    C193 :                     RAM_SprtY	ds 64				; Y list
(1)  183/    C1D3 :                     RAM_SprtX	ds 64*2				; X list + char
(1)  184/    C253 :                     RAM_CurrSprY	ds 2
(1)  185/    C255 :                     RAM_CurrSprX	ds 2
(1)  186/    C257 :                     sizeof_msvid	ds 1
(1)  187/    C258 : (MACRO)             		finish
(1)  187/    C156 :                                     !org GLBL_LASTORG
(1)  187/       0 :                                     phase GLBL_LASTPC
(1)  188/       0 :                     		
(1)  189/       0 :                     ; ====================================================================
(1)  190/       0 :                     ; ----------------------------------------------------------------
(1)  191/       0 :                     ; Sound buffer RAM
(1)  192/       0 :                     ; ----------------------------------------------------------------
(1)  193/       0 :                     
(1)  194/       0 : (MACRO)             			struct RAM_MsSound
(1)  194/       0 : =0H                 GLBL_LASTPC     eval $
(1)  194/       0 : =0H                 GLBL_LASTORG    eval $
(1)  194/       0 :                                     dephase
(1)  194/    C000 :                                     phase RAM_MSSOUND
(1)  195/    C000 :                     SndBuff_Track_1		ds 20h
(1)  196/    C020 :                     SndBuff_Track_2		ds 20h
(1)  197/    C040 :                     SndBuff_ChnlBuff_1	ds 20h*MAX_CHNLS
(1)  198/    C0C0 :                     SndBuff_ChnlBuff_2	ds 20h*MAX_CHNLS
(1)  199/    C140 :                     SndBuff_UsedChnls	ds 10
(1)  200/    C14A :                     SndBuff_UsedChnls_2	ds 10
(1)  201/    C154 :                     curr_NoiseMode		ds 1
(1)  202/    C155 :                     curr_SndBank		ds 1
(1)  203/    C156 :                     sizeof_mssnd		ds 1
(1)  204/    C157 : (MACRO)             			finish
(1)  204/    C000 :                                     !org GLBL_LASTORG
(1)  204/       0 :                                     phase GLBL_LASTPC
(1)  205/       0 :                     
      19/       0 :                     		include "system/map.asm"	; Memory map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Memory map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; Banks are 4000h bytes long
(1)    7/       0 : =FFFCH              bank_ctrl	equ	0FFFCh
(1)    8/       0 : =FFFDH              bank_0		equ	0FFFDh		; First 1Kbytes (0000h-0400h) are locked to protect interrupts
(1)    9/       0 : =FFFEH              bank_1		equ	0FFFEh		;
(1)   10/       0 : =FFFFH              bank_2		equ	0FFFFh		; If bit 3 is set, Cartridge RAM will be mapped here instead.
(1)   11/       0 :                     
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     ; Ports
(1)   14/       0 :                     ; 
(1)   15/       0 :                     ; Remainder: only use these with IN and OUT
(1)   16/       0 :                     ; R - Read
(1)   17/       0 :                     ; W - Write
(1)   18/       0 :                     ; ----------------------------------------------------------------
(1)   19/       0 :                     
(1)   20/       0 : =3EH                memory_ctrl	equ	03Eh		; 
(1)   21/       0 : =3FH                joypad_ctrl	equ	03Fh		; R  | 
(1)   22/       0 : =7EH                v_counter	equ	07Eh
(1)   23/       0 : =7FH                psg_ctrl	equ	07Fh		; RW | if WRITE: psg register | if READ: h_counter
(1)   24/       0 : =BEH                vdp_data	equ	0BEh
(1)   25/       0 : =BFH                vdp_ctrl	equ	0BFh
(1)   26/       0 : =DCH                joypad_1	equ	0DCh
(1)   27/       0 : =DDH                joypad_2	equ	0DDh
(1)   28/       0 :                     
(1)   29/       0 :                     ; ------------------------------------------------
(1)   30/       0 :                     ; GAME GEAR ONLY
(1)   31/       0 :                     ; on Master System they probably just return -1
(1)   32/       0 :                     ; ------------------------------------------------
(1)   33/       0 :                     
(1)   34/       0 : =0H                 gg_info		equ	00h		; R  | SRN00000b (S-GG Start button | R-Region | N-NTSC/PAL)
(1)   35/       0 : =1H                 gg_ext_comm	equ	01h		; RW | EXT data if 7-bit mode is set
(1)   36/       0 : =2H                 gg_ext_bitdir	equ	02h		; RW | EXT data directions
(1)   37/       0 : =3H                 gg_serial_out	equ	03h		; RW | Serial data SEND port
(1)   38/       0 : =4H                 gg_serial_in	equ	04h		; R  | Serial data RECIEVE port
(1)   39/       0 : =5H                 gg_serial	equ	05h		; RW | Serial settings
(1)   40/       0 : =6H                 gg_stereo	equ	06h		;  W | PSG Stereo bits, set 0FFh if using Game Gear
(1)   41/       0 :                     
      20/       0 :                     		include "game/global.asm"	; Global variables and RAM
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Put your global structs/values here
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ====================================================================
(1)    7/       0 :                     ; --------------------------------------------------------
(1)    8/       0 :                     ; Structures
(1)    9/       0 :                     ; --------------------------------------------------------
(1)   10/       0 :                     
(1)   11/       0 :                     ; ====================================================================
(1)   12/       0 :                     ; --------------------------------------------------------
(1)   13/       0 :                     ; RAM
(1)   14/       0 :                     ; --------------------------------------------------------
(1)   15/       0 :                     
(1)   16/       0 : (MACRO)             		struct RAM_Global
(1)   16/       0 : =0H                 GLBL_LASTPC     eval $
(1)   16/       0 : =0H                 GLBL_LASTORG    eval $
(1)   16/       0 :                                     dephase
(1)   16/    D261 :                                     phase RAM_GLOBAL
(1)   17/    D261 :                     RAM_Glbl_Null	ds 1
(1)   18/    D262 :                     sizeof_global	ds 1
(1)   19/    D263 : (MACRO)             		finish
(1)   19/    D261 :                                     !org GLBL_LASTORG
(1)   19/       0 :                                     phase GLBL_LASTPC
(1)   20/       0 :                     		
(1)   21/       0 :                     
      21/       0 :                     
      22/       0 :                     ; ====================================================================
      23/       0 :                     ; DEFAULT BANK 0
      24/       0 :                     ; 0000-3FFFh
      25/       0 :                     ; 
      26/       0 :                     ; (0000-0400h is unaffected)
      27/       0 :                     ; ====================================================================
      28/       0 :                     
      29/       0 : F3                  		di				; Disable interrupts
      30/       1 : ED 56               		im	1			; Interrput mode 1 (standard)
      31/       3 : C3 00 18            		jp	MS_Init			; Go to MS_Init
      32/       6 :                     
      33/       6 :                     ; ====================================================================
      34/       6 :                     ; ----------------------------------------------------------------
      35/       6 :                     ; RST routines will go here (starting at 0008h)
      36/       6 :                     ; 
      37/       6 :                     ; aligned by 8
      38/       6 :                     ; ----------------------------------------------------------------
      39/       6 :                     
      40/       6 :                     		align 8
      41/       8 :                     
      42/       8 :                     ; ====================================================================
      43/       8 :                     ; ----------------------------------------------------------------
      44/       8 :                     ; VBlank and HBlank
      45/       8 :                     ; 
      46/       8 :                     ; located at 38h
      47/       8 :                     ; ----------------------------------------------------------------
      48/       8 :                     
      49/       8 :                     		align 38h			; Align to 38h, For interrupts
      50/      38 : F3                  		di				; Disable interrupts to prevent over-calling
      51/      39 : F5                  		push	af			; Save all these registers, including the shadow ones
      52/      3A : DB BF               		in	a,(vdp_ctrl)
      53/      3C : 07                  		rlca
      54/      3D : DA 48 00            		jp	c,.vint
      55/      40 : F6 80               		or	80h
      56/      42 : C2 48 00            		jp	nz,.vint
      57/      45 : C3 5E C2            		jp	(RAM_HBlank)
      58/      48 :                     .vint:
      59/      48 : C3 5B C2            		jp	(RAM_VBlank)
      60/      4B :                     		
      61/      4B :                     ; ====================================================================
      62/      4B :                     ; ----------------------------------------------------------------
      63/      4B :                     ; Master System PAUSE Button interrupt
      64/      4B :                     ; 
      65/      4B :                     ; at address 0066h
      66/      4B :                     ; ----------------------------------------------------------------
      67/      4B :                     
      68/      4B :                     		align 66h
      69/      66 : C9                  		ret
      70/      67 :                     
      71/      67 :                     ; ====================================================================
      72/      67 :                     ; ----------------------------------------------------------------
      73/      67 :                     ; Default VBlank
      74/      67 :                     ; ----------------------------------------------------------------
      75/      67 :                     
      76/      67 :                     MS_VInt:
      77/      67 : DD E5               		push	ix
      78/      69 : FD E5               		push	iy
      79/      6B : C5                  		push	bc
      80/      6C : D5                  		push	de
      81/      6D : E5                  		push	hl
      82/      6E : D9                  		exx
      83/      6F : C5                  		push	bc
      84/      70 : D5                  		push	de
      85/      71 : E5                  		push	hl
      86/      72 :                     		
      87/      72 : CD B9 00            		call	Sound_Run
      88/      75 :                     
      89/      75 : E1                  		pop	hl
      90/      76 : D1                  		pop	de
      91/      77 : C1                  		pop	bc
      92/      78 : D9                  		exx
      93/      79 : E1                  		pop	hl
      94/      7A : D1                  		pop	de
      95/      7B : C1                  		pop	bc
      96/      7C : FD E1               		pop	iy
      97/      7E : DD E1               		pop	ix
      98/      80 : F1                  		pop	af
      99/      81 : FB                  		ei				; Re-enable interrupts before exiting
     100/      82 : C9                  		ret				; Return
     101/      83 :                     		
     102/      83 :                     ; ====================================================================
     103/      83 :                     ; ----------------------------------------------------------------
     104/      83 :                     ; Default HBlank
     105/      83 :                     ; ----------------------------------------------------------------
     106/      83 :                     
     107/      83 :                     MS_HInt:
     108/      83 : F1                  		pop	af
     109/      84 : FB                  		ei				; Re-enable interrupts before exiting
     110/      85 : C9                  		ret				; Return
     111/      86 :                     
     112/      86 :                     ; ====================================================================
     113/      86 :                     ; ----------------------------------------------------------------
     114/      86 :                     ; System functions
     115/      86 :                     ; ----------------------------------------------------------------
     116/      86 :                     
     117/      86 :                     		include "system/sound.asm"	; Sound
(1)    1/      86 :                     ; ====================================================================
(1)    2/      86 :                     ; ----------------------------------------------------------------
(1)    3/      86 :                     ; Sound
(1)    4/      86 :                     ; ----------------------------------------------------------------
(1)    5/      86 :                     
(1)    6/      86 :                     ; ============================================================
(1)    7/      86 :                     ; --------------------------------------------------------
(1)    8/      86 :                     ; Init Sound
(1)    9/      86 :                     ; --------------------------------------------------------
(1)   10/      86 :                     
(1)   11/      86 :                     Sound_Init:
(1)   12/      86 : 3E 9F               		ld	a,09Fh
(1)   13/      88 : D3 7F               		out	(psg_ctrl),a			; Set PSG1 Volume to OFF
(1)   14/      8A : 3E BF               		ld	a,0BFh
(1)   15/      8C : D3 7F               		out	(psg_ctrl),a			; Set PSG2 Volume to OFF
(1)   16/      8E : 3E DF               		ld	a,0DFh
(1)   17/      90 : D3 7F               		out	(psg_ctrl),a			; Set PSG3 Volume to OFF
(1)   18/      92 : 3E FF               		ld	a,0FFh
(1)   19/      94 : D3 7F               		out	(psg_ctrl),a			; Set NOISE Volume to OFF
(1)   20/      96 :                     		; YM silence goes here
(1)   21/      96 :                     	
(1)   22/      96 :                     	; Init driver buffers
(1)   23/      96 : 21 30 C0            		ld	hl,SndBuff_Track_2+trck_Priority
(1)   24/      99 : 36 01               		ld	(hl),1
(1)   25/      9B : DD 21 40 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   26/      9F : FD 21 C0 C0         		ld	iy,SndBuff_ChnlBuff_2
(1)   27/      A3 : 06 04               		ld	b,4
(1)   28/      A5 : 11 20 00            		ld	de,20h
(1)   29/      A8 : 3E 80               		ld	a,80h
(1)   30/      AA :                     .nxtchnl:
(1)   31/      AA : DD 77 00            		ld	(ix+chnl_Chip),a
(1)   32/      AD : FD 77 00            		ld	(iy+chnl_Chip),a
(1)   33/      B0 : C6 20               		add 	a,20h
(1)   34/      B2 : DD 19               		add 	ix,de
(1)   35/      B4 : FD 19               		add 	iy,de
(1)   36/      B6 : 10 F2               		djnz	.nxtchnl
(1)   37/      B8 : C9                  		ret
(1)   38/      B9 :                     
(1)   39/      B9 :                     ; ============================================================
(1)   40/      B9 :                     ; --------------------------------------------------------
(1)   41/      B9 :                     ; Init Sound
(1)   42/      B9 :                     ; --------------------------------------------------------
(1)   43/      B9 :                     
(1)   44/      B9 :                     Sound_Run:
(1)   45/      B9 :                     ; 		ld	a,(curr_SndBank)		; TODO: bankswitch
(1)   46/      B9 :                     ; 		rst 	8
(1)   47/      B9 : FD 21 00 C0         		ld	iy,SndBuff_Track_1
(1)   48/      BD : DD 21 40 C0         		ld	ix,SndBuff_ChnlBuff_1
(1)   49/      C1 : CD 1A 01            		call	SndDrv_ReadTrack
(1)   50/      C4 : FD 21 20 C0         		ld	iy,SndBuff_Track_2
(1)   51/      C8 : DD 21 C0 C0         		ld	ix,SndBuff_ChnlBuff_2
(1)   52/      CC : C3 1A 01            		jp	SndDrv_ReadTrack
(1)   53/      CF :                     
(1)   54/      CF :                     ; ===================================================================
(1)   55/      CF :                     ; ----------------------------------------------------
(1)   56/      CF :                     ; Subs
(1)   57/      CF :                     ; ----------------------------------------------------
(1)   58/      CF :                     
(1)   59/      CF :                     ; --------------------------------------------------------
(1)   60/      CF :                     ; Sound_SetTrack
(1)   61/      CF :                     ; 
(1)   62/      CF :                     ; Input:
(1)   63/      CF :                     ; hl | Track data array:
(1)   64/      CF :                     ; 		dw blocks
(1)   65/      CF :                     ;		dw pattern
(1)   66/      CF :                     ;		dw instruments
(1)   67/      CF :                     ;		
(1)   68/      CF :                     ;  a | Track slot
(1)   69/      CF :                     ;  b | Music bank
(1)   70/      CF :                     ;  c | Block start
(1)   71/      CF :                     ;  d | Tempo bits
(1)   72/      CF :                     ;  e | Ticks
(1)   73/      CF :                     ; --------------------------------------------------------
(1)   74/      CF :                     
(1)   75/      CF :                     Sound_SetTrack:
(1)   76/      CF : FD 21 00 C0         		ld	iy,SndBuff_Track_1
(1)   77/      D3 : B7                  		or	a
(1)   78/      D4 : CA DB 00            		jp	z,.sfx_prio
(1)   79/      D7 : FD 21 20 C0         		ld	iy,SndBuff_Track_2
(1)   80/      DB :                     .sfx_prio:
(1)   81/      DB : FD 70 09            		ld	(iy+trck_ReqSndBnk),b
(1)   82/      DE : FD 71 08            		ld	(iy+trck_ReqCurrBlk),c
(1)   83/      E1 : FD 72 07            		ld	(iy+trck_ReqTempo),d
(1)   84/      E4 : FD 73 06            		ld	(iy+trck_ReqTicks),e
(1)   85/      E7 :                     
(1)   86/      E7 : 7E                  		ld	a,(hl)
(1)   87/      E8 : FD 77 00            		ld	(iy+trck_ReqBlk),a
(1)   88/      EB : 23                  		inc 	hl
(1)   89/      EC : 7E                  		ld	a,(hl)
(1)   90/      ED : FD 77 01            		ld	(iy+(trck_ReqBlk+1)),a
(1)   91/      F0 : 23                  		inc 	hl
(1)   92/      F1 :                     
(1)   93/      F1 : 7E                  		ld	a,(hl)
(1)   94/      F2 : FD 77 02            		ld	(iy+trck_ReqPatt),a
(1)   95/      F5 : 23                  		inc 	hl
(1)   96/      F6 : 7E                  		ld	a,(hl)
(1)   97/      F7 : FD 77 03            		ld	(iy+(trck_ReqPatt+1)),a
(1)   98/      FA : 23                  		inc 	hl
(1)   99/      FB :                     		
(1)  100/      FB : 7E                  		ld	a,(hl)
(1)  101/      FC : FD 77 04            		ld	(iy+trck_ReqIns),a
(1)  102/      FF : 23                  		inc 	hl
(1)  103/     100 : 7E                  		ld	a,(hl)
(1)  104/     101 : FD 77 05            		ld	(iy+(trck_ReqIns+1)),a
(1)  105/     104 :                     
(1)  106/     104 : FD 36 0A 01         		ld	(iy+trck_ReqFlag),1		; Request $01, set and play song
(1)  107/     108 : C9                  		ret
(1)  108/     109 :                     		
(1)  109/     109 :                     ; --------------------------------------------------------
(1)  110/     109 :                     ; Sound_Stop
(1)  111/     109 :                     ; 
(1)  112/     109 :                     ; Input:
(1)  113/     109 :                     ;  a | Track slot
(1)  114/     109 :                     ; --------------------------------------------------------
(1)  115/     109 :                     
(1)  116/     109 :                     Sound_StopTrack:
(1)  117/     109 : DD 21 00 C0         		ld	ix,SndBuff_Track_1
(1)  118/     10D : B7                  		or	a
(1)  119/     10E : CA 15 01            		jp	z,.sfx_prio
(1)  120/     111 : DD 21 20 C0         		ld	ix,SndBuff_Track_2
(1)  121/     115 :                     .sfx_prio:
(1)  122/     115 : DD 36 0A 02         		ld	(ix+trck_ReqFlag),2		; Request $02
(1)  123/     119 : C9                  		ret
(1)  124/     11A :                     
(1)  125/     11A :                     ; ===================================================================
(1)  126/     11A :                     ; ------------------------------------
(1)  127/     11A :                     ; Read track
(1)  128/     11A :                     ; 
(1)  129/     11A :                     ; iy - Pattern buffer
(1)  130/     11A :                     ; ix - Channel list
(1)  131/     11A :                     ; ------------------------------------
(1)  132/     11A :                     
(1)  133/     11A :                     SndDrv_ReadTrack:
(1)  134/     11A : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1)  135/     11D : B7                  		or	a
(1)  136/     11E : C4 BD 06            		call	nz,SndDrv_ReqTrack
(1)  137/     121 : FD 7E 11            		ld	a,(iy+trck_Active)
(1)  138/     124 : B7                  		or	a
(1)  139/     125 : C8                  		ret	z
(1)  140/     126 :                     
(1)  141/     126 : FD 7E 1D            		ld	a,(iy+trck_TempoBits)
(1)  142/     129 : 0F                  		rrca
(1)  143/     12A : FD 77 1D            		ld	(iy+trck_TempoBits),a
(1)  144/     12D : DA 3E 01            		jp	c,.force_on
(1)  145/     130 : FD 7E 0D            		ld	a,(iy+trck_TicksRead)
(1)  146/     133 : 3D                  		dec	a
(1)  147/     134 : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  148/     137 : F0                  		ret	p
(1)  149/     138 : FD 7E 1F            		ld	a,(iy+trck_TicksCurr)		; save Ticks
(1)  150/     13B : FD 77 0D            		ld	(iy+trck_TicksRead),a
(1)  151/     13E :                     .force_on:
(1)  152/     13E : FD 7E 1E            		ld	a,(iy+trck_RowWait)		; row countdown
(1)  153/     141 : 3D                  		dec	a
(1)  154/     142 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  155/     145 : F2 19 02            		jp	p,.row_countdwn
(1)  156/     148 : FD 36 1E 00         		ld	(iy+trck_RowWait),0
(1)  157/     14C :                     		
(1)  158/     14C :                     ; ------------------------------
(1)  159/     14C :                     ; check for new track data
(1)  160/     14C :                     ; ------------------------------
(1)  161/     14C :                     
(1)  162/     14C : FD 5E 1A            		ld	e,(iy+trck_RowSteps)		; Row finished?
(1)  163/     14F : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  164/     152 : 7B                  		ld	a,e
(1)  165/     153 : B2                  		or	d
(1)  166/     154 : C2 9C 01            		jp	nz,.dontupd_trck
(1)  167/     157 :                     .trck_restart:
(1)  168/     157 : 11 00 00            		ld	de,0
(1)  169/     15A : FD 5E 0E            		ld	e,(iy+trck_BlockCurr)
(1)  170/     15D : FD 6E 12            		ld	l,(iy+trck_Blocks)
(1)  171/     160 : FD 66 13            		ld	h,(iy+(trck_Blocks+1))
(1)  172/     163 : 4D                  		ld	c,l				; bc - copy of hl
(1)  173/     164 : 44                  		ld	b,h
(1)  174/     165 : 19                  		add 	hl,de
(1)  175/     166 : 7E                  		ld	a,(hl)
(1)  176/     167 : FE FE               		cp	0FEh
(1)  177/     169 : CC 03 02            		call	z,.skip_block
(1)  178/     16C : FE FF               		cp	0FFh				; End of song marker? 0FFh
(1)  179/     16E : CA 07 02            		jp	z,.stop_track
(1)  180/     171 : 87                  		add 	a,a
(1)  181/     172 : 87                  		add 	a,a
(1)  182/     173 : 23                  		inc 	hl
(1)  183/     174 : FD 34 0E            		inc 	(iy+trck_BlockCurr)
(1)  184/     177 : 11 00 00            		ld	de,0
(1)  185/     17A : 5F                  		ld	e,a
(1)  186/     17B : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  187/     17E : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  188/     181 : 19                  		add 	hl,de
(1)  189/     182 : 4E                  		ld	c,(hl)
(1)  190/     183 : 23                  		inc 	hl
(1)  191/     184 : 46                  		ld	b,(hl)
(1)  192/     185 : 23                  		inc 	hl
(1)  193/     186 : 5E                  		ld	e,(hl)
(1)  194/     187 : 23                  		inc 	hl
(1)  195/     188 : 56                  		ld	d,(hl)
(1)  196/     189 : FD 6E 14            		ld	l,(iy+trck_PattBase)
(1)  197/     18C : FD 66 15            		ld	h,(iy+(trck_PattBase+1))
(1)  198/     18F : 09                  		add 	hl,bc
(1)  199/     190 : FD 75 18            		ld	(iy+trck_PattRead),l
(1)  200/     193 : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  201/     196 : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  202/     199 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  203/     19C :                     .dontupd_trck:
(1)  204/     19C : FD 6E 18            		ld	l,(iy+trck_PattRead)		; Set last read point
(1)  205/     19F : FD 66 19            		ld	h,(iy+(trck_PattRead+1))
(1)  206/     1A2 :                     
(1)  207/     1A2 :                     ; ------------------------------
(1)  208/     1A2 :                     ; Check timer or note data
(1)  209/     1A2 :                     ; ------------------------------
(1)  210/     1A2 : 7E                  		ld	a,(hl)
(1)  211/     1A3 : B7                  		or	a
(1)  212/     1A4 : F2 0F 02            		jp	p,.set_timer
(1)  213/     1A7 :                     .loop_me:
(1)  214/     1A7 : 23                  		inc	hl
(1)  215/     1A8 : 4F                  		ld	c,a
(1)  216/     1A9 : E6 3F               		and	00111111b
(1)  217/     1AB : 11 00 00            		ld	de,0			; size 20h
(1)  218/     1AE : 5F                  		ld	e,a
(1)  219/     1AF : E6 18               		and	00011000b
(1)  220/     1B1 : 0F                  		rrca
(1)  221/     1B2 : 0F                  		rrca
(1)  222/     1B3 : 0F                  		rrca
(1)  223/     1B4 : 57                  		ld	d,a
(1)  224/     1B5 : 7B                  		ld	a,e
(1)  225/     1B6 : E6 07               		and	00000111b
(1)  226/     1B8 : 0F                  		rrca
(1)  227/     1B9 : 0F                  		rrca
(1)  228/     1BA : 0F                  		rrca
(1)  229/     1BB : 5F                  		ld	e,a
(1)  230/     1BC : DD E5               		push	ix			; Save channel buffer
(1)  231/     1BE : DD 19               		add	ix,de
(1)  232/     1C0 : CB 71               		bit 	6,c
(1)  233/     1C2 : CA CA 01            		jp	z,.keep_ctrl
(1)  234/     1C5 : 7E                  		ld	a,(hl)
(1)  235/     1C6 : 23                  		inc	hl
(1)  236/     1C7 : DD 77 01            		ld	(ix+chnl_Type),a
(1)  237/     1CA :                     .keep_ctrl:
(1)  238/     1CA : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  239/     1CD : 0F                  		rrca
(1)  240/     1CE : D2 D6 01            		jp	nc,.no_note
(1)  241/     1D1 : 4E                  		ld	c,(hl)			; Note
(1)  242/     1D2 : 23                  		inc 	hl
(1)  243/     1D3 : DD 71 02            		ld	(ix+chnl_Note),c
(1)  244/     1D6 :                     .no_note:
(1)  245/     1D6 : 0F                  		rrca				; Instrument
(1)  246/     1D7 : D2 DF 01            		jp	nc,.no_inst
(1)  247/     1DA : 4E                  		ld	c,(hl)
(1)  248/     1DB : 23                  		inc 	hl
(1)  249/     1DC : DD 71 03            		ld	(ix+chnl_Ins),c
(1)  250/     1DF :                     .no_inst:
(1)  251/     1DF : 0F                  		rrca				; Volume
(1)  252/     1E0 : D2 E8 01            		jp	nc,.no_vol
(1)  253/     1E3 : 4E                  		ld	c,(hl)
(1)  254/     1E4 : 23                  		inc 	hl
(1)  255/     1E5 : DD 71 04            		ld	(ix+chnl_Vol),c
(1)  256/     1E8 :                     .no_vol:
(1)  257/     1E8 : 0F                  		rrca				; Effect
(1)  258/     1E9 : D2 F6 01            		jp	nc,.no_eff
(1)  259/     1EC : 4E                  		ld	c,(hl)
(1)  260/     1ED : 23                  		inc 	hl
(1)  261/     1EE : DD 71 05            		ld	(ix+chnl_EffId),c
(1)  262/     1F1 : 4E                  		ld	c,(hl)
(1)  263/     1F2 : 23                  		inc 	hl
(1)  264/     1F3 : DD 71 06            		ld	(ix+chnl_EffArg),c
(1)  265/     1F6 :                     .no_eff:
(1)  266/     1F6 : CD C8 02            		call	.chip_setup
(1)  267/     1F9 : DD E1               		pop	ix			; Restore channel buffer
(1)  268/     1FB : 7E                  		ld	a,(hl)
(1)  269/     1FC : B7                  		or	a
(1)  270/     1FD : CA 12 02            		jp	z,.exit_notes
(1)  271/     200 : C3 A7 01            		jp	.loop_me
(1)  272/     203 :                     		
(1)  273/     203 :                     ; ------------------------------
(1)  274/     203 :                     ; block 0FEh
(1)  275/     203 :                     ; skip block
(1)  276/     203 :                     ; ------------------------------
(1)  277/     203 :                     
(1)  278/     203 :                     ; TODO ver que es esto
(1)  279/     203 :                     ; en OpenMPT
(1)  280/     203 :                     .skip_block:
(1)  281/     203 : FD 34 0E            		inc	(iy+trck_BlockCurr)
(1)  282/     206 : C9                  		ret
(1)  283/     207 :                     		
(1)  284/     207 :                     ; ------------------------------
(1)  285/     207 :                     ; block 0FFh
(1)  286/     207 :                     ; end of tracks
(1)  287/     207 :                     ; ------------------------------
(1)  288/     207 :                     
(1)  289/     207 :                     .stop_track:
(1)  290/     207 : CD 3B 07            		call	SndDrv_ResetChan
(1)  291/     20A : FD 36 11 00         		ld	(iy+trck_Active),0
(1)  292/     20E : C9                  		ret
(1)  293/     20F :                     
(1)  294/     20F :                     ; ------------------------------
(1)  295/     20F :                     ; Set ROW wait timer
(1)  296/     20F :                     ; 
(1)  297/     20F :                     ; if a = 00h-7Fh
(1)  298/     20F :                     ; ------------------------------
(1)  299/     20F :                     
(1)  300/     20F :                     .set_timer:
(1)  301/     20F : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  302/     212 :                     
(1)  303/     212 :                     ; ------------------------------
(1)  304/     212 :                     ; Note pack exit
(1)  305/     212 :                     ; ------------------------------
(1)  306/     212 :                     
(1)  307/     212 :                     .exit_notes:
(1)  308/     212 : 23                  		inc 	hl
(1)  309/     213 :                     .exit_busy:
(1)  310/     213 : FD 75 18            		ld	(iy+trck_PattRead),l		; Save new read point
(1)  311/     216 : FD 74 19            		ld	(iy+(trck_PattRead+1)),h
(1)  312/     219 :                     
(1)  313/     219 :                     ; ------------------------------
(1)  314/     219 :                     ; Decrement rows
(1)  315/     219 :                     ; ------------------------------
(1)  316/     219 :                     
(1)  317/     219 :                     .row_countdwn:
(1)  318/     219 : FD 5E 1A            		ld	e,(iy+trck_RowSteps)
(1)  319/     21C : FD 56 1B            		ld	d,(iy+(trck_RowSteps+1))
(1)  320/     21F : 1B                  		dec 	de
(1)  321/     220 : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  322/     223 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  323/     226 :                     		
(1)  324/     226 :                     ; --------------------------------
(1)  325/     226 :                     ; Update PSG manually
(1)  326/     226 :                     ; --------------------------------
(1)  327/     226 :                     
(1)  328/     226 : CD 4D 02            		call	.psg_envlope
(1)  329/     229 : 11 20 00            		ld	de,20h
(1)  330/     22C : DD 19               		add 	ix,de
(1)  331/     22E : CD 4D 02            		call	.psg_envlope
(1)  332/     231 : 11 40 00            		ld	de,40h			; go to NOISE first
(1)  333/     234 : DD 19               		add 	ix,de
(1)  334/     236 : CD 4D 02            		call	.psg_envlope
(1)  335/     239 : 11 E0 FF            		ld	de,-20h			; back to PSG3
(1)  336/     23C : DD 19               		add 	ix,de
(1)  337/     23E : 3A 54 C1            		ld	a,(curr_NoiseMode)
(1)  338/     241 : E6 03               		and	00000011b
(1)  339/     243 : FE 03               		cp	3
(1)  340/     245 : C2 4D 02            		jp	nz,.psg_envlope
(1)  341/     248 : 3E DF               		ld	a,0DFh
(1)  342/     24A : D3 7F               		out	(psg_ctrl),a
(1)  343/     24C : C9                  		ret
(1)  344/     24D :                     
(1)  345/     24D :                     ; --------------------------------
(1)  346/     24D :                     
(1)  347/     24D :                     .psg_envlope:
(1)  348/     24D : CD A0 03            		call	.search_slot
(1)  349/     250 : D8                  		ret	c
(1)  350/     251 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  351/     254 : B7                  		or	a
(1)  352/     255 : C8                  		ret	z
(1)  353/     256 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  354/     259 : 57                  		ld	d,a
(1)  355/     25A : FE E0               		cp	0E0h
(1)  356/     25C : C2 6F 02            		jp	nz,.not_noise
(1)  357/     25F : 3A 54 C1            		ld	a,(curr_NoiseMode)
(1)  358/     262 : FD 4E 0C            		ld	c,(iy+trck_PsgNoise)
(1)  359/     265 : B9                  		cp	c
(1)  360/     266 : CA 6F 02            		jp	z,.not_noise
(1)  361/     269 : 79                  		ld	a,c
(1)  362/     26A : 32 54 C1            		ld	(curr_NoiseMode),a
(1)  363/     26D : D3 7F               		out	(psg_ctrl),a
(1)  364/     26F :                     .not_noise:
(1)  365/     26F : 7A                  		ld	a,d
(1)  366/     270 : F6 1F               		or	1Fh
(1)  367/     272 : 5F                  		ld	e,a
(1)  368/     273 : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  369/     276 : FE FF               		cp	-1
(1)  370/     278 : CA C4 02            		jp	z,.set_vol
(1)  371/     27B : FE FE               		cp	-2
(1)  372/     27D : CA C4 02            		jp	z,.set_vol
(1)  373/     280 : FE F6               		cp	-10
(1)  374/     282 : CA C4 02            		jp	z,.set_vol
(1)  375/     285 :                     
(1)  376/     285 : DD 7E 1C            		ld	a,(ix+chnl_PsgOutFreq)
(1)  377/     288 : B7                  		or	a
(1)  378/     289 : CA 97 02            		jp	z,.no_upd_freq
(1)  379/     28C : D3 7F               		out	(psg_ctrl),a
(1)  380/     28E : AF                  		xor	a
(1)  381/     28F : DD 77 1C            		ld	(ix+chnl_PsgOutFreq),a
(1)  382/     292 : DD 7E 1D            		ld	a,(ix+(chnl_PsgOutFreq+1))
(1)  383/     295 : D3 7F               		out	(psg_ctrl),a
(1)  384/     297 :                     .no_upd_freq:
(1)  385/     297 :                     
(1)  386/     297 : DD 66 08            		ld	h,(ix+(chnl_InsAddr+1))
(1)  387/     29A : DD 6E 07            		ld	l,(ix+chnl_InsAddr)
(1)  388/     29D : DD 5E 12            		ld	e,(ix+chnl_PsgVolBase)		; Set volume
(1)  389/     2A0 : 01 00 00            		ld	bc,0
(1)  390/     2A3 : DD 4E 14            		ld	c,(ix+chnl_PsgIndx)
(1)  391/     2A6 : 09                  		add 	hl,bc
(1)  392/     2A7 : 7E                  		ld	a,(hl)
(1)  393/     2A8 : FE FF               		cp	-1
(1)  394/     2AA : CA B3 02            		jp	z,.last_env
(1)  395/     2AD : DD 77 13            		ld	(ix+chnl_PsgVolEnv),a
(1)  396/     2B0 : DD 34 14            		inc 	(ix+chnl_PsgIndx)
(1)  397/     2B3 :                     .last_env:
(1)  398/     2B3 : DD 7E 13            		ld	a,(ix+chnl_PsgVolEnv)
(1)  399/     2B6 : 83                  		add 	a,e
(1)  400/     2B7 : 5F                  		ld	e,a
(1)  401/     2B8 : E6 F0               		and	11110000b
(1)  402/     2BA : CA BF 02            		jp	z,.no_max
(1)  403/     2BD : 1E 0F               		ld	e,00001111b
(1)  404/     2BF :                     .no_max:
(1)  405/     2BF : 7B                  		ld	a,e
(1)  406/     2C0 : F6 10               		or	00010000b
(1)  407/     2C2 : B2                  		or	d
(1)  408/     2C3 : 5F                  		ld	e,a
(1)  409/     2C4 :                     .set_vol:
(1)  410/     2C4 : 7B                  		ld	a,e
(1)  411/     2C5 : D3 7F               		out	(psg_ctrl),a
(1)  412/     2C7 :                     .next_psg:
(1)  413/     2C7 : C9                  		ret
(1)  414/     2C8 :                     
(1)  415/     2C8 :                     ; ------------------------------------
(1)  416/     2C8 :                     ; Set chip
(1)  417/     2C8 :                     ; 
(1)  418/     2C8 :                     ; iy - track buffer
(1)  419/     2C8 :                     ; ix - current channel
(1)  420/     2C8 :                     ; ------------------------------------
(1)  421/     2C8 :                     
(1)  422/     2C8 :                     .chip_setup:
(1)  423/     2C8 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  424/     2CB : E6 07               		and	111b
(1)  425/     2CD : FE 03               		cp	3
(1)  426/     2CF : C8                  		ret	z			; 03h invalid channel
(1)  427/     2D0 :                     
(1)  428/     2D0 :                     ; ---------------------------------------------
(1)  429/     2D0 :                     ; Track channel list:
(1)  430/     2D0 :                     ; FM1 FM2 FM4 FM5 FM3 FM6 PSG1 PSG2 PSG3 NOISE
(1)  431/     2D0 :                     ; ---------------------------------------------
(1)  432/     2D0 :                     
(1)  433/     2D0 : E5                  		push	hl
(1)  434/     2D1 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Instrument
(1)  435/     2D4 : CB 6F               		bit	5,a
(1)  436/     2D6 : C2 DE 02            		jp	nz,.use_newinst
(1)  437/     2D9 : E6 02               		and	0010b
(1)  438/     2DB : CA 19 03            		jp	z,.no_newinst
(1)  439/     2DE :                     .use_newinst:
(1)  440/     2DE : CD 6F 05            		call	.grab_instslot
(1)  441/     2E1 : 7E                  		ld	a,(hl)
(1)  442/     2E2 : FE FF               		cp	-1
(1)  443/     2E4 : CA 19 03            		jp	z,.no_newinst
(1)  444/     2E7 : DD 77 0B            		ld	(ix+chnl_InsType),a
(1)  445/     2EA : 23                  		inc	hl
(1)  446/     2EB : 7E                  		ld	a,(hl)
(1)  447/     2EC : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1)  448/     2EF : 23                  		inc	hl
(1)  449/     2F0 : 7E                  		ld	a,(hl)
(1)  450/     2F1 : DD 77 07            		ld	(ix+chnl_InsAddr),a
(1)  451/     2F4 : 23                  		inc	hl
(1)  452/     2F5 : 7E                  		ld	a,(hl)
(1)  453/     2F6 : DD 77 08            		ld	(ix+(chnl_InsAddr+1)),a
(1)  454/     2F9 :                     		
(1)  455/     2F9 : DD 7E 00            		ld	a,(ix+chnl_Chip)	; PSG instr are external
(1)  456/     2FC : B7                  		or	a
(1)  457/     2FD : FA 06 03            		jp	m,.psg_instr
(1)  458/     300 : CD B3 05            		call	.set_fm_ins
(1)  459/     303 : C3 19 03            		jp	.no_newinst
(1)  460/     306 :                     .psg_instr:
(1)  461/     306 : FE E0               		cp	0E0h
(1)  462/     308 : C2 19 03            		jp	nz,.no_newinst
(1)  463/     30B : DD 7E 0B            		ld	a,(ix+chnl_InsType)	; Set new noise type
(1)  464/     30E : 4F                  		ld	c,a
(1)  465/     30F : E6 E0               		and 	0E0h
(1)  466/     311 : FE E0               		cp	0E0h
(1)  467/     313 : C2 19 03            		jp	nz,.no_newinst
(1)  468/     316 : FD 71 0C            		ld	(iy+trck_PsgNoise),c	; to TRACK buffer
(1)  469/     319 :                     .no_newinst:
(1)  470/     319 :                     		
(1)  471/     319 :                     	; ---------------------------------------------
(1)  472/     319 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Effect
(1)  473/     31C : CB 7F               		bit	7,a
(1)  474/     31E : C2 26 03            		jp	nz,.use_neweff
(1)  475/     321 : E6 08               		and	1000b
(1)  476/     323 : CA 32 03            		jp	z,.no_neweff
(1)  477/     326 :                     .use_neweff:	
(1)  478/     326 : CD 61 04            		call	.set_effect
(1)  479/     329 : CD A0 03            		call	.search_slot
(1)  480/     32C : DA 32 03            		jp	c,.no_neweff
(1)  481/     32F : CD 18 06            		call	.run_effect
(1)  482/     332 :                     .no_neweff:
(1)  483/     332 :                     
(1)  484/     332 :                     	; ---------------------------------------------
(1)  485/     332 : DD 7E 01            		ld	a,(ix+chnl_Type)	; Note
(1)  486/     335 : 5F                  		ld	e,a
(1)  487/     336 : CB 67               		bit	4,a
(1)  488/     338 : C2 40 03            		jp	nz,.use_notereq
(1)  489/     33B : E6 01               		and	0001b
(1)  490/     33D : CA 55 03            		jp	z,.no_notereq
(1)  491/     340 :                     .use_notereq:
(1)  492/     340 : CD 6F 05            		call	.grab_instslot
(1)  493/     343 : 7E                  		ld	a,(hl)
(1)  494/     344 : FE FF               		cp	-1
(1)  495/     346 : CA 55 03            		jp	z,.no_notereq
(1)  496/     349 :                     
(1)  497/     349 : CD D9 03            		call	.set_frequency
(1)  498/     34C : CD A0 03            		call	.search_slot
(1)  499/     34F : DA 55 03            		jp	c,.no_notereq
(1)  500/     352 : CD 85 05            		call	.run_frequency
(1)  501/     355 :                     .no_notereq:
(1)  502/     355 :                     
(1)  503/     355 :                     	; ------------------------------------
(1)  504/     355 : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  505/     358 : CB 77               		bit	6,a			; Volume
(1)  506/     35A : C2 62 03            		jp	nz,.use_newvol
(1)  507/     35D : E6 04               		and	0100b
(1)  508/     35F : CA 71 03            		jp	z,.no_newvol
(1)  509/     362 :                     .use_newvol:
(1)  510/     362 : DD 46 04            		ld	b,(ix+chnl_Vol)
(1)  511/     365 : DD 70 17            		ld	(ix+chnl_EfNewVol),b
(1)  512/     368 : CD A0 03            		call	.search_slot
(1)  513/     36B : DA 71 03            		jp	c,.no_newvol
(1)  514/     36E : CD CB 03            		call	.set_volume
(1)  515/     371 :                     .no_newvol:
(1)  516/     371 :                     
(1)  517/     371 :                     	; ---------------------------------------------
(1)  518/     371 :                     	; Mark active SFX channels
(1)  519/     371 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  520/     374 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  521/     377 : B7                  		or	a
(1)  522/     378 : CA 7E 03            		jp	z,.lowprioset
(1)  523/     37B : 21 4A C1            		ld	hl,SndBuff_UsedChnls_2
(1)  524/     37E :                     .lowprioset:	
(1)  525/     37E : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  526/     381 : B7                  		or	a
(1)  527/     382 : F2 8F 03            		jp	p,.plusfm
(1)  528/     385 : 07                  		rlca
(1)  529/     386 : 07                  		rlca
(1)  530/     387 : 07                  		rlca
(1)  531/     388 : E6 03               		and	00000011b
(1)  532/     38A : C6 06               		add 	a,6
(1)  533/     38C : C3 95 03            		jp	.leftfm
(1)  534/     38F :                     .plusfm:
(1)  535/     38F : CB 57               		bit 	2,a
(1)  536/     391 : CA 95 03            		jp	z,.leftfm
(1)  537/     394 : 3D                  		dec	a
(1)  538/     395 :                     .leftfm:
(1)  539/     395 : 11 00 00            		ld	de,0
(1)  540/     398 : 5F                  		ld	e,a
(1)  541/     399 : 19                  		add 	hl,de
(1)  542/     39A : DD 7E 01            		ld	a,(ix+chnl_Type)
(1)  543/     39D : 77                  		ld	(hl),a
(1)  544/     39E :                     
(1)  545/     39E :                     	; ---------------------------------------------
(1)  546/     39E :                     
(1)  547/     39E : E1                  		pop	hl
(1)  548/     39F : C9                  		ret
(1)  549/     3A0 :                     
(1)  550/     3A0 :                     ; ------------------------------------
(1)  551/     3A0 :                     ; Check if slot is busy
(1)  552/     3A0 :                     ; 
(1)  553/     3A0 :                     ; Returns:
(1)  554/     3A0 :                     ;  c - Channel is busy
(1)  555/     3A0 :                     ; nc - Channel is free or
(1)  556/     3A0 :                     ;      ignore (BGM only)
(1)  557/     3A0 :                     ; ------------------------------------
(1)  558/     3A0 :                     
(1)  559/     3A0 :                     .search_slot:
(1)  560/     3A0 : 3F                  		ccf
(1)  561/     3A1 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  562/     3A4 : B7                  		or	a
(1)  563/     3A5 : C8                  		ret 	z
(1)  564/     3A6 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  565/     3A9 : B7                  		or	a
(1)  566/     3AA : F2 B7 03            		jp	p,.srchfm
(1)  567/     3AD : 07                  		rlca
(1)  568/     3AE : 07                  		rlca
(1)  569/     3AF : 07                  		rlca
(1)  570/     3B0 : E6 03               		and	00000011b
(1)  571/     3B2 : C6 06               		add 	a,6
(1)  572/     3B4 : C3 BD 03            		jp	.gosrch
(1)  573/     3B7 :                     .srchfm:
(1)  574/     3B7 : CB 57               		bit 	2,a
(1)  575/     3B9 : CA BD 03            		jp	z,.gosrch
(1)  576/     3BC : 3D                  		dec	a
(1)  577/     3BD :                     .gosrch:
(1)  578/     3BD : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  579/     3C0 : 11 00 00            		ld	de,0
(1)  580/     3C3 : 5F                  		ld	e,a
(1)  581/     3C4 : 19                  		add 	hl,de
(1)  582/     3C5 : 7E                  		ld	a,(hl)
(1)  583/     3C6 : 3F                  		ccf
(1)  584/     3C7 : B7                  		or	a
(1)  585/     3C8 : C8                  		ret	z
(1)  586/     3C9 : 37                  		scf
(1)  587/     3CA : C9                  		ret
(1)  588/     3CB :                     
(1)  589/     3CB :                     ; ---------------------------------------------
(1)  590/     3CB :                     ; These routines only update the channel
(1)  591/     3CB :                     ; buffer
(1)  592/     3CB :                     ; ---------------------------------------------
(1)  593/     3CB :                     
(1)  594/     3CB :                     ; -----------------------------------
(1)  595/     3CB :                     ; Set volume
(1)  596/     3CB :                     ; 
(1)  597/     3CB :                     ; FM note: call this AFTER 
(1)  598/     3CB :                     ; updating the instrument data regs
(1)  599/     3CB :                     ; 
(1)  600/     3CB :                     ; b - chnl_Vol
(1)  601/     3CB :                     ; -----------------------------------
(1)  602/     3CB :                     
(1)  603/     3CB :                     .set_volume:
(1)  604/     3CB : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  605/     3CE : B7                  		or	a
(1)  606/     3CF : FA D5 03            		jp	m,.vol_ispsg
(1)  607/     3D2 : C3 B5 05            		jp	.set_fm_vol
(1)  608/     3D5 :                     .vol_ispsg:
(1)  609/     3D5 : 78                  		ld	a,b
(1)  610/     3D6 : C3 B7 05            		jp	.set_psg_vol
(1)  611/     3D9 :                     
(1)  612/     3D9 :                     ; ------------------------------------
(1)  613/     3D9 :                     ; Set channel frequency
(1)  614/     3D9 :                     ; ------------------------------------
(1)  615/     3D9 :                     
(1)  616/     3D9 :                     .set_frequency:
(1)  617/     3D9 : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1)  618/     3DC : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1)  619/     3DF : 78                  		ld	a,b
(1)  620/     3E0 : B7                  		or	a			; Type 080h/0E0h?
(1)  621/     3E1 : F2 E9 03            		jp	p,.notype3
(1)  622/     3E4 : CB 79               		bit 	7,c			; PSG channel?
(1)  623/     3E6 : C2 27 04            		jp	nz,.setfreq_psg
(1)  624/     3E9 :                     .notype3:
(1)  625/     3E9 : 78                  		ld	a,b
(1)  626/     3EA : FE 02               		cp	2			; Type 2?
(1)  627/     3EC : C2 F5 03            		jp	nz,.fm_normalchnl
(1)  628/     3EF : 79                  		ld	a,c			; Channel 6?
(1)  629/     3F0 : FE 06               		cp	6
(1)  630/     3F2 : CA 26 04            		jp	z,.setfm_sample
(1)  631/     3F5 :                     
(1)  632/     3F5 :                     ; -------------------------------------
(1)  633/     3F5 :                     ; FM frequency
(1)  634/     3F5 :                     ; -------------------------------------
(1)  635/     3F5 :                     
(1)  636/     3F5 :                     .fm_normalchnl:
(1)  637/     3F5 : C9                  		ret
(1)  638/     3F6 :                     
(1)  639/     3F6 :                     ; 		ld	a,(ix+chnl_Note)
(1)  640/     3F6 :                     ; 		cp	-10
(1)  641/     3F6 :                     ; 		jp	z,.unlock_chnl
(1)  642/     3F6 :                     ; 		cp	-2
(1)  643/     3F6 :                     ; 		jp	z,.fm_turnoff
(1)  644/     3F6 :                     ; 		cp	-1
(1)  645/     3F6 :                     ; 		jp	z,.fm_turnoff
(1)  646/     3F6 :                     ; 
(1)  647/     3F6 :                     ; 		ld	hl,fmFreq_List
(1)  648/     3F6 :                     ; 		ld	de,0
(1)  649/     3F6 :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  650/     3F6 :                     ; 		add	a,a
(1)  651/     3F6 :                     ; 		ld	e,a
(1)  652/     3F6 :                     ; 		add	hl,de
(1)  653/     3F6 :                     ; 		ld	a,(hl)
(1)  654/     3F6 :                     ; 		ld	(ix+chnl_Freq),a
(1)  655/     3F6 :                     ; 		inc	hl
(1)  656/     3F6 :                     ; 		ld	a,(hl)
(1)  657/     3F6 :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  658/     3F6 :                     ; 		ret
(1)  659/     3F6 :                     
(1)  660/     3F6 :                     ; -------------------------------------
(1)  661/     3F6 :                     ; Unlock current channel
(1)  662/     3F6 :                     ; -------------------------------------
(1)  663/     3F6 :                     
(1)  664/     3F6 :                     .unlock_chnl:
(1)  665/     3F6 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1)  666/     3F9 : FD 7E 10            		ld	a,(iy+trck_Priority)
(1)  667/     3FC : B7                  		or	a
(1)  668/     3FD : CA 03 04            		jp	z,.lowunlkset
(1)  669/     400 : 21 4A C1            		ld	hl,SndBuff_UsedChnls_2
(1)  670/     403 :                     .lowunlkset:	
(1)  671/     403 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  672/     406 : B7                  		or	a
(1)  673/     407 : F2 14 04            		jp	p,.uplusfm
(1)  674/     40A : 07                  		rlca
(1)  675/     40B : 07                  		rlca
(1)  676/     40C : 07                  		rlca
(1)  677/     40D : E6 03               		and	00000011b
(1)  678/     40F : C6 06               		add 	a,6
(1)  679/     411 : C3 1A 04            		jp	.uleftfm
(1)  680/     414 :                     .uplusfm:
(1)  681/     414 : CB 57               		bit 	2,a
(1)  682/     416 : CA 1A 04            		jp	z,.uleftfm
(1)  683/     419 : 3D                  		dec	a
(1)  684/     41A :                     .uleftfm:
(1)  685/     41A : 11 00 00            		ld	de,0
(1)  686/     41D : 5F                  		ld	e,a
(1)  687/     41E : 19                  		add 	hl,de
(1)  688/     41F : 36 00               		ld	(hl),0
(1)  689/     421 : DD 36 01 00         		ld	(ix+chnl_Type),0
(1)  690/     425 : C9                  		ret
(1)  691/     426 :                     		
(1)  692/     426 :                     ; -------------------------------------
(1)  693/     426 :                     ; Set FM6 sample
(1)  694/     426 :                     ; -------------------------------------
(1)  695/     426 :                     
(1)  696/     426 :                     .setfm_sample:
(1)  697/     426 : C9                  		ret
(1)  698/     427 :                     
(1)  699/     427 :                     ; 		ld	a,(ix+chnl_Note)
(1)  700/     427 :                     ; 		cp	-10
(1)  701/     427 :                     ; 		jp	z,.unlock_chnl
(1)  702/     427 :                     ; 		cp	-2
(1)  703/     427 :                     ; 		ret	z
(1)  704/     427 :                     ; 		cp	-1
(1)  705/     427 :                     ; 		ret	z
(1)  706/     427 :                     ; 		add 	a,(ix+chnl_InsOpt)
(1)  707/     427 :                     ; 		add 	a,a
(1)  708/     427 :                     ; 		ld	de,0
(1)  709/     427 :                     ; 		ld	e,a
(1)  710/     427 :                     ; 		ld	hl,wavFreq_List
(1)  711/     427 :                     ; 		add 	hl,de
(1)  712/     427 :                     ; 		ld	a,(hl)
(1)  713/     427 :                     ; 		inc 	hl
(1)  714/     427 :                     ; 		ld	(ix+chnl_Freq),a
(1)  715/     427 :                     ; 		ld	a,(hl)
(1)  716/     427 :                     ; 		inc 	hl
(1)  717/     427 :                     ; 		ld	(ix+(chnl_Freq+1)),a
(1)  718/     427 :                     ; 		ret
(1)  719/     427 :                     		
(1)  720/     427 :                     ; -------------------------------------
(1)  721/     427 :                     ; PSG frequency
(1)  722/     427 :                     ; -------------------------------------
(1)  723/     427 :                     
(1)  724/     427 :                     .setfreq_psg:
(1)  725/     427 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1)  726/     42A : 47                  		ld	b,a
(1)  727/     42B : F6 1F               		or	01Fh
(1)  728/     42D : DD 7E 02            		ld	a,(ix+chnl_Note)
(1)  729/     430 : FE F6               		cp	-10
(1)  730/     432 : CA F6 03            		jp	z,.unlock_chnl
(1)  731/     435 : FE FE               		cp	-2
(1)  732/     437 : C8                  		ret	z
(1)  733/     438 : FE FF               		cp	-1
(1)  734/     43A : C8                  		ret	z
(1)  735/     43B :                     
(1)  736/     43B : 21 00 00            		ld	hl,0
(1)  737/     43E : 87                  		add 	a,a
(1)  738/     43F : 11 00 00            		ld	de,0
(1)  739/     442 : 5F                  		ld	e,a
(1)  740/     443 : 19                  		add 	hl,de
(1)  741/     444 : DD 7E 0C            		ld	a,(ix+chnl_InsOpt)
(1)  742/     447 : 87                  		add	a,a
(1)  743/     448 : 11 00 00            		ld	de,0
(1)  744/     44B : 5F                  		ld	e,a
(1)  745/     44C : 19                  		add 	hl,de
(1)  746/     44D : 54                  		ld	d,h
(1)  747/     44E : 5D                  		ld	e,l	
(1)  748/     44F : 21 AD 07            		ld	hl,psgFreq_List
(1)  749/     452 : 19                  		add	hl,de
(1)  750/     453 : 7E                  		ld	a,(hl)
(1)  751/     454 : DD 77 09            		ld	(ix+chnl_Freq),a
(1)  752/     457 : 23                  		inc 	hl
(1)  753/     458 : 7E                  		ld	a,(hl)
(1)  754/     459 : DD 77 0A            		ld	(ix+(chnl_Freq+1)),a
(1)  755/     45C : DD 36 14 00         		ld	(ix+chnl_PsgIndx),0
(1)  756/     460 : C9                  		ret
(1)  757/     461 :                     		
(1)  758/     461 :                     ; -------------------------------------
(1)  759/     461 :                     ; Set effects
(1)  760/     461 :                     ; 
(1)  761/     461 :                     ; updates to buffer only
(1)  762/     461 :                     ; -------------------------------------
(1)  763/     461 :                     
(1)  764/     461 :                     .set_effect:
(1)  765/     461 : 11 00 00            		ld	de,0
(1)  766/     464 : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1)  767/     467 : 87                  		add 	a,a
(1)  768/     468 : E6 FE               		and	11111110b
(1)  769/     46A : 5F                  		ld	e,a
(1)  770/     46B : 21 7B 04            		ld	hl,.eff_list
(1)  771/     46E : 19                  		add	hl,de
(1)  772/     46F : DD 46 00            		ld	b,(ix+chnl_Chip)
(1)  773/     472 : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1)  774/     475 : 7E                  		ld	a,(hl)
(1)  775/     476 : 23                  		inc	hl
(1)  776/     477 : 66                  		ld	h,(hl)
(1)  777/     478 : 6F                  		ld	l,a
(1)  778/     479 : E9                  		jp	(hl)
(1)  779/     47A :                     .eff_null:
(1)  780/     47A : C9                  		ret
(1)  781/     47B :                     .eff_list:
(1)  782/     47B : 7A 04               		dw .eff_null
(1)  783/     47D : B1 04               		dw .eff_A	; A | Set ticks
(1)  784/     47F : B9 04               		dw .eff_B	; B | Jump to block (SET OUTSIDE)
(1)  785/     481 : 7A 04               		dw .eff_null	; C | Break to row (unsupported)
(1)  786/     483 : C9 04               		dw .eff_D	; D | Volume slide
(1)  787/     485 : E3 04               		dw .eff_E	; E | Portametro down
(1)  788/     487 : 23 05               		dw .eff_F	; F | Portametro up
(1)  789/     489 : 7A 04               		dw .eff_null	; G
(1)  790/     48B : 7A 04               		dw .eff_null	; H
(1)  791/     48D : 7A 04               		dw .eff_null	; I
(1)  792/     48F : 7A 04               		dw .eff_null	; J	
(1)  793/     491 : 7A 04               		dw .eff_null	; K
(1)  794/     493 : 7A 04               		dw .eff_null	; L
(1)  795/     495 : 7A 04               		dw .eff_null	; M
(1)  796/     497 : 7A 04               		dw .eff_null	; N
(1)  797/     499 : 7A 04               		dw .eff_null	; O
(1)  798/     49B : 7A 04               		dw .eff_null	; P
(1)  799/     49D : 7A 04               		dw .eff_null	; Q
(1)  800/     49F : 7A 04               		dw .eff_null	; R
(1)  801/     4A1 : 7A 04               		dw .eff_null	; S
(1)  802/     4A3 : 7A 04               		dw .eff_null	; T
(1)  803/     4A5 : 7A 04               		dw .eff_null	; U
(1)  804/     4A7 : 7A 04               		dw .eff_null	; V
(1)  805/     4A9 : 7A 04               		dw .eff_null	; W
(1)  806/     4AB : 5C 05               		dw .eff_X	; X
(1)  807/     4AD : 7A 04               		dw .eff_null	; Y
(1)  808/     4AF : 7A 04               		dw .eff_null	; Z
(1)  809/     4B1 :                     
(1)  810/     4B1 :                     ; -------------------------------------
(1)  811/     4B1 :                     ; Effect A - Set ticks
(1)  812/     4B1 :                     ; -------------------------------------
(1)  813/     4B1 :                     
(1)  814/     4B1 :                     .eff_A:
(1)  815/     4B1 : 0D                  		dec 	c
(1)  816/     4B2 : FD 71 1F            		ld	(iy+trck_TicksCurr),c
(1)  817/     4B5 : FD 71 0D            		ld	(iy+trck_TicksRead),c
(1)  818/     4B8 : C9                  		ret
(1)  819/     4B9 :                     
(1)  820/     4B9 :                     ; -------------------------------------
(1)  821/     4B9 :                     ; Effect B - Set block
(1)  822/     4B9 :                     ; -------------------------------------
(1)  823/     4B9 :                     
(1)  824/     4B9 :                     .eff_B:
(1)  825/     4B9 : FD 71 0E            		ld	(iy+trck_BlockCurr),c
(1)  826/     4BC : 11 01 00            		ld	de,1			; Finish row
(1)  827/     4BF : FD 73 1A            		ld	(iy+trck_RowSteps),e
(1)  828/     4C2 : FD 72 1B            		ld	(iy+(trck_RowSteps+1)),d
(1)  829/     4C5 : FD 77 1E            		ld	(iy+trck_RowWait),a
(1)  830/     4C8 : C9                  		ret
(1)  831/     4C9 :                     
(1)  832/     4C9 :                     ; -------------------------------------
(1)  833/     4C9 :                     ; Effect D - Volume slide
(1)  834/     4C9 :                     ; -------------------------------------
(1)  835/     4C9 :                     
(1)  836/     4C9 :                     .eff_D:
(1)  837/     4C9 : 79                  		ld	a,c
(1)  838/     4CA : E6 F0               		and	11110000b		; X0h - slide up
(1)  839/     4CC : C2 D9 04            		jp	nz,.go_up
(1)  840/     4CF : 79                  		ld	a,c
(1)  841/     4D0 : E6 0F               		and	00001111b		; 0Xh - slide down
(1)  842/     4D2 : C8                  		ret	z			; 00h - slide continue
(1)  843/     4D3 :                     .go_down:
(1)  844/     4D3 : 2F                  		cpl
(1)  845/     4D4 : 3C                  		inc	a
(1)  846/     4D5 : DD 77 16            		ld	(ix+chnl_EfVolSlide),a
(1)  847/     4D8 : C9                  		ret
(1)  848/     4D9 :                     .go_up:
(1)  849/     4D9 : 0F                  		rrca
(1)  850/     4DA : 0F                  		rrca
(1)  851/     4DB : 0F                  		rrca
(1)  852/     4DC : 0F                  		rrca
(1)  853/     4DD : E6 0F               		and	00001111b
(1)  854/     4DF : DD 77 16            		ld	(ix+chnl_EfVolSlide),a
(1)  855/     4E2 : C9                  		ret
(1)  856/     4E3 :                     
(1)  857/     4E3 :                     ; -------------------------------------
(1)  858/     4E3 :                     ; Effect E - Portametro down
(1)  859/     4E3 :                     ; 
(1)  860/     4E3 :                     ; NOTE: not accurate
(1)  861/     4E3 :                     ; -------------------------------------
(1)  862/     4E3 :                     
(1)  863/     4E3 :                     .eff_E:
(1)  864/     4E3 : 79                  		ld	a,c
(1)  865/     4E4 : B7                  		or	a
(1)  866/     4E5 : CA 22 05            		jp	z,.prtdwn_cont
(1)  867/     4E8 : E6 F0               		and	11110000b
(1)  868/     4EA : FE E0               		cp	0E0h
(1)  869/     4EC : CA 01 05            		jp	z,.dwn_exfine
(1)  870/     4EF : FE F0               		cp	0F0h
(1)  871/     4F1 : CA 11 05            		jp	z,.dwn_fine
(1)  872/     4F4 :                     		
(1)  873/     4F4 :                     ; Normal
(1)  874/     4F4 : 79                  		ld	a,c
(1)  875/     4F5 : E6 1F               		and	00011111b
(1)  876/     4F7 : 87                  		add	a,a
(1)  877/     4F8 : 2F                  		cpl
(1)  878/     4F9 : 3C                  		inc	a
(1)  879/     4FA : 11 FF FF            		ld	de,-1
(1)  880/     4FD : 5F                  		ld	e,a
(1)  881/     4FE : C3 1C 05            		jp	.set_portam
(1)  882/     501 :                     .dwn_exfine:
(1)  883/     501 : 11 FF FF            		ld	de,-1
(1)  884/     504 : 79                  		ld	a,c
(1)  885/     505 : E6 0F               		and	00001111b
(1)  886/     507 : 2F                  		cpl
(1)  887/     508 : 3C                  		inc	a
(1)  888/     509 : CB 2F               		sra	a
(1)  889/     50B : CB 2F               		sra	a
(1)  890/     50D : 5F                  		ld	e,a
(1)  891/     50E : C3 1C 05            		jp	.set_portam
(1)  892/     511 :                     .dwn_fine:
(1)  893/     511 : 11 FF FF            		ld	de,-1
(1)  894/     514 : 79                  		ld	a,c
(1)  895/     515 : E6 0F               		and	00001111b
(1)  896/     517 : 2F                  		cpl
(1)  897/     518 : 3C                  		inc	a
(1)  898/     519 : CB 2F               		sra	a
(1)  899/     51B : 5F                  		ld	e,a
(1)  900/     51C :                     
(1)  901/     51C :                     ; shared with effects E and F
(1)  902/     51C :                     .set_portam:
(1)  903/     51C : DD 72 19            		ld	(ix+(chnl_EfPortam+1)),d
(1)  904/     51F : DD 73 18            		ld	(ix+chnl_EfPortam),e
(1)  905/     522 :                     
(1)  906/     522 :                     .prtdwn_cont:
(1)  907/     522 : C9                  		ret
(1)  908/     523 :                     
(1)  909/     523 :                     ; -------------------------------------
(1)  910/     523 :                     ; Effect F - Portametro up
(1)  911/     523 :                     ; 
(1)  912/     523 :                     ; NOTE: not accurate
(1)  913/     523 :                     ; -------------------------------------
(1)  914/     523 :                     
(1)  915/     523 :                     .eff_F:
(1)  916/     523 : 79                  		ld	a,c
(1)  917/     524 : B7                  		or	a
(1)  918/     525 : CA 5B 05            		jp	z,.prtup_cont
(1)  919/     528 : E6 F0               		and	11110000b
(1)  920/     52A : FE E0               		cp	0E0h
(1)  921/     52C : CA 44 05            		jp	z,.up_exfine
(1)  922/     52F : FE F0               		cp	0F0h
(1)  923/     531 : CA 50 05            		jp	z,.up_fine
(1)  924/     534 :                     		
(1)  925/     534 :                     ; Normal
(1)  926/     534 : 79                  		ld	a,c
(1)  927/     535 : E6 1F               		and	00011111b
(1)  928/     537 : 57                  		ld	d,a
(1)  929/     538 : 87                  		add	a,a
(1)  930/     539 : 87                  		add	a,a
(1)  931/     53A : 5F                  		ld	e,a
(1)  932/     53B : 7A                  		ld	a,d
(1)  933/     53C : 07                  		rlca
(1)  934/     53D : 07                  		rlca	
(1)  935/     53E : E6 03               		and	00000011b
(1)  936/     540 : 57                  		ld	d,a
(1)  937/     541 : C3 1C 05            		jp	.set_portam
(1)  938/     544 :                     .up_exfine:
(1)  939/     544 : 11 00 00            		ld	de,0
(1)  940/     547 : 79                  		ld	a,c
(1)  941/     548 : E6 0F               		and	00001111b
(1)  942/     54A : CB 2F               		sra	a
(1)  943/     54C : 5F                  		ld	e,a
(1)  944/     54D : C3 1C 05            		jp	.set_portam
(1)  945/     550 :                     .up_fine:
(1)  946/     550 : 11 00 00            		ld	de,0
(1)  947/     553 : 79                  		ld	a,c
(1)  948/     554 : E6 0F               		and	00001111b
(1)  949/     556 : 87                  		add	a,a
(1)  950/     557 : 5F                  		ld	e,a
(1)  951/     558 : C3 1C 05            		jp	.set_portam
(1)  952/     55B :                     .prtup_cont:
(1)  953/     55B : C9                  		ret
(1)  954/     55C :                     		
(1)  955/     55C :                     ; -------------------------------------
(1)  956/     55C :                     ; Effect X - Set panning (FM ONLY)
(1)  957/     55C :                     ; -------------------------------------
(1)  958/     55C :                     
(1)  959/     55C :                     .eff_X:
(1)  960/     55C : 79                  		ld	a,c
(1)  961/     55D : 07                  		rlca
(1)  962/     55E : 07                  		rlca
(1)  963/     55F : E6 03               		and	00000011b
(1)  964/     561 : 11 6B 05            		ld	de,.fmpan_list
(1)  965/     564 : 83                  		add 	a,e
(1)  966/     565 : 5F                  		ld	e,a
(1)  967/     566 : 1A                  		ld	a,(de)
(1)  968/     567 : DD 77 0D            		ld	(ix+chnl_FmPan),a
(1)  969/     56A : C9                  		ret
(1)  970/     56B :                     .fmpan_list:
(1)  971/     56B : 80                  		db 080h		; 000h
(1)  972/     56C : 80                  		db 080h		; 040h
(1)  973/     56D : C0                  		db 0C0h		; 080h
(1)  974/     56E : 40                  		db 040h		; 0C0h
(1)  975/     56F :                     
(1)  976/     56F :                     ; ---------------------------------------------
(1)  977/     56F :                     ; Grab instrument from slot
(1)  978/     56F :                     ; 
(1)  979/     56F :                     ; Output
(1)  980/     56F :                     ; hl - current instrument
(1)  981/     56F :                     ; ---------------------------------------------
(1)  982/     56F :                     
(1)  983/     56F :                     .grab_instslot:
(1)  984/     56F : FD 6E 16            		ld	l,(iy+trck_Instr)
(1)  985/     572 : FD 66 17            		ld	h,(iy+(trck_Instr+1))
(1)  986/     575 : DD 7E 03            		ld	a,(ix+chnl_Ins)
(1)  987/     578 : 3D                  		dec 	a
(1)  988/     579 : 47                  		ld	b,a
(1)  989/     57A : 87                  		add 	a,a
(1)  990/     57B : 87                  		add 	a,a
(1)  991/     57C : 4F                  		ld	c,a
(1)  992/     57D : 78                  		ld	a,b
(1)  993/     57E : 07                  		rlca
(1)  994/     57F : 07                  		rlca
(1)  995/     580 : E6 03               		and	3
(1)  996/     582 : 47                  		ld	b,a
(1)  997/     583 : 09                  		add	hl,bc
(1)  998/     584 : C9                  		ret
(1)  999/     585 :                     
(1) 1000/     585 :                     ; ---------------------------------------------
(1) 1001/     585 :                     ; These routines send the result data from
(1) 1002/     585 :                     ; the channel buffer to their respective
(1) 1003/     585 :                     ; sound chips
(1) 1004/     585 :                     ; ---------------------------------------------
(1) 1005/     585 :                     
(1) 1006/     585 :                     .run_frequency:
(1) 1007/     585 : DD 46 0B            		ld	b,(ix+chnl_InsType)
(1) 1008/     588 : DD 4E 00            		ld	c,(ix+chnl_Chip)
(1) 1009/     58B : 78                  		ld	a,b
(1) 1010/     58C : B7                  		or	a			; Type 080h/0E0h?
(1) 1011/     58D : F2 95 05            		jp	p,.freqrn_not3
(1) 1012/     590 : CB 79               		bit 	7,c			; PSG channel?
(1) 1013/     592 : C2 A3 05            		jp	nz,.freqrn_psg
(1) 1014/     595 :                     .freqrn_not3:
(1) 1015/     595 : 78                  		ld	a,b
(1) 1016/     596 : FE 02               		cp	2				; Type 2?
(1) 1017/     598 : C2 A1 05            		jp	nz,.freqrn_fm
(1) 1018/     59B : 79                  		ld	a,c				; Channel 6?
(1) 1019/     59C : FE 06               		cp	6
(1) 1020/     59E : CA A2 05            		jp	z,.freqrn_smpl
(1) 1021/     5A1 :                     .freqrn_fm:
(1) 1022/     5A1 : C9                  		ret
(1) 1023/     5A2 :                     ; 		ld	e,(ix+chnl_Chip)
(1) 1024/     5A2 :                     ; 		bit	7,e
(1) 1025/     5A2 :                     ; 		ret	nz
(1) 1026/     5A2 :                     ; 		ld	d,28h
(1) 1027/     5A2 :                     ; 		call	SndDrv_FmSet_1			; KEYS OFF
(1) 1028/     5A2 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1029/     5A2 :                     ; 		cp	-2
(1) 1030/     5A2 :                     ; 		ret	z
(1) 1031/     5A2 :                     ; 		cp	-1
(1) 1032/     5A2 :                     ; 		ret	z
(1) 1033/     5A2 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1034/     5A2 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1035/     5A2 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1036/     5A2 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1037/     5A2 :                     ; 		call	.set_fm_freq
(1) 1038/     5A2 :                     ; 		ld	e,(ix+chnl_FmRegKeys)		; KEYS ON
(1) 1039/     5A2 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1040/     5A2 :                     ; 		or	e
(1) 1041/     5A2 :                     ; 		ld	e,a
(1) 1042/     5A2 :                     ; 		ld	d,28h
(1) 1043/     5A2 :                     ; 		jp	SndDrv_FmSet_1
(1) 1044/     5A2 :                     
(1) 1045/     5A2 :                     .freqrn_smpl:
(1) 1046/     5A2 : C9                  		ret
(1) 1047/     5A3 :                     ; 		ld	e,040h
(1) 1048/     5A3 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1049/     5A3 :                     ; 		cp	-2
(1) 1050/     5A3 :                     ; 		jp	z,.set_smpflag
(1) 1051/     5A3 :                     ; 		cp	-1
(1) 1052/     5A3 :                     ; 		jp	z,.set_smpflag
(1) 1053/     5A3 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1054/     5A3 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1055/     5A3 :                     ; 		ld	a,h
(1) 1056/     5A3 :                     ; 		or	l
(1) 1057/     5A3 :                     ; 		ret	z
(1) 1058/     5A3 :                     ; 	; Play SAMPLE
(1) 1059/     5A3 :                     ; 		ld	de,2806h
(1) 1060/     5A3 :                     ; 		call	SndDrv_FmSet_1
(1) 1061/     5A3 :                     ; 		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1062/     5A3 :                     ; 		ld	l,(ix+chnl_Freq)
(1) 1063/     5A3 :                     ; 		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1064/     5A3 :                     ; 		ld	(ix+chnl_EfNewFreq),l
(1) 1065/     5A3 :                     ; 		ld	a,l
(1) 1066/     5A3 :                     ; 		ld	(Sample_Speed),a
(1) 1067/     5A3 :                     ; 		ld	a,h
(1) 1068/     5A3 :                     ; 		ld	(Sample_Speed+1),a
(1) 1069/     5A3 :                     ; 		ld	a,(ix+chnl_SmplFlags)
(1) 1070/     5A3 :                     ; 		rlca
(1) 1071/     5A3 :                     ; 		or	1
(1) 1072/     5A3 :                     ; 		ld	e,a
(1) 1073/     5A3 :                     ; .set_smpflag:
(1) 1074/     5A3 :                     ; 		ld	a,e
(1) 1075/     5A3 :                     ; 		ld	(Sample_Flags),a
(1) 1076/     5A3 :                     ; 		ret
(1) 1077/     5A3 :                     
(1) 1078/     5A3 :                     .freqrn_psg:
(1) 1079/     5A3 : DD 66 0A            		ld	h,(ix+(chnl_Freq+1))		; Copy freq
(1) 1080/     5A6 : DD 6E 09            		ld	l,(ix+chnl_Freq)
(1) 1081/     5A9 : DD 74 1B            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1082/     5AC : DD 75 1A            		ld	(ix+chnl_EfNewFreq),l
(1) 1083/     5AF : C3 D5 05            		jp	.set_psg_freq
(1) 1084/     5B2 :                     
(1) 1085/     5B2 :                     ; ------------------------------------
(1) 1086/     5B2 :                     ; Turn FM volume regs down
(1) 1087/     5B2 :                     ; TL = 07Fh
(1) 1088/     5B2 :                     ; 
(1) 1089/     5B2 :                     ; ix - current channel
(1) 1090/     5B2 :                     ; ------------------------------------
(1) 1091/     5B2 :                     
(1) 1092/     5B2 :                     .fm_turnoff:
(1) 1093/     5B2 : C9                  		ret
(1) 1094/     5B3 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1095/     5B3 :                     ; 		ld	c,a
(1) 1096/     5B3 :                     ; 		cp	6
(1) 1097/     5B3 :                     ; 		jp	nz,.not_dac
(1) 1098/     5B3 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1099/     5B3 :                     ; 		cp	2
(1) 1100/     5B3 :                     ; 		jp	nz,.not_dac
(1) 1101/     5B3 :                     ; 		ld	a,40h
(1) 1102/     5B3 :                     ; 		ld	(Sample_Flags),a
(1) 1103/     5B3 :                     ; .not_dac:
(1) 1104/     5B3 :                     ; 		ld	a,c
(1) 1105/     5B3 :                     ; 		or	a
(1) 1106/     5B3 :                     ; 		ret	m
(1) 1107/     5B3 :                     ; 		
(1) 1108/     5B3 :                     ; .fm_settloff:
(1) 1109/     5B3 :                     ; 		ld	e,a
(1) 1110/     5B3 :                     ; 		ld	d,28h
(1) 1111/     5B3 :                     ; 		call	SndDrv_FmSet_1
(1) 1112/     5B3 :                     ; 		ld	a,e
(1) 1113/     5B3 :                     ; 		and	11b
(1) 1114/     5B3 :                     ; 		or	40h
(1) 1115/     5B3 :                     ; 		ld	e,7Fh
(1) 1116/     5B3 :                     ; 		ld	d,a
(1) 1117/     5B3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1118/     5B3 :                     ; 		inc	d
(1) 1119/     5B3 :                     ; 		inc	d
(1) 1120/     5B3 :                     ; 		inc	d
(1) 1121/     5B3 :                     ; 		inc	d
(1) 1122/     5B3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1123/     5B3 :                     ; 		inc	d
(1) 1124/     5B3 :                     ; 		inc	d
(1) 1125/     5B3 :                     ; 		inc	d
(1) 1126/     5B3 :                     ; 		inc	d
(1) 1127/     5B3 :                     ; 		call	SndDrv_FmAutoSet
(1) 1128/     5B3 :                     ; 		inc	d
(1) 1129/     5B3 :                     ; 		inc	d
(1) 1130/     5B3 :                     ; 		inc	d
(1) 1131/     5B3 :                     ; 		inc	d
(1) 1132/     5B3 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1133/     5B3 :                     
(1) 1134/     5B3 :                     ; ------------------------------------
(1) 1135/     5B3 :                     ; FM normal registers
(1) 1136/     5B3 :                     ; 
(1) 1137/     5B3 :                     ; NOTE: call this first BEFORE
(1) 1138/     5B3 :                     ; modyfing the volume
(1) 1139/     5B3 :                     ; 
(1) 1140/     5B3 :                     ; ix - current channel
(1) 1141/     5B3 :                     ; ------------------------------------
(1) 1142/     5B3 :                     
(1) 1143/     5B3 :                     .set_fm_ins:
(1) 1144/     5B3 : C9                  		ret
(1) 1145/     5B4 :                     ; 		ld	c,(ix+chnl_Chip)
(1) 1146/     5B4 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1147/     5B4 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1148/     5B4 :                     ; 		ld	a,h
(1) 1149/     5B4 :                     ; 		or	l
(1) 1150/     5B4 :                     ; 		ret	z
(1) 1151/     5B4 :                     ; 		ld	a,c			; FM6?
(1) 1152/     5B4 :                     ; 		cp	6
(1) 1153/     5B4 :                     ; 		jp	nz,.no_chnl6
(1) 1154/     5B4 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1155/     5B4 :                     ; 		cp	2			; Type 2?
(1) 1156/     5B4 :                     ; 		jp	z,.set_sampl
(1) 1157/     5B4 :                     ; 		ld	a,40h			; IF type != 2, stop sample to unlock FM6
(1) 1158/     5B4 :                     ; 		ld	(Sample_Flags),a
(1) 1159/     5B4 :                     ; .no_chnl6:
(1) 1160/     5B4 :                     ; 		ld	a,c
(1) 1161/     5B4 :                     ; 		and	11b
(1) 1162/     5B4 :                     ; 		or	30h
(1) 1163/     5B4 :                     ; 		ld	d,a
(1) 1164/     5B4 :                     ; 		ld	b,1Ch/4
(1) 1165/     5B4 :                     ; .fmfiles:
(1) 1166/     5B4 :                     ; 		ld	e,(hl)
(1) 1167/     5B4 :                     ; 		inc 	hl
(1) 1168/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1169/     5B4 :                     ; 		inc 	d
(1) 1170/     5B4 :                     ; 		inc 	d
(1) 1171/     5B4 :                     ; 		inc 	d
(1) 1172/     5B4 :                     ; 		inc 	d
(1) 1173/     5B4 :                     ; 		ld	e,(hl)
(1) 1174/     5B4 :                     ; 		inc 	hl
(1) 1175/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1176/     5B4 :                     ; 		inc 	d
(1) 1177/     5B4 :                     ; 		inc 	d
(1) 1178/     5B4 :                     ; 		inc 	d
(1) 1179/     5B4 :                     ; 		inc 	d
(1) 1180/     5B4 :                     ; 		ld	e,(hl)
(1) 1181/     5B4 :                     ; 		inc 	hl
(1) 1182/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1183/     5B4 :                     ; 		inc 	d
(1) 1184/     5B4 :                     ; 		inc 	d
(1) 1185/     5B4 :                     ; 		inc 	d
(1) 1186/     5B4 :                     ; 		inc 	d
(1) 1187/     5B4 :                     ; 		ld	e,(hl)
(1) 1188/     5B4 :                     ; 		inc 	hl
(1) 1189/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1190/     5B4 :                     ; 		inc 	d
(1) 1191/     5B4 :                     ; 		inc 	d
(1) 1192/     5B4 :                     ; 		inc 	d
(1) 1193/     5B4 :                     ; 		inc 	d
(1) 1194/     5B4 :                     ; 		djnz	.fmfiles
(1) 1195/     5B4 :                     ; 
(1) 1196/     5B4 :                     ; 		ld	d,0B0h
(1) 1197/     5B4 :                     ; 		ld	a,c
(1) 1198/     5B4 :                     ; 		and	11b
(1) 1199/     5B4 :                     ; 		or	d
(1) 1200/     5B4 :                     ; 		ld	d,a
(1) 1201/     5B4 :                     ; 		ld	e,(hl)			; 0B0h
(1) 1202/     5B4 :                     ; 		ld	(ix+chnl_FmRegB0),e
(1) 1203/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1204/     5B4 :                     ; 		inc 	hl
(1) 1205/     5B4 :                     ; 		ld	e,(hl)			; 0B4h
(1) 1206/     5B4 :                     ; 		ld	d,0B4h
(1) 1207/     5B4 :                     ; 		ld	a,c
(1) 1208/     5B4 :                     ; 		and	11b
(1) 1209/     5B4 :                     ; 		or	d
(1) 1210/     5B4 :                     ; 		ld	d,a
(1) 1211/     5B4 :                     ; 		ld	a,(hl)
(1) 1212/     5B4 :                     ; 		ld	(ix+chnl_FmRegB4),a	
(1) 1213/     5B4 :                     ; 		or	(ix+chnl_FmPan)		; FM panning
(1) 1214/     5B4 :                     ; 		ld	e,a
(1) 1215/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1216/     5B4 :                     ; 		inc 	hl
(1) 1217/     5B4 :                     ; 		ld	e,(hl)			; FM3 flag
(1) 1218/     5B4 :                     ; 		inc 	hl
(1) 1219/     5B4 :                     ; 		ld	a,(hl)			; 028h
(1) 1220/     5B4 :                     ; 		inc 	hl
(1) 1221/     5B4 :                     ; 		ld	(ix+chnl_FmRegKeys),a
(1) 1222/     5B4 :                     ; 
(1) 1223/     5B4 :                     ; 		ld	a,c
(1) 1224/     5B4 :                     ; 		cp	2			; Channel 3?
(1) 1225/     5B4 :                     ; 		ret	nz
(1) 1226/     5B4 :                     ; 		ld	e,0
(1) 1227/     5B4 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1228/     5B4 :                     ; 		cp	1			; Type 1?
(1) 1229/     5B4 :                     ; 		jp	nz,.set_fm3reg
(1) 1230/     5B4 :                     ; 		ld	d,0A6h			; OP1
(1) 1231/     5B4 :                     ; 		ld	e,(hl)
(1) 1232/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1233/     5B4 :                     ; 		inc 	hl
(1) 1234/     5B4 :                     ; 		ld	d,0A2h
(1) 1235/     5B4 :                     ; 		ld	e,(hl)
(1) 1236/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1237/     5B4 :                     ; 		inc 	hl
(1) 1238/     5B4 :                     ; 		ld	d,0ACh			; OP2
(1) 1239/     5B4 :                     ; 		ld	e,(hl)
(1) 1240/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1241/     5B4 :                     ; 		inc 	hl
(1) 1242/     5B4 :                     ; 		ld	d,0A8h
(1) 1243/     5B4 :                     ; 		ld	e,(hl)
(1) 1244/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1245/     5B4 :                     ; 		inc 	hl
(1) 1246/     5B4 :                     ; 		ld	d,0ADh			; OP3
(1) 1247/     5B4 :                     ; 		ld	e,(hl)
(1) 1248/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1249/     5B4 :                     ; 		inc 	hl
(1) 1250/     5B4 :                     ; 		ld	d,0A9h
(1) 1251/     5B4 :                     ; 		ld	e,(hl)
(1) 1252/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1253/     5B4 :                     ; 		inc 	hl
(1) 1254/     5B4 :                     ; 		ld	d,0AEh			; OP4
(1) 1255/     5B4 :                     ; 		ld	e,(hl)
(1) 1256/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1257/     5B4 :                     ; 		inc 	hl
(1) 1258/     5B4 :                     ; 		ld	d,0AAh
(1) 1259/     5B4 :                     ; 		ld	e,(hl)
(1) 1260/     5B4 :                     ; 		call	SndDrv_FmAutoSet
(1) 1261/     5B4 :                     ; 		ld	e,(ix+chnl_FmRegKeys)	; KEYS ON
(1) 1262/     5B4 :                     ; 		ld	a,c
(1) 1263/     5B4 :                     ; 		and	111b
(1) 1264/     5B4 :                     ; 		or	e
(1) 1265/     5B4 :                     ; 		ld	e,a
(1) 1266/     5B4 :                     ; 		ld	d,28h
(1) 1267/     5B4 :                     ; 		call	SndDrv_FmSet_1
(1) 1268/     5B4 :                     ; 		ld	e,40h
(1) 1269/     5B4 :                     ; .set_fm3reg:
(1) 1270/     5B4 :                     ; 		ld	d,27h
(1) 1271/     5B4 :                     ; 		jp	SndDrv_FmSet_1
(1) 1272/     5B4 :                      
(1) 1273/     5B4 :                     ; ------------------------------------
(1) 1274/     5B4 :                     ; Set FM frequency
(1) 1275/     5B4 :                     ; 
(1) 1276/     5B4 :                     ; hl - frequency
(1) 1277/     5B4 :                     ; ------------------------------------
(1) 1278/     5B4 :                     
(1) 1279/     5B4 :                     .set_fm_freq:
(1) 1280/     5B4 : C9                  		ret
(1) 1281/     5B5 :                     ; 		ld	d,(ix+chnl_Chip)
(1) 1282/     5B5 :                     ; 		ld	e,(ix+chnl_InsType)
(1) 1283/     5B5 :                     ; 		ld	a,d
(1) 1284/     5B5 :                     ; 		cp	6			; Check channel 6
(1) 1285/     5B5 :                     ; 		jp	nz,.no_chnl6f
(1) 1286/     5B5 :                     ; 		ld	a,e
(1) 1287/     5B5 :                     ; 		cp	2
(1) 1288/     5B5 :                     ; 		ret	z
(1) 1289/     5B5 :                     ; .no_chnl6f:
(1) 1290/     5B5 :                     ; 		ld	a,d
(1) 1291/     5B5 :                     ; 		cp	2			; Check channel 3
(1) 1292/     5B5 :                     ; 		jp	nz,.no_chnl3f
(1) 1293/     5B5 :                     ; 		ld	a,e
(1) 1294/     5B5 :                     ; 		cp	1			; CH3 OP regs are already
(1) 1295/     5B5 :                     ; 		ret	z			; set from the instrument data
(1) 1296/     5B5 :                     ; .no_chnl3f:
(1) 1297/     5B5 :                     ; 
(1) 1298/     5B5 :                     ; 		ld	e,d
(1) 1299/     5B5 :                     ; 		ld	a,(ix+chnl_Note)
(1) 1300/     5B5 :                     ; 		cp	-10
(1) 1301/     5B5 :                     ; 		jp	z,.set_keycut
(1) 1302/     5B5 :                     ; 		cp	-1
(1) 1303/     5B5 :                     ; 		ret	z
(1) 1304/     5B5 :                     ; 		cp	-2
(1) 1305/     5B5 :                     ; 		jp	nz,.no_keycut
(1) 1306/     5B5 :                     ; .set_keycut:
(1) 1307/     5B5 :                     ; 		ld	a,d
(1) 1308/     5B5 :                     ; 		jp	.fm_settloff
(1) 1309/     5B5 :                     ; .no_keycut:
(1) 1310/     5B5 :                     ; 		ld	a,e
(1) 1311/     5B5 :                     ; 		and	11b
(1) 1312/     5B5 :                     ; 		ld	b,a
(1) 1313/     5B5 :                     ; 		ld	a,0A4h
(1) 1314/     5B5 :                     ; 		or	b
(1) 1315/     5B5 :                     ; 		ld	d,a
(1) 1316/     5B5 :                     ; 		ld	e,h
(1) 1317/     5B5 :                     ; 		call	SndDrv_FmAutoSet
(1) 1318/     5B5 :                     ; 		dec 	d
(1) 1319/     5B5 :                     ; 		dec 	d
(1) 1320/     5B5 :                     ; 		dec	d
(1) 1321/     5B5 :                     ; 		dec 	d
(1) 1322/     5B5 :                     ; 		ld	e,l
(1) 1323/     5B5 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1324/     5B5 :                     
(1) 1325/     5B5 :                     ; ------------------------------------
(1) 1326/     5B5 :                     ; Set FM Volume
(1) 1327/     5B5 :                     ; 
(1) 1328/     5B5 :                     ; This one might blow your mind
(1) 1329/     5B5 :                     ; ------------------------------------
(1) 1330/     5B5 :                     
(1) 1331/     5B5 :                     .set_fm_vol:
(1) 1332/     5B5 : C9                  		ret
(1) 1333/     5B6 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1334/     5B6 :                     ; 		ld	e,a
(1) 1335/     5B6 :                     ; 		cp	6
(1) 1336/     5B6 :                     ; 		jp	nz,.notdac
(1) 1337/     5B6 :                     ; 		ld	a,(ix+chnl_InsType)
(1) 1338/     5B6 :                     ; 		cp	2
(1) 1339/     5B6 :                     ; 		ret	z
(1) 1340/     5B6 :                     ; .notdac:
(1) 1341/     5B6 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1342/     5B6 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1343/     5B6 :                     ; 		ld	a,h
(1) 1344/     5B6 :                     ; 		or	l
(1) 1345/     5B6 :                     ; 		ret	z
(1) 1346/     5B6 :                     ; 		inc 	hl			; Skip 30h
(1) 1347/     5B6 :                     ; 		inc 	hl
(1) 1348/     5B6 :                     ; 		inc 	hl
(1) 1349/     5B6 :                     ; 		inc 	hl
(1) 1350/     5B6 :                     ; 		ld	a,b
(1) 1351/     5B6 :                     ; 		cp	40h
(1) 1352/     5B6 :                     ; 		jp	c,.too_much
(1) 1353/     5B6 :                     ; 		ld	a,40h
(1) 1354/     5B6 :                     ; .too_much:
(1) 1355/     5B6 :                     ; 		or	a
(1) 1356/     5B6 :                     ; 		jp	p,.too_low
(1) 1357/     5B6 :                     ; 		xor	a
(1) 1358/     5B6 :                     ; .too_low:
(1) 1359/     5B6 :                     ; 		sub 	a,40h
(1) 1360/     5B6 :                     ; 		cpl
(1) 1361/     5B6 :                     ; 		inc 	a
(1) 1362/     5B6 :                     ; 		ld	(ix+chnl_FmVolBase),a
(1) 1363/     5B6 :                     ; 		ld	c,(ix+chnl_FmVolBase)
(1) 1364/     5B6 :                     ; 		ld	d,40h			; 40h
(1) 1365/     5B6 :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1366/     5B6 :                     ; 		and	11b
(1) 1367/     5B6 :                     ; 		or	d
(1) 1368/     5B6 :                     ; 		ld	d,a
(1) 1369/     5B6 :                     ; 		ld	a,(ix+chnl_FmRegB0)
(1) 1370/     5B6 :                     ; 		and	111b
(1) 1371/     5B6 :                     ; 		ld	b,a
(1) 1372/     5B6 :                     ; 		cp	7
(1) 1373/     5B6 :                     ; 		jp	nz,.tl_lv1
(1) 1374/     5B6 :                     ; 		ld	a,(hl)
(1) 1375/     5B6 :                     ; 		add 	a,c
(1) 1376/     5B6 :                     ; 		or	a
(1) 1377/     5B6 :                     ; 		jp	p,.tl_lv1_tm
(1) 1378/     5B6 :                     ; 		ld	a,7Fh
(1) 1379/     5B6 :                     ; .tl_lv1_tm:
(1) 1380/     5B6 :                     ; 		ld	e,a
(1) 1381/     5B6 :                     ; 		call	SndDrv_FmAutoSet
(1) 1382/     5B6 :                     ; .tl_lv1:
(1) 1383/     5B6 :                     ; 		inc 	hl
(1) 1384/     5B6 :                     ; 		inc 	d
(1) 1385/     5B6 :                     ; 		inc 	d
(1) 1386/     5B6 :                     ; 		inc 	d
(1) 1387/     5B6 :                     ; 		inc 	d
(1) 1388/     5B6 :                     ; 		ld	a,b
(1) 1389/     5B6 :                     ; 		cp	7
(1) 1390/     5B6 :                     ; 		jp	z,.tl_lv2_ok
(1) 1391/     5B6 :                     ; 		cp	6
(1) 1392/     5B6 :                     ; 		jp	z,.tl_lv2_ok
(1) 1393/     5B6 :                     ; 		cp	5
(1) 1394/     5B6 :                     ; 		jp	nz,.tl_lv2
(1) 1395/     5B6 :                     ; .tl_lv2_ok:
(1) 1396/     5B6 :                     ; 		ld	a,(hl)
(1) 1397/     5B6 :                     ; 		add 	a,c
(1) 1398/     5B6 :                     ; 		or	a
(1) 1399/     5B6 :                     ; 		jp	p,.tl_lv2_tm
(1) 1400/     5B6 :                     ; 		ld	a,7Fh
(1) 1401/     5B6 :                     ; .tl_lv2_tm:
(1) 1402/     5B6 :                     ; 		ld	e,a
(1) 1403/     5B6 :                     ; 		call	SndDrv_FmAutoSet
(1) 1404/     5B6 :                     ; .tl_lv2:
(1) 1405/     5B6 :                     ; 		inc 	hl
(1) 1406/     5B6 :                     ; 		inc 	d
(1) 1407/     5B6 :                     ; 		inc 	d
(1) 1408/     5B6 :                     ; 		inc 	d
(1) 1409/     5B6 :                     ; 		inc 	d
(1) 1410/     5B6 :                     ; 		ld	a,b
(1) 1411/     5B6 :                     ; 		and	100b
(1) 1412/     5B6 :                     ; 		or	a
(1) 1413/     5B6 :                     ; 		jp	z,.tl_lv3
(1) 1414/     5B6 :                     ; 		ld	a,(hl)
(1) 1415/     5B6 :                     ; 		add 	a,c
(1) 1416/     5B6 :                     ; 		or	a
(1) 1417/     5B6 :                     ; 		jp	p,.tl_lv3_tm
(1) 1418/     5B6 :                     ; 		ld	a,7Fh
(1) 1419/     5B6 :                     ; .tl_lv3_tm:
(1) 1420/     5B6 :                     ; 		ld	e,a
(1) 1421/     5B6 :                     ; 		call	SndDrv_FmAutoSet
(1) 1422/     5B6 :                     ; .tl_lv3:
(1) 1423/     5B6 :                     ; 		inc 	hl
(1) 1424/     5B6 :                     ; 		inc 	d
(1) 1425/     5B6 :                     ; 		inc 	d
(1) 1426/     5B6 :                     ; 		inc 	d
(1) 1427/     5B6 :                     ; 		inc 	d
(1) 1428/     5B6 :                     ; 		ld	a,(hl)
(1) 1429/     5B6 :                     ; 		add 	a,c
(1) 1430/     5B6 :                     ; 		or	a
(1) 1431/     5B6 :                     ; 		jp	p,.tl_lv4_tm
(1) 1432/     5B6 :                     ; 		ld	a,7Fh
(1) 1433/     5B6 :                     ; .tl_lv4_tm:
(1) 1434/     5B6 :                     ; 		ld	e,a
(1) 1435/     5B6 :                     ; 		inc 	hl
(1) 1436/     5B6 :                     ; 		jp	SndDrv_FmAutoSet
(1) 1437/     5B6 :                     
(1) 1438/     5B6 :                     ; ------------------------------------
(1) 1439/     5B6 :                     
(1) 1440/     5B6 :                     .set_sampl:
(1) 1441/     5B6 : C9                  		ret
(1) 1442/     5B7 :                     ; 		ld	h,(ix+(chnl_InsAddr+1))
(1) 1443/     5B7 :                     ; 		ld	l,(ix+chnl_InsAddr)
(1) 1444/     5B7 :                     ; 
(1) 1445/     5B7 :                     ; 		ld	e,(hl)
(1) 1446/     5B7 :                     ; 		inc 	hl
(1) 1447/     5B7 :                     ; 		ld	d,(hl)
(1) 1448/     5B7 :                     ; 		inc 	hl
(1) 1449/     5B7 :                     ; 		ld	a,(hl)
(1) 1450/     5B7 :                     ; 		inc 	hl
(1) 1451/     5B7 :                     ; 		ld	(Sample_Start),de
(1) 1452/     5B7 :                     ; 		ld	(Sample_Start+2),a
(1) 1453/     5B7 :                     ; 
(1) 1454/     5B7 :                     ; 		ld	e,(hl)
(1) 1455/     5B7 :                     ; 		inc 	hl
(1) 1456/     5B7 :                     ; 		ld	d,(hl)
(1) 1457/     5B7 :                     ; 		inc 	hl
(1) 1458/     5B7 :                     ; 		ld	a,(hl)
(1) 1459/     5B7 :                     ; 		inc 	hl
(1) 1460/     5B7 :                     ; 		ld	(Sample_End),de
(1) 1461/     5B7 :                     ; 		ld	(Sample_End+2),a
(1) 1462/     5B7 :                     ; 		
(1) 1463/     5B7 :                     ; 		ld	e,(hl)
(1) 1464/     5B7 :                     ; 		inc 	hl
(1) 1465/     5B7 :                     ; 		ld	d,(hl)
(1) 1466/     5B7 :                     ; 		inc 	hl
(1) 1467/     5B7 :                     ; 		ld	a,(hl)
(1) 1468/     5B7 :                     ; 		inc 	hl
(1) 1469/     5B7 :                     ; 		ld	(Sample_Loop),de
(1) 1470/     5B7 :                     ; 		ld	(Sample_Loop+2),a
(1) 1471/     5B7 :                     ; 		
(1) 1472/     5B7 :                     ; 		ld	a,(hl)
(1) 1473/     5B7 :                     ; 		ld	(ix+chnl_SmplFlags),a
(1) 1474/     5B7 :                     ; 		ret
(1) 1475/     5B7 :                     		
(1) 1476/     5B7 :                     ; --------------------------------------------
(1) 1477/     5B7 :                     ; Set PSG Volume
(1) 1478/     5B7 :                     ; --------------------------------------------
(1) 1479/     5B7 :                     
(1) 1480/     5B7 :                     .set_psg_vol:
(1) 1481/     5B7 : 1E 00               		ld	e,0
(1) 1482/     5B9 : FE 40               		cp	40h
(1) 1483/     5BB : DA C0 05            		jp	c,.pntoo_much
(1) 1484/     5BE : 3E 40               		ld	a,40h
(1) 1485/     5C0 :                     .pntoo_much:
(1) 1486/     5C0 : B7                  		or	a
(1) 1487/     5C1 : F2 C5 05            		jp	p,.pntoo_low
(1) 1488/     5C4 : AF                  		xor	a
(1) 1489/     5C5 :                     .pntoo_low:
(1) 1490/     5C5 : FE 40               		cp	40h
(1) 1491/     5C7 : CA D1 05            		jp	z,.pntoppsgv
(1) 1492/     5CA : 3D                  		dec 	a
(1) 1493/     5CB : 0F                  		rrca
(1) 1494/     5CC : 0F                  		rrca
(1) 1495/     5CD : 2F                  		cpl
(1) 1496/     5CE : E6 0F               		and	00001111b
(1) 1497/     5D0 : 5F                  		ld	e,a
(1) 1498/     5D1 :                     .pntoppsgv:
(1) 1499/     5D1 : DD 73 12            		ld	(ix+chnl_PsgVolBase),e
(1) 1500/     5D4 : C9                  		ret
(1) 1501/     5D5 :                     
(1) 1502/     5D5 :                     ; --------------------------------------------
(1) 1503/     5D5 :                     ; Set PSG Frequency
(1) 1504/     5D5 :                     ; 
(1) 1505/     5D5 :                     ; hl - frequency
(1) 1506/     5D5 :                     ; --------------------------------------------
(1) 1507/     5D5 :                     
(1) 1508/     5D5 :                     .set_psg_freq:
(1) 1509/     5D5 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1510/     5D8 : E6 E0               		and	11100000b
(1) 1511/     5DA : 47                  		ld	b,a
(1) 1512/     5DB : FE C0               		cp	0C0h
(1) 1513/     5DD : C2 E8 05            		jp	nz,.not_nse3
(1) 1514/     5E0 : FD 7E 0C            		ld	a,(iy+trck_PsgNoise)
(1) 1515/     5E3 : E6 03               		and	3
(1) 1516/     5E5 : FE 03               		cp	3
(1) 1517/     5E7 : C8                  		ret	z
(1) 1518/     5E8 :                     .not_nse3:
(1) 1519/     5E8 : 78                  		ld	a,b
(1) 1520/     5E9 : FE E0               		cp	0E0h
(1) 1521/     5EB : C2 F8 05            		jp	nz,.not_nse
(1) 1522/     5EE : DD 7E 0B            		ld	a,(ix+chnl_InsType)
(1) 1523/     5F1 : E6 03               		and	011b
(1) 1524/     5F3 : FE 03               		cp	3
(1) 1525/     5F5 : C0                  		ret	nz
(1) 1526/     5F6 : 06 C0               		ld	b,0C0h
(1) 1527/     5F8 :                     .not_nse:
(1) 1528/     5F8 : 7C                  		ld	a,h
(1) 1529/     5F9 : B5                  		or	l
(1) 1530/     5FA : C8                  		ret	z
(1) 1531/     5FB :                     		
(1) 1532/     5FB : 7D                  		ld	a,l
(1) 1533/     5FC : 57                  		ld	d,a
(1) 1534/     5FD : E6 0F               		and 	00001111b
(1) 1535/     5FF : B0                  		or	b
(1) 1536/     600 : 5F                  		ld	e,a
(1) 1537/     601 : 7D                  		ld	a,l
(1) 1538/     602 : 0F                  		rrca
(1) 1539/     603 : 0F                  		rrca
(1) 1540/     604 : 0F                  		rrca
(1) 1541/     605 : 0F                  		rrca
(1) 1542/     606 : E6 0F               		and	00001111b
(1) 1543/     608 : 57                  		ld	d,a
(1) 1544/     609 : 7C                  		ld	a,h
(1) 1545/     60A : 0F                  		rrca
(1) 1546/     60B : 0F                  		rrca
(1) 1547/     60C : 0F                  		rrca
(1) 1548/     60D : 0F                  		rrca
(1) 1549/     60E : E6 30               		and	00110000b
(1) 1550/     610 : B2                  		or	d
(1) 1551/     611 : DD 77 1D            		ld	(ix+(chnl_PsgOutFreq+1)),a
(1) 1552/     614 : DD 73 1C            		ld	(ix+chnl_PsgOutFreq),e
(1) 1553/     617 : C9                  		ret
(1) 1554/     618 :                     
(1) 1555/     618 :                     ; --------------------------------
(1) 1556/     618 :                     ; Run effects
(1) 1557/     618 :                     ; 
(1) 1558/     618 :                     ; apply effects on the channels
(1) 1559/     618 :                     ; if unlocked
(1) 1560/     618 :                     ; --------------------------------
(1) 1561/     618 :                     
(1) 1562/     618 :                     .run_effect:
(1) 1563/     618 : 11 00 00            		ld	de,0
(1) 1564/     61B : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1) 1565/     61E : 87                  		add 	a,a
(1) 1566/     61F : E6 FE               		and	11111110b
(1) 1567/     621 : 5F                  		ld	e,a
(1) 1568/     622 : 21 31 06            		ld	hl,.list_doeff
(1) 1569/     625 : 19                  		add	hl,de
(1) 1570/     626 : DD 46 00            		ld	b,(ix+chnl_Chip)
(1) 1571/     629 : DD 4E 06            		ld	c,(ix+chnl_EffArg)
(1) 1572/     62C : 7E                  		ld	a,(hl)
(1) 1573/     62D : 23                  		inc	hl
(1) 1574/     62E : 66                  		ld	h,(hl)
(1) 1575/     62F : 6F                  		ld	l,a
(1) 1576/     630 : E9                  		jp	(hl)
(1) 1577/     631 :                     .list_doeff:
(1) 1578/     631 : 7A 04               		dw .eff_null
(1) 1579/     633 : 7A 04               		dw .eff_null	; A | Set ticks
(1) 1580/     635 : 7A 04               		dw .eff_null	; B | Jump to block
(1) 1581/     637 : 7A 04               		dw .eff_null	; C | Break to row (not possible here)
(1) 1582/     639 : 67 06               		dw .set_D	; D | Volume slide
(1) 1583/     63B : 81 06               		dw .set_E_F	; E
(1) 1584/     63D : 81 06               		dw .set_E_F	; F
(1) 1585/     63F : 7A 04               		dw .eff_null	; G
(1) 1586/     641 : 7A 04               		dw .eff_null	; H
(1) 1587/     643 : 7A 04               		dw .eff_null	; I
(1) 1588/     645 : 7A 04               		dw .eff_null	; J	
(1) 1589/     647 : 7A 04               		dw .eff_null	; K
(1) 1590/     649 : 7A 04               		dw .eff_null	; L
(1) 1591/     64B : 7A 04               		dw .eff_null	; M
(1) 1592/     64D : 7A 04               		dw .eff_null	; N
(1) 1593/     64F : 7A 04               		dw .eff_null	; O
(1) 1594/     651 : 7A 04               		dw .eff_null	; P
(1) 1595/     653 : 7A 04               		dw .eff_null	; Q
(1) 1596/     655 : 7A 04               		dw .eff_null	; R
(1) 1597/     657 : 7A 04               		dw .eff_null	; S
(1) 1598/     659 : 7A 04               		dw .eff_null	; T
(1) 1599/     65B : 7A 04               		dw .eff_null	; U
(1) 1600/     65D : 7A 04               		dw .eff_null	; V
(1) 1601/     65F : 7A 04               		dw .eff_null	; W
(1) 1602/     661 : BC 06               		dw .set_X	; X
(1) 1603/     663 : 7A 04               		dw .eff_null	; Y
(1) 1604/     665 : 7A 04               		dw .eff_null	; Z
(1) 1605/     667 :                     
(1) 1606/     667 :                     ; ------------------------------------
(1) 1607/     667 :                     ; Effect D - Volume slide
(1) 1608/     667 :                     ; ------------------------------------
(1) 1609/     667 :                     
(1) 1610/     667 :                     .set_D:
(1) 1611/     667 : DD 7E 17            		ld	a,(ix+chnl_EfNewVol)
(1) 1612/     66A : DD 86 16            		add 	a,(ix+chnl_EfVolSlide)
(1) 1613/     66D : DD 77 17            		ld	(ix+chnl_EfNewVol),a
(1) 1614/     670 : CB 78               		bit	7,b
(1) 1615/     672 : C2 7B 06            		jp	nz,.setpsg_vol
(1) 1616/     675 : DD 46 17            		ld	b,(ix+chnl_EfNewVol)
(1) 1617/     678 : C3 B5 05            		jp	.set_fm_vol
(1) 1618/     67B :                     .setpsg_vol:
(1) 1619/     67B : DD 7E 17            		ld	a,(ix+chnl_EfNewVol)
(1) 1620/     67E : C3 B7 05            		jp	.set_psg_vol
(1) 1621/     681 :                     
(1) 1622/     681 :                     ; ------------------------------------
(1) 1623/     681 :                     ; Effect E - Portametro down
(1) 1624/     681 :                     ; ------------------------------------
(1) 1625/     681 :                     
(1) 1626/     681 :                     .set_E_F:
(1) 1627/     681 : DD CB 00 7E         		bit	7,(ix+chnl_Chip)
(1) 1628/     685 : C2 9E 06            		jp	nz,.psg_EF
(1) 1629/     688 :                     		
(1) 1630/     688 : DD 56 19            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1631/     68B : DD 5E 18            		ld	e,(ix+chnl_EfPortam)
(1) 1632/     68E : DD 66 1B            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1633/     691 : DD 6E 1A            		ld	l,(ix+chnl_EfNewFreq)
(1) 1634/     694 : 19                  		add 	hl,de
(1) 1635/     695 : DD 74 1B            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1636/     698 : DD 75 1A            		ld	(ix+chnl_EfNewFreq),l
(1) 1637/     69B : C3 B4 05            		jp	.set_fm_freq
(1) 1638/     69E :                     
(1) 1639/     69E :                     .psg_EF:
(1) 1640/     69E : DD 56 19            		ld	d,(ix+(chnl_EfPortam+1))
(1) 1641/     6A1 : DD 5E 18            		ld	e,(ix+chnl_EfPortam)
(1) 1642/     6A4 : DD 66 1B            		ld	h,(ix+(chnl_EfNewFreq+1))
(1) 1643/     6A7 : DD 6E 1A            		ld	l,(ix+chnl_EfNewFreq)
(1) 1644/     6AA : 37                  		scf
(1) 1645/     6AB : ED 52               		sbc 	hl,de
(1) 1646/     6AD : F2 B3 06            		jp	p,.toolow
(1) 1647/     6B0 : 21 00 00            		ld	hl,0
(1) 1648/     6B3 :                     .toolow:
(1) 1649/     6B3 : DD 74 1B            		ld	(ix+(chnl_EfNewFreq+1)),h
(1) 1650/     6B6 : DD 75 1A            		ld	(ix+chnl_EfNewFreq),l
(1) 1651/     6B9 : C3 D5 05            		jp	.set_psg_freq
(1) 1652/     6BC :                     		
(1) 1653/     6BC :                     ; ------------------------------------
(1) 1654/     6BC :                     ; Effect X - Set panning (FM ONLY)
(1) 1655/     6BC :                     ; ------------------------------------
(1) 1656/     6BC :                     
(1) 1657/     6BC :                     .set_X:
(1) 1658/     6BC :                     	; TODO: GG PAN
(1) 1659/     6BC : C9                  		ret
(1) 1660/     6BD :                     ; 		ld	d,0B4h
(1) 1661/     6BD :                     ; 		ld	a,(ix+chnl_Chip)
(1) 1662/     6BD :                     ; 		and	11b
(1) 1663/     6BD :                     ; 		or	d
(1) 1664/     6BD :                     ; 		ld	d,a
(1) 1665/     6BD :                     ; 		ld	a,(ix+chnl_FmRegB4)
(1) 1666/     6BD :                     ; 		or	(ix+chnl_FmPan)
(1) 1667/     6BD :                     ; 		ld	e,a
(1) 1668/     6BD :                     ; 		jp	SndDrv_FmAutoSet
(1) 1669/     6BD :                     
(1) 1670/     6BD :                     ; ===================================================================
(1) 1671/     6BD :                     ; ----------------------------------------------------
(1) 1672/     6BD :                     ; Subs
(1) 1673/     6BD :                     ; ----------------------------------------------------
(1) 1674/     6BD :                     
(1) 1675/     6BD :                     ; ------------------------------------
(1) 1676/     6BD :                     ; Track request
(1) 1677/     6BD :                     ; ------------------------------------
(1) 1678/     6BD :                     
(1) 1679/     6BD :                     SndDrv_ReqTrack:
(1) 1680/     6BD : FD 7E 0A            		ld	a,(iy+trck_ReqFlag)
(1) 1681/     6C0 : FD 36 0A 00         		ld	(iy+trck_ReqFlag),0
(1) 1682/     6C4 : FD 36 0C E0         		ld	(iy+trck_PsgNoise),0E0h
(1) 1683/     6C8 : 07                  		rlca
(1) 1684/     6C9 : E6 FE               		and	11111110b
(1) 1685/     6CB : 11 00 00            		ld	de,0
(1) 1686/     6CE : 5F                  		ld	e,a
(1) 1687/     6CF : 21 D8 06            		ld	hl,.req_list
(1) 1688/     6D2 : 19                  		add	hl,de
(1) 1689/     6D3 : 7E                  		ld	a,(hl)
(1) 1690/     6D4 : 23                  		inc	hl
(1) 1691/     6D5 : 66                  		ld	h,(hl)
(1) 1692/     6D6 : 6F                  		ld	l,a
(1) 1693/     6D7 : E9                  		jp	(hl)
(1) 1694/     6D8 :                     .req_list:
(1) 1695/     6D8 : 00 00               		dw 0
(1) 1696/     6DA : DE 06               		dw .req01
(1) 1697/     6DC : 37 07               		dw .req02
(1) 1698/     6DE :                     
(1) 1699/     6DE :                     ; ------------------------------------
(1) 1700/     6DE :                     ; Flag 01h
(1) 1701/     6DE :                     ; ------------------------------------
(1) 1702/     6DE :                     
(1) 1703/     6DE :                     .req01:
(1) 1704/     6DE : FD 46 00            		ld	b,(iy+trck_ReqBlk)		; Copy addresses
(1) 1705/     6E1 : FD 4E 01            		ld	c,(iy+(trck_ReqBlk+1))
(1) 1706/     6E4 : FD 56 02            		ld	d,(iy+trck_ReqPatt)
(1) 1707/     6E7 : FD 5E 03            		ld	e,(iy+(trck_ReqPatt+1))
(1) 1708/     6EA : FD 66 04            		ld	h,(iy+trck_ReqIns)
(1) 1709/     6ED : FD 6E 05            		ld	l,(iy+(trck_ReqIns+1))
(1) 1710/     6F0 : FD 70 12            		ld	(iy+trck_Blocks),b
(1) 1711/     6F3 : FD 71 13            		ld	(iy+(trck_Blocks+1)),c
(1) 1712/     6F6 : FD 72 14            		ld	(iy+trck_PattBase),d
(1) 1713/     6F9 : FD 73 15            		ld	(iy+(trck_PattBase+1)),e
(1) 1714/     6FC : FD 72 18            		ld	(iy+trck_PattRead),d
(1) 1715/     6FF : FD 73 19            		ld	(iy+(trck_PattRead+1)),e
(1) 1716/     702 : FD 74 16            		ld	(iy+trck_Instr),h
(1) 1717/     705 : FD 75 17            		ld	(iy+(trck_Instr+1)),l
(1) 1718/     708 : FD 56 06            		ld	d,(iy+trck_ReqTicks)		; Tempo and ticks
(1) 1719/     70B : FD 4E 07            		ld	c,(iy+trck_ReqTempo)
(1) 1720/     70E : FD 46 08            		ld	b,(iy+trck_ReqCurrBlk)
(1) 1721/     711 : FD 7E 09            		ld	a,(iy+trck_ReqSndBnk)
(1) 1722/     714 : FD 72 1F            		ld	(iy+trck_TicksCurr),d
(1) 1723/     717 : FD 72 1C            		ld	(iy+trck_TicksMain),d
(1) 1724/     71A : FD 72 0D            		ld	(iy+trck_TicksRead),d
(1) 1725/     71D : FD 71 1D            		ld	(iy+trck_TempoBits),c
(1) 1726/     720 : FD 70 0E            		ld	(iy+trck_BlockCurr),b
(1) 1727/     723 : 32 55 C1            		ld	(curr_SndBank),a
(1) 1728/     726 : AF                  		xor	a
(1) 1729/     727 : FD 77 1A            		ld	(iy+trck_RowSteps),a
(1) 1730/     72A : FD 77 1B            		ld	(iy+(trck_RowSteps+1)),a		
(1) 1731/     72D : FD 77 1E            		ld	(iy+trck_RowWait),a
(1) 1732/     730 : 3C                  		inc 	a
(1) 1733/     731 : FD 77 11            		ld	(iy+trck_Active),a
(1) 1734/     734 : C3 3B 07            		jp	SndDrv_ResetChan
(1) 1735/     737 :                     		
(1) 1736/     737 :                     ; ------------------------------------
(1) 1737/     737 :                     ; Flag 02h
(1) 1738/     737 :                     ; ------------------------------------
(1) 1739/     737 :                     
(1) 1740/     737 :                     .req02:
(1) 1741/     737 : AF                  		xor	a
(1) 1742/     738 : FD 77 11            		ld	(iy+trck_Active),a
(1) 1743/     73B :                     
(1) 1744/     73B :                     ; ------------------------------------
(1) 1745/     73B :                     ; Reset channels and silence them
(1) 1746/     73B :                     ; ------------------------------------
(1) 1747/     73B :                     
(1) 1748/     73B :                     SndDrv_ResetChan:
(1) 1749/     73B : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1) 1750/     73E : FD 7E 10            		ld	a,(iy+trck_Priority)
(1) 1751/     741 : B7                  		or	a
(1) 1752/     742 : CA 48 07            		jp	z,.lowprio
(1) 1753/     745 : 21 4A C1            		ld	hl,SndBuff_UsedChnls_2
(1) 1754/     748 :                     .lowprio:
(1) 1755/     748 : 06 04               		ld	b,MAX_CHNLS
(1) 1756/     74A : AF                  		xor	a
(1) 1757/     74B :                     .nexttype:
(1) 1758/     74B : 77                  		ld	(hl),a
(1) 1759/     74C : 23                  		inc 	hl
(1) 1760/     74D : 10 FC               		djnz	.nexttype
(1) 1761/     74F : DD E5               		push	ix
(1) 1762/     751 : 06 04               		ld	b,MAX_CHNLS
(1) 1763/     753 : AF                  		xor	a
(1) 1764/     754 : 11 20 00            		ld	de,20h
(1) 1765/     757 :                     .initchnls:
(1) 1766/     757 : DD 36 01 00         		ld	(ix+chnl_Type),0		; Note request
(1) 1767/     75B : DD 36 02 FE         		ld	(ix+chnl_Note),-2		; Set Note off
(1) 1768/     75F : DD 36 04 40         		ld	(ix+chnl_Vol),64		; Max volume
(1) 1769/     763 : DD 36 17 40         		ld	(ix+chnl_EfNewVol),64
(1) 1770/     767 : DD 36 0D C0         		ld	(ix+chnl_FmPan),0C0h
(1) 1771/     76B : DD 77 0B            		ld	(ix+chnl_InsType),a
(1) 1772/     76E : DD 77 0C            		ld	(ix+chnl_InsOpt),a
(1) 1773/     771 : DD 77 16            		ld	(ix+chnl_EfVolSlide),a
(1) 1774/     774 : DD 77 13            		ld	(ix+chnl_PsgVolEnv),a
(1) 1775/     777 : DD 77 14            		ld	(ix+chnl_PsgIndx),a
(1) 1776/     77A : DD 19               		add 	ix,de
(1) 1777/     77C : 10 D9               		djnz	.initchnls
(1) 1778/     77E : DD E1               		pop	ix
(1) 1779/     780 :                     		
(1) 1780/     780 :                     ; ------------------------------------
(1) 1781/     780 :                     
(1) 1782/     780 : DD E5               		push	ix
(1) 1783/     782 : 11 4A C1            		ld	de,SndBuff_UsedChnls_2
(1) 1784/     785 : 21 40 C1            		ld	hl,SndBuff_UsedChnls
(1) 1785/     788 : 06 04               		ld	b,MAX_CHNLS			; FM channels
(1) 1786/     78A :                     .nxtfmchnl:
(1) 1787/     78A : C5                  		push	bc
(1) 1788/     78B : 1A                  		ld	a,(de)
(1) 1789/     78C : 4E                  		ld	c,(hl)
(1) 1790/     78D : B1                  		or	c
(1) 1791/     78E : B7                  		or	a
(1) 1792/     78F : C2 A0 07            		jp	nz,.dontvolfm
(1) 1793/     792 : DD 7E 00            		ld	a,(ix+chnl_Chip)
(1) 1794/     795 : B7                  		or	a
(1) 1795/     796 : F2 A0 07            		jp	p,.fm_shut
(1) 1796/     799 : F6 1F               		or	01Fh
(1) 1797/     79B : D3 7F               		out	(psg_ctrl),a
(1) 1798/     79D : C3 A0 07            		jp	.dontvolfm
(1) 1799/     7A0 :                     .fm_shut:
(1) 1800/     7A0 :                     ; 		push 	de
(1) 1801/     7A0 :                     ; 		ld	d,28h
(1) 1802/     7A0 :                     ; 		ld	e,a
(1) 1803/     7A0 :                     ; 		call	SndDrv_FmSet_1
(1) 1804/     7A0 :                     ; 		pop	de
(1) 1805/     7A0 :                     .dontvolfm:
(1) 1806/     7A0 : 23                  		inc 	hl
(1) 1807/     7A1 : 13                  		inc 	de
(1) 1808/     7A2 : 01 20 00            		ld	bc,20h
(1) 1809/     7A5 : DD 09               		add 	ix,bc
(1) 1810/     7A7 : C1                  		pop	bc
(1) 1811/     7A8 : 10 E0               		djnz	.nxtfmchnl
(1) 1812/     7AA : DD E1               		pop	ix
(1) 1813/     7AC : C9                  		ret
(1) 1814/     7AD :                     
(1) 1815/     7AD :                     ; ---------------------------------------------
(1) 1816/     7AD :                     ; FM send registers
(1) 1817/     7AD :                     ; 
(1) 1818/     7AD :                     ; Input:
(1) 1819/     7AD :                     ; d - ctrl
(1) 1820/     7AD :                     ; e - data
(1) 1821/     7AD :                     ; c - channel
(1) 1822/     7AD :                     ; ---------------------------------------------
(1) 1823/     7AD :                     
(1) 1824/     7AD :                     ; SndDrv_FmAutoSet:
(1) 1825/     7AD :                     ; 		bit 	2,(ix+chnl_Chip)
(1) 1826/     7AD :                     ; 		jp	nz,SndDrv_FmSet_2
(1) 1827/     7AD :                     ; 		
(1) 1828/     7AD :                     ; SndDrv_FmSet_1:
(1) 1829/     7AD :                     ; 		ld	a,d
(1) 1830/     7AD :                     ; 		ld	(Zym_ctrl_1),a
(1) 1831/     7AD :                     ; 		nop
(1) 1832/     7AD :                     ; 		ld	a,e
(1) 1833/     7AD :                     ; 		ld	(Zym_data_1),a
(1) 1834/     7AD :                     ; 		nop
(1) 1835/     7AD :                     ; 		ret
(1) 1836/     7AD :                     ; 
(1) 1837/     7AD :                     ; SndDrv_FmSet_2:
(1) 1838/     7AD :                     ; 		ld	a,d
(1) 1839/     7AD :                     ; 		ld	(Zym_ctrl_2),a
(1) 1840/     7AD :                     ; 		nop
(1) 1841/     7AD :                     ; 		ld	a,e
(1) 1842/     7AD :                     ; 		ld	(Zym_data_2),a
(1) 1843/     7AD :                     ; 		nop
(1) 1844/     7AD :                     ; 		ret
(1) 1845/     7AD :                     
(1) 1846/     7AD :                     ; ====================================================================
(1) 1847/     7AD :                     ; fmFreq_List:	dw 644			; C-0
(1) 1848/     7AD :                     ; 		dw 681
(1) 1849/     7AD :                     ; 		dw 722
(1) 1850/     7AD :                     ; 		dw 765
(1) 1851/     7AD :                     ; 		dw 810
(1) 1852/     7AD :                     ; 		dw 858
(1) 1853/     7AD :                     ; 		dw 910
(1) 1854/     7AD :                     ; 		dw 964
(1) 1855/     7AD :                     ; 		dw 1021
(1) 1856/     7AD :                     ; 		dw 1081
(1) 1857/     7AD :                     ; 		dw 1146
(1) 1858/     7AD :                     ; 		dw 1214
(1) 1859/     7AD :                     ; 		dw 644|800h		; C-1
(1) 1860/     7AD :                     ; 		dw 681|800h
(1) 1861/     7AD :                     ; 		dw 722|800h
(1) 1862/     7AD :                     ; 		dw 765|800h
(1) 1863/     7AD :                     ; 		dw 810|800h
(1) 1864/     7AD :                     ; 		dw 858|800h
(1) 1865/     7AD :                     ; 		dw 910|800h
(1) 1866/     7AD :                     ; 		dw 964|800h
(1) 1867/     7AD :                     ; 		dw 1021|800h
(1) 1868/     7AD :                     ; 		dw 1081|800h
(1) 1869/     7AD :                     ; 		dw 1146|800h
(1) 1870/     7AD :                     ; 		dw 1214|800h
(1) 1871/     7AD :                     ; 		dw 644|1000h		; C-2
(1) 1872/     7AD :                     ; 		dw 681|1000h
(1) 1873/     7AD :                     ; 		dw 722|1000h
(1) 1874/     7AD :                     ; 		dw 765|1000h
(1) 1875/     7AD :                     ; 		dw 810|1000h
(1) 1876/     7AD :                     ; 		dw 858|1000h
(1) 1877/     7AD :                     ; 		dw 910|1000h
(1) 1878/     7AD :                     ; 		dw 964|1000h
(1) 1879/     7AD :                     ; 		dw 1021|1000h
(1) 1880/     7AD :                     ; 		dw 1081|1000h
(1) 1881/     7AD :                     ; 		dw 1146|1000h
(1) 1882/     7AD :                     ; 		dw 1214|1000h
(1) 1883/     7AD :                     ; 		dw 644|1800h		; C-3
(1) 1884/     7AD :                     ; 		dw 681|1800h
(1) 1885/     7AD :                     ; 		dw 722|1800h
(1) 1886/     7AD :                     ; 		dw 765|1800h
(1) 1887/     7AD :                     ; 		dw 810|1800h
(1) 1888/     7AD :                     ; 		dw 858|1800h
(1) 1889/     7AD :                     ; 		dw 910|1800h
(1) 1890/     7AD :                     ; 		dw 964|1800h
(1) 1891/     7AD :                     ; 		dw 1021|1800h
(1) 1892/     7AD :                     ; 		dw 1081|1800h
(1) 1893/     7AD :                     ; 		dw 1146|1800h
(1) 1894/     7AD :                     ; 		dw 1214|1800h
(1) 1895/     7AD :                     ; 		dw 644|2000h		; C-4
(1) 1896/     7AD :                     ; 		dw 681|2000h
(1) 1897/     7AD :                     ; 		dw 722|2000h
(1) 1898/     7AD :                     ; 		dw 765|2000h
(1) 1899/     7AD :                     ; 		dw 810|2000h
(1) 1900/     7AD :                     ; 		dw 858|2000h
(1) 1901/     7AD :                     ; 		dw 910|2000h
(1) 1902/     7AD :                     ; 		dw 964|2000h
(1) 1903/     7AD :                     ; 		dw 1021|2000h
(1) 1904/     7AD :                     ; 		dw 1081|2000h
(1) 1905/     7AD :                     ; 		dw 1146|2000h
(1) 1906/     7AD :                     ; 		dw 1214|2000h
(1) 1907/     7AD :                     ; 		dw 644|2800h		; C-5
(1) 1908/     7AD :                     ; 		dw 681|2800h
(1) 1909/     7AD :                     ; 		dw 722|2800h
(1) 1910/     7AD :                     ; 		dw 765|2800h
(1) 1911/     7AD :                     ; 		dw 810|2800h
(1) 1912/     7AD :                     ; 		dw 858|2800h
(1) 1913/     7AD :                     ; 		dw 910|2800h
(1) 1914/     7AD :                     ; 		dw 964|2800h
(1) 1915/     7AD :                     ; 		dw 1021|2800h
(1) 1916/     7AD :                     ; 		dw 1081|2800h
(1) 1917/     7AD :                     ; 		dw 1146|2800h
(1) 1918/     7AD :                     ; 		dw 1214|2800h		
(1) 1919/     7AD :                     ; 		dw 644|3000h		; C-6
(1) 1920/     7AD :                     ; 		dw 681|3000h
(1) 1921/     7AD :                     ; 		dw 722|3000h
(1) 1922/     7AD :                     ; 		dw 765|3000h
(1) 1923/     7AD :                     ; 		dw 810|3000h
(1) 1924/     7AD :                     ; 		dw 858|3000h
(1) 1925/     7AD :                     ; 		dw 910|3000h
(1) 1926/     7AD :                     ; 		dw 964|3000h
(1) 1927/     7AD :                     ; 		dw 1021|3000h
(1) 1928/     7AD :                     ; 		dw 1081|3000h
(1) 1929/     7AD :                     ; 		dw 1146|3000h
(1) 1930/     7AD :                     ; 		dw 1214|3000h
(1) 1931/     7AD :                     ; 		dw 644|3800h		; C-7
(1) 1932/     7AD :                     ; 		dw 681|3800h
(1) 1933/     7AD :                     ; 		dw 722|3800h
(1) 1934/     7AD :                     ; 		dw 765|3800h
(1) 1935/     7AD :                     ; 		dw 810|3800h
(1) 1936/     7AD :                     ; 		dw 858|3800h
(1) 1937/     7AD :                     ; 		dw 910|3800h
(1) 1938/     7AD :                     ; 		dw 964|3800h
(1) 1939/     7AD :                     ; 		dw 1021|3800h
(1) 1940/     7AD :                     ; 		dw 1081|3800h
(1) 1941/     7AD :                     ; 		dw 1146|3800h
(1) 1942/     7AD :                     ; 		dw 1214|3800h
(1) 1943/     7AD :                     
(1) 1944/     7AD :                     psgFreq_List:
(1) 1945/     7AD : FF FF               		dw -1		; C-0 $0
(1) 1946/     7AF : FF FF               		dw -1
(1) 1947/     7B1 : FF FF               		dw -1
(1) 1948/     7B3 : FF FF               		dw -1
(1) 1949/     7B5 : FF FF               		dw -1
(1) 1950/     7B7 : FF FF               		dw -1
(1) 1951/     7B9 : FF FF               		dw -1
(1) 1952/     7BB : FF FF               		dw -1
(1) 1953/     7BD : FF FF               		dw -1
(1) 1954/     7BF : FF FF               		dw -1
(1) 1955/     7C1 : FF FF               		dw -1
(1) 1956/     7C3 : FF FF               		dw -1
(1) 1957/     7C5 : FF FF               		dw -1		; C-1 $C
(1) 1958/     7C7 : FF FF               		dw -1
(1) 1959/     7C9 : FF FF               		dw -1
(1) 1960/     7CB : FF FF               		dw -1
(1) 1961/     7CD : FF FF               		dw -1
(1) 1962/     7CF : FF FF               		dw -1
(1) 1963/     7D1 : FF FF               		dw -1
(1) 1964/     7D3 : FF FF               		dw -1
(1) 1965/     7D5 : FF FF               		dw -1
(1) 1966/     7D7 : FF FF               		dw -1
(1) 1967/     7D9 : FF FF               		dw -1
(1) 1968/     7DB : FF FF               		dw -1
(1) 1969/     7DD : FF FF               		dw -1		; C-2 $18
(1) 1970/     7DF : FF FF               		dw -1
(1) 1971/     7E1 : FF FF               		dw -1
(1) 1972/     7E3 : FF FF               		dw -1
(1) 1973/     7E5 : FF FF               		dw -1
(1) 1974/     7E7 : FF FF               		dw -1
(1) 1975/     7E9 : FF FF               		dw -1
(1) 1976/     7EB : FF FF               		dw -1
(1) 1977/     7ED : FF FF               		dw -1
(1) 1978/     7EF : FF FF               		dw -1
(1) 1979/     7F1 : FF FF               		dw -1
(1) 1980/     7F3 : FF FF               		dw -1
(1) 1981/     7F5 : FF FF               		dw -1		; C-3 $24
(1) 1982/     7F7 : FF FF               		dw -1
(1) 1983/     7F9 : FF FF               		dw -1
(1) 1984/     7FB : FF FF               		dw -1
(1) 1985/     7FD : FF FF               		dw -1
(1) 1986/     7FF : FF FF               		dw -1
(1) 1987/     801 : FF FF               		dw -1
(1) 1988/     803 : FF FF               		dw -1
(1) 1989/     805 : FF FF               		dw -1
(1) 1990/     807 : F8 03               		dw 3F8h
(1) 1991/     809 : BF 03               		dw 3BFh
(1) 1992/     80B : 89 03               		dw 389h
(1) 1993/     80D : 56 03               		dw 356h		;C-4 30
(1) 1994/     80F : 26 03               		dw 326h
(1) 1995/     811 : F9 02               		dw 2F9h
(1) 1996/     813 : CE 02               		dw 2CEh
(1) 1997/     815 : A5 02               		dw 2A5h
(1) 1998/     817 : 80 02               		dw 280h
(1) 1999/     819 : 5C 02               		dw 25Ch
(1) 2000/     81B : 3A 02               		dw 23Ah
(1) 2001/     81D : 1A 02               		dw 21Ah
(1) 2002/     81F : FB 01               		dw 1FBh
(1) 2003/     821 : DF 01               		dw 1DFh
(1) 2004/     823 : C4 01               		dw 1C4h
(1) 2005/     825 : AB 01               		dw 1ABh		;C-5 3C
(1) 2006/     827 : 93 01               		dw 193h
(1) 2007/     829 : 7D 01               		dw 17Dh
(1) 2008/     82B : 67 01               		dw 167h
(1) 2009/     82D : 53 01               		dw 153h
(1) 2010/     82F : 40 01               		dw 140h
(1) 2011/     831 : 2E 01               		dw 12Eh
(1) 2012/     833 : 1D 01               		dw 11Dh
(1) 2013/     835 : 0D 01               		dw 10Dh
(1) 2014/     837 : FE 00               		dw 0FEh
(1) 2015/     839 : EF 00               		dw 0EFh
(1) 2016/     83B : E2 00               		dw 0E2h
(1) 2017/     83D : D6 00               		dw 0D6h		;C-6 48
(1) 2018/     83F : C9 00               		dw 0C9h
(1) 2019/     841 : BE 00               		dw 0BEh
(1) 2020/     843 : B4 00               		dw 0B4h
(1) 2021/     845 : A9 00               		dw 0A9h
(1) 2022/     847 : A0 00               		dw 0A0h
(1) 2023/     849 : 97 00               		dw 97h
(1) 2024/     84B : 8F 00               		dw 8Fh
(1) 2025/     84D : 87 00               		dw 87h
(1) 2026/     84F : 7F 00               		dw 7Fh
(1) 2027/     851 : 78 00               		dw 78h
(1) 2028/     853 : 71 00               		dw 71h
(1) 2029/     855 : 6B 00               		dw 6Bh		; C-7 54
(1) 2030/     857 : 65 00               		dw 65h
(1) 2031/     859 : 5F 00               		dw 5Fh
(1) 2032/     85B : 5A 00               		dw 5Ah
(1) 2033/     85D : 55 00               		dw 55h
(1) 2034/     85F : 50 00               		dw 50h
(1) 2035/     861 : 4B 00               		dw 4Bh
(1) 2036/     863 : 47 00               		dw 47h
(1) 2037/     865 : 43 00               		dw 43h
(1) 2038/     867 : 40 00               		dw 40h
(1) 2039/     869 : 3C 00               		dw 3Ch
(1) 2040/     86B : 39 00               		dw 39h
(1) 2041/     86D : 36 00               		dw 36h		; C-8 $60
(1) 2042/     86F : 33 00               		dw 33h
(1) 2043/     871 : 30 00               		dw 30h
(1) 2044/     873 : 2D 00               		dw 2Dh
(1) 2045/     875 : 2B 00               		dw 2Bh
(1) 2046/     877 : 28 00               		dw 28h
(1) 2047/     879 : 26 00               		dw 26h
(1) 2048/     87B : 24 00               		dw 24h
(1) 2049/     87D : 22 00               		dw 22h
(1) 2050/     87F : 20 00               		dw 20h
(1) 2051/     881 : 1F 00               		dw 1Fh
(1) 2052/     883 : 1D 00               		dw 1Dh
(1) 2053/     885 : 1B 00               		dw 1Bh		; C-9 $6C
(1) 2054/     887 : 1A 00               		dw 1Ah
(1) 2055/     889 : 18 00               		dw 18h
(1) 2056/     88B : 17 00               		dw 17h
(1) 2057/     88D : 16 00               		dw 16h
(1) 2058/     88F : 15 00               		dw 15h
(1) 2059/     891 : 13 00               		dw 13h
(1) 2060/     893 : 12 00               		dw 12h
(1) 2061/     895 : 11 00               		dw 11h
(1) 2062/     897 : 10 00                		dw 10h
(1) 2063/     899 : 09 00                		dw 9h
(1) 2064/     89B : 08 00                		dw 8h
(1) 2065/     89D : 00 00               		dw 0		; use +60 if using C-5 for tone 3 noise
(1) 2066/     89F :                     		
(1) 2067/     89F :                     ; wavFreq_List:	dw 100h		; C-0
(1) 2068/     89F :                     ; 		dw 100h
(1) 2069/     89F :                     ; 		dw 100h
(1) 2070/     89F :                     ; 		dw 100h
(1) 2071/     89F :                     ; 		dw 100h
(1) 2072/     89F :                     ; 		dw 100h
(1) 2073/     89F :                     ; 		dw 100h	
(1) 2074/     89F :                     ; 		dw 100h
(1) 2075/     89F :                     ; 		dw 100h
(1) 2076/     89F :                     ; 		dw 100h
(1) 2077/     89F :                     ; 		dw 100h
(1) 2078/     89F :                     ; 		dw 100h
(1) 2079/     89F :                     ; 		dw 100h		; C-1
(1) 2080/     89F :                     ; 		dw 100h
(1) 2081/     89F :                     ; 		dw 100h
(1) 2082/     89F :                     ; 		dw 100h
(1) 2083/     89F :                     ; 		dw 100h
(1) 2084/     89F :                     ; 		dw 100h
(1) 2085/     89F :                     ; 		dw 100h	
(1) 2086/     89F :                     ; 		dw 100h
(1) 2087/     89F :                     ; 		dw 100h
(1) 2088/     89F :                     ; 		dw 100h
(1) 2089/     89F :                     ; 		dw 100h
(1) 2090/     89F :                     ; 		dw 100h
(1) 2091/     89F :                     ; 		dw 100h		; C-2
(1) 2092/     89F :                     ; 		dw 100h
(1) 2093/     89F :                     ; 		dw 100h
(1) 2094/     89F :                     ; 		dw 100h
(1) 2095/     89F :                     ; 		dw 100h
(1) 2096/     89F :                     ; 		dw 100h
(1) 2097/     89F :                     ; 		dw 100h
(1) 2098/     89F :                     ; 		dw 100h
(1) 2099/     89F :                     ; 		dw 100h
(1) 2100/     89F :                     ; 		dw 100h
(1) 2101/     89F :                     ; 		dw 100h
(1) 2102/     89F :                     ; 		dw 03Bh
(1) 2103/     89F :                     ; 		dw 03Eh		; C-3 5512
(1) 2104/     89F :                     ; 		dw 043h		; C#3
(1) 2105/     89F :                     ; 		dw 046h		; D-3
(1) 2106/     89F :                     ; 		dw 049h		; D#3
(1) 2107/     89F :                     ; 		dw 04Eh		; E-3
(1) 2108/     89F :                     ; 		dw 054h		; F-3
(1) 2109/     89F :                     ; 		dw 058h		; F#3
(1) 2110/     89F :                     ; 		dw 05Eh		; G-3 8363 -17
(1) 2111/     89F :                     ; 		dw 063h		; G#3
(1) 2112/     89F :                     ; 		dw 068h		; A-3
(1) 2113/     89F :                     ; 		dw 070h		; A#3
(1) 2114/     89F :                     ; 		dw 075h		; B-3
(1) 2115/     89F :                     ; 		dw 07Fh		; C-4 11025 -12
(1) 2116/     89F :                     ; 		dw 088h		; C#4
(1) 2117/     89F :                     ; 		dw 08Fh		; D-4
(1) 2118/     89F :                     ; 		dw 097h		; D#4
(1) 2119/     89F :                     ; 		dw 0A0h		; E-4
(1) 2120/     89F :                     ; 		dw 0ADh		; F-4
(1) 2121/     89F :                     ; 		dw 0B5h		; F#4
(1) 2122/     89F :                     ; 		dw 0C0h		; G-4
(1) 2123/     89F :                     ; 		dw 0CCh		; G#4
(1) 2124/     89F :                     ; 		dw 0D7h		; A-4
(1) 2125/     89F :                     ; 		dw 0E7h		; A#4
(1) 2126/     89F :                     ; 		dw 0F0h		; B-4
(1) 2127/     89F :                     ; 		dw 100h		; C-5 22050
(1) 2128/     89F :                     ; 		dw 110h		; C#5
(1) 2129/     89F :                     ; 		dw 120h		; D-5
(1) 2130/     89F :                     ; 		dw 12Ch		; D#5
(1) 2131/     89F :                     ; 		dw 142h		; E-5
(1) 2132/     89F :                     ; 		dw 158h		; F-5
(1) 2133/     89F :                     ; 		dw 16Ah		; F#5 32000 +6
(1) 2134/     89F :                     ; 		dw 17Eh		; G-5
(1) 2135/     89F :                     ; 		dw 190h		; G#5
(1) 2136/     89F :                     ; 		dw 1ACh		; A-5
(1) 2137/     89F :                     ; 		dw 1C2h		; A#5
(1) 2138/     89F :                     ; 		dw 1E0h		; B-5
(1) 2139/     89F :                     ; 		dw 1F8h		; C-6 44100 +12
(1) 2140/     89F :                     ; 		dw 210h		; C#6
(1) 2141/     89F :                     ; 		dw 240h		; D-6
(1) 2142/     89F :                     ; 		dw 260h		; D#6
(1) 2143/     89F :                     ; 		dw 280h		; E-6
(1) 2144/     89F :                     ; 		dw 2A0h		; F-6
(1) 2145/     89F :                     ; 		dw 2D0h		; F#6
(1) 2146/     89F :                     ; 		dw 2F8h		; G-6
(1) 2147/     89F :                     ; 		dw 320h		; G#6
(1) 2148/     89F :                     ; 		dw 350h		; A-6
(1) 2149/     89F :                     ; 		dw 380h		; A#6
(1) 2150/     89F :                     ; 		dw 3C0h		; B-6
(1) 2151/     89F :                     ; 		dw 400h		; C-7 88200
(1) 2152/     89F :                     ; 		dw 100h
(1) 2153/     89F :                     ; 		dw 100h
(1) 2154/     89F :                     ; 		dw 100h
(1) 2155/     89F :                     ; 		dw 100h
(1) 2156/     89F :                     ; 		dw 100h
(1) 2157/     89F :                     ; 		dw 100h	
(1) 2158/     89F :                     ; 		dw 100h
(1) 2159/     89F :                     ; 		dw 100h
(1) 2160/     89F :                     ; 		dw 100h
(1) 2161/     89F :                     ; 		dw 100h
(1) 2162/     89F :                     ; 		dw 100h	
(1) 2163/     89F :                     ; 		dw 100h		; C-8
(1) 2164/     89F :                     ; 		dw 100h
(1) 2165/     89F :                     ; 		dw 100h
(1) 2166/     89F :                     ; 		dw 100h
(1) 2167/     89F :                     ; 		dw 100h
(1) 2168/     89F :                     ; 		dw 100h
(1) 2169/     89F :                     ; 		dw 100h	
(1) 2170/     89F :                     ; 		dw 100h
(1) 2171/     89F :                     ; 		dw 100h
(1) 2172/     89F :                     ; 		dw 100h
(1) 2173/     89F :                     ; 		dw 100h
(1) 2174/     89F :                     ; 		dw 100h	
(1) 2175/     89F :                     ; 		dw 100h		; C-9
(1) 2176/     89F :                     ; 		dw 100h
(1) 2177/     89F :                     ; 		dw 100h
(1) 2178/     89F :                     ; 		dw 100h
(1) 2179/     89F :                     ; 		dw 100h
(1) 2180/     89F :                     ; 		dw 100h
(1) 2181/     89F :                     ; 		dw 100h	
(1) 2182/     89F :                     ; 		dw 100h
(1) 2183/     89F :                     ; 		dw 100h
(1) 2184/     89F :                     ; 		dw 100h
(1) 2185/     89F :                     ; 		dw 100h
(1) 2186/     89F :                     ; 		dw 100h
(1) 2187/     89F :                     
(1) 2188/     89F :                     ; ====================================================================
(1) 2189/     89F :                     ; ----------------------------------------------------------------
(1) 2190/     89F :                     ; MUSIC DATA
(1) 2191/     89F :                     ; ----------------------------------------------------------------
(1) 2192/     89F :                     
(1) 2193/     89F :                     ; ----------------------------------------------------
(1) 2194/     89F :                     ; PSG Instruments
(1) 2195/     89F :                     ; ----------------------------------------------------
(1) 2196/     89F :                     
(1) 2197/     89F : 00                  PsgIns_00:	db 0
(1) 2198/     8A0 : FF                  		db -1
(1) 2199/     8A1 : 00 02 04 05 06      PsgIns_01:	db 0,2,4,5,6
(1) 2200/     8A6 : FF                  		db -1
(1) 2201/     8A7 : 00 0F               PsgIns_02:	db 0,15
(1) 2202/     8A9 : FF                  		db -1
(1) 2203/     8AA : 00 00 01 01 02 02   PsgIns_03:	db 0,0,1,1,2,2,3,4,6,10,15
                    03 04 06 0A 0F 
(1) 2204/     8B5 : FF                  		db -1
(1) 2205/     8B6 : 00 02 04 06 0A      PsgIns_04:	db 0,2,4,6,10
(1) 2206/     8BB : FF                  		db -1
(1) 2207/     8BC :                     
     118/     8BC :                     		include "system/video.asm"	; Video
(1)    1/     8BC :                     ; ====================================================================
(1)    2/     8BC :                     ; ----------------------------------------------------------------
(1)    3/     8BC :                     ; Video
(1)    4/     8BC :                     ; ----------------------------------------------------------------
(1)    5/     8BC :                     
(1)    6/     8BC :                     ; --------------------------------------------------------
(1)    7/     8BC :                     ; Init Video
(1)    8/     8BC :                     ; 
(1)    9/     8BC :                     ; Uses:
(1)   10/     8BC :                     ; a0-a2,d0-d1
(1)   11/     8BC :                     ; --------------------------------------------------------
(1)   12/     8BC :                     
(1)   13/     8BC :                     Video_Init:
(1)   14/     8BC : CD 0F 09            		call	Video_Clear
(1)   15/     8BF :                      
(1)   16/     8BF : 21 DC 0A            		ld      hl,list_vdpregs		; hl - data array for default register data
(1)   17/     8C2 : 11 88 C1            		ld	de,RAM_VdpCache		; de - VDP cache on RAM
(1)   18/     8C5 : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   19/     8C7 : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   20/     8C9 :                     .loop:
(1)   21/     8C9 : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   22/     8CA : 12                  		ld	(de),a
(1)   23/     8CB : 13                  		inc 	de
(1)   24/     8CC : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   25/     8CE : 79                  		ld	a,c			; Now set the register
(1)   26/     8CF : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   27/     8D1 : 0C                  		inc	c			; Next register to use
(1)   28/     8D2 : 23                  		inc 	hl			; Next byte from the list
(1)   29/     8D3 : 10 F4               		djnz    .loop    		; decrement b and jump if b != 0
(1)   30/     8D5 : C9                  		ret
(1)   31/     8D6 :                     
(1)   32/     8D6 :                     ; --------------------------------------------------------
(1)   33/     8D6 :                     ; Video_InitPrint
(1)   34/     8D6 :                     ; 
(1)   35/     8D6 :                     ; Call this before using any on-screen text print
(1)   36/     8D6 :                     ; 
(1)   37/     8D6 :                     ; Graphics will be located at in 160h
(1)   38/     8D6 :                     ; (ASCII starts at 140h)
(1)   39/     8D6 :                     ; Uses palette line 0
(1)   40/     8D6 :                     ; 
(1)   41/     8D6 :                     ; Uses:
(1)   42/     8D6 :                     ; a0-a2,d0-d1
(1)   43/     8D6 :                     ; --------------------------------------------------------
(1)   44/     8D6 :                     
(1)   45/     8D6 :                     Video_InitPrint:
(1)   46/     8D6 : 11 40 01            		ld	de,140h			; VRAM | Palette 2
(1)   47/     8D9 : ED 53 86 C1         		ld	(RAM_VidPrntVram),de
(1)   48/     8DD : 21 E7 0A            		ld	hl,Art_PrintFont
(1)   49/     8E0 : 11 00 0C            		ld	de,Art_PrintFont_e-Art_PrintFont
(1)   50/     8E3 : 01 60 01            		ld	bc,140h+20h
(1)   51/     8E6 : CD 7F 09            		call	Video_LoadArt
(1)   52/     8E9 :                     		
(1)   53/     8E9 : 21 E7 16            		ld	hl,Pal_PrintFont
(1)   54/     8EC : 06 06               		ld	b,6
(1)   55/     8EE : 16 00               		ld	d,0
(1)   56/     8F0 : CD 42 09            		call	Video_LoadPal		
(1)   57/     8F3 : 21 E7 16            		ld	hl,Pal_PrintFont
(1)   58/     8F6 : 06 06               		ld	b,6
(1)   59/     8F8 : 16 10               		ld	d,16
(1)   60/     8FA : C3 42 09            		jp	Video_LoadPal
(1)   61/     8FD :                     
(1)   62/     8FD :                     ; ====================================================================
(1)   63/     8FD :                     ; ----------------------------------------------------------------
(1)   64/     8FD :                     ; Video subroutines
(1)   65/     8FD :                     ; ----------------------------------------------------------------
(1)   66/     8FD :                     
(1)   67/     8FD :                     ; ---------------------------------
(1)   68/     8FD :                     ; Video_Update
(1)   69/     8FD :                     ; 
(1)   70/     8FD :                     ; Update registers from cache
(1)   71/     8FD :                     ; to VDP
(1)   72/     8FD :                     ; ---------------------------------
(1)   73/     8FD :                     
(1)   74/     8FD :                     Video_Update:
(1)   75/     8FD : 21 88 C1            		ld      hl,RAM_VdpCache		; hl - data array for default register data
(1)   76/     900 : 0E 80               		ld      c,80h			; c - 80h start at first register
(1)   77/     902 : 06 0B               		ld      b,11			; b - 11 registers to set	
(1)   78/     904 :                     .loop:
(1)   79/     904 : 7E                  		ld	a,(hl)			; Grab byte from list
(1)   80/     905 : D3 BF               		out	(vdp_ctrl),a		; First VDP write
(1)   81/     907 : 79                  		ld	a,c			; Now set the register
(1)   82/     908 : D3 BF               		out	(vdp_ctrl),a		; Second VDP write
(1)   83/     90A : 0C                  		inc	c			; Next register to use
(1)   84/     90B : 23                  		inc 	hl			; Next byte from the list
(1)   85/     90C : 10 F6               		djnz    .loop    		; decrement b and jump if b != 0
(1)   86/     90E : C9                  		ret
(1)   87/     90F :                     
(1)   88/     90F :                     ; --------------------------------------------------------
(1)   89/     90F :                     ; Video_Clear
(1)   90/     90F :                     ; 
(1)   91/     90F :                     ; Clear everything on-screen
(1)   92/     90F :                     ;
(1)   93/     90F :                     ; Uses:
(1)   94/     90F :                     ; hl,bc,de
(1)   95/     90F :                     ; --------------------------------------------------------
(1)   96/     90F :                     
(1)   97/     90F :                     Video_Clear:
(1)   98/     90F : 06 10               		ld	b,16			; Clear pallete
(1)   99/     911 : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)  100/     913 : E6 1F               		and	1Fh
(1)  101/     915 : C2 1A 09            		jp	nz,.mark_ms
(1)  102/     918 : CB 20               		sla	b			; Length * 2
(1)  103/     91A :                     .mark_ms:
(1)  104/     91A : 21 00 C0            		ld	hl,0C000h
(1)  105/     91D : 0E BF               		ld	c,vdp_ctrl
(1)  106/     91F : ED 69               		out	(c),l
(1)  107/     921 : ED 61               		out	(c),h
(1)  108/     923 : AF                  		xor	a
(1)  109/     924 : 0E BE               		ld	c,vdp_data
(1)  110/     926 :                     .pal_clr:
(1)  111/     926 : ED 79               		out	(c),a
(1)  112/     928 : 10 FC               		djnz	.pal_clr
(1)  113/     92A :                     	
(1)  114/     92A :                     	; Clear ALL VRAM
(1)  115/     92A : 21 00 40            		ld	hl,4000h		; Clear screen
(1)  116/     92D : 0E BF               		ld	c,vdp_ctrl
(1)  117/     92F : ED 69               		out	(c),l
(1)  118/     931 : ED 61               		out	(c),h
(1)  119/     933 : 21 00 40            		ld	hl,4000h
(1)  120/     936 : 0E BE               		ld	c,vdp_data
(1)  121/     938 :                     .clrscrn:
(1)  122/     938 : AF                  		xor	a
(1)  123/     939 : ED 79               		out	(c),a
(1)  124/     93B : 2B                  		dec 	hl
(1)  125/     93C : 7C                  		ld	a,h
(1)  126/     93D : B5                  		or	l
(1)  127/     93E : C2 38 09            		jp	nz,.clrscrn
(1)  128/     941 : C9                  		ret
(1)  129/     942 :                     		
(1)  130/     942 :                     ; --------------------------------------------------------
(1)  131/     942 :                     ; Video_LoadPal
(1)  132/     942 :                     ; 
(1)  133/     942 :                     ; Load GAME GEAR palette to VDP, auto-converts for
(1)  134/     942 :                     ; Master System
(1)  135/     942 :                     ;
(1)  136/     942 :                     ; NOTE: Color dots will be shown on screen
(1)  137/     942 :                     ; 
(1)  138/     942 :                     ; Input:
(1)  139/     942 :                     ; hl - Palette data
(1)  140/     942 :                     ; b - Number of colors
(1)  141/     942 :                     ; d - Start position
(1)  142/     942 :                     ;
(1)  143/     942 :                     ; Uses:
(1)  144/     942 :                     ; hl,bc,de
(1)  145/     942 :                     ; --------------------------------------------------------
(1)  146/     942 :                     
(1)  147/     942 :                     Video_LoadPal:
(1)  148/     942 : 0E BE               		ld	c,vdp_data
(1)  149/     944 : DB 00               		in	a,(gg_info)		; Check if we are in Game Gear
(1)  150/     946 : E6 1F               		and	1Fh
(1)  151/     948 : C2 59 09            		jp	nz,.mark_ms
(1)  152/     94B :                     
(1)  153/     94B :                     	; Game Gear palette
(1)  154/     94B : CB 20               		sla	b
(1)  155/     94D : CB 22               		sla	d
(1)  156/     94F : 7A                  		ld	a,d
(1)  157/     950 : D3 BF               		out	(vdp_ctrl),a
(1)  158/     952 : 3E C0               		ld	a,0C0h
(1)  159/     954 : D3 BF               		out	(vdp_ctrl),a
(1)  160/     956 : ED B3               		otir				; out (hl) to the port at C, increment hl, decrement b
(1)  161/     958 : C9                  		ret
(1)  162/     959 :                     
(1)  163/     959 :                     	; GG to MS convertion
(1)  164/     959 :                     .mark_ms:
(1)  165/     959 : 0E BF               		ld	c,vdp_ctrl
(1)  166/     95B : 3E C0               		ld	a,0C0h
(1)  167/     95D : ED 51               		out	(c),d
(1)  168/     95F : ED 79               		out	(c),a
(1)  169/     961 :                     .loopms:
(1)  170/     961 : 7E                  		ld	a,(hl)
(1)  171/     962 : CB 2F               		sra	a
(1)  172/     964 : CB 2F               		sra	a
(1)  173/     966 : E6 03               		and	11b
(1)  174/     968 : 57                  		ld	d,a
(1)  175/     969 : 7E                  		ld	a,(hl)
(1)  176/     96A : 1F                  		rra
(1)  177/     96B : 1F                  		rra
(1)  178/     96C : 1F                  		rra
(1)  179/     96D : 1F                  		rra
(1)  180/     96E : E6 0C               		and	1100b
(1)  181/     970 : 5F                  		ld	e,a
(1)  182/     971 : 23                  		inc	hl
(1)  183/     972 : 7E                  		ld	a,(hl)
(1)  184/     973 : 17                  		rla
(1)  185/     974 : 17                  		rla
(1)  186/     975 : E6 30               		and	110000b
(1)  187/     977 : B2                  		or	d
(1)  188/     978 : B3                  		or	e
(1)  189/     979 : 23                  		inc	hl
(1)  190/     97A :                     
(1)  191/     97A : D3 BE               		out	(vdp_data),a
(1)  192/     97C : 10 E3               		djnz	.loopms
(1)  193/     97E : C9                  		ret
(1)  194/     97F :                     
(1)  195/     97F :                     ; --------------------------------------------------------
(1)  196/     97F :                     ; Video_LoadArt
(1)  197/     97F :                     ; 
(1)  198/     97F :                     ; Load graphics to VRAM
(1)  199/     97F :                     ;
(1)  200/     97F :                     ; Input:
(1)  201/     97F :                     ; hl - Art data
(1)  202/     97F :                     ; de - Size
(1)  203/     97F :                     ; bc - VRAM (cell)
(1)  204/     97F :                     ; --------------------------------------------------------
(1)  205/     97F :                     
(1)  206/     97F :                     Video_LoadArt:
(1)  207/     97F : 78                  		ld	a,b		; Multiply VRAM >> 5
(1)  208/     980 : 0F                  		rrca
(1)  209/     981 : 0F                  		rrca
(1)  210/     982 : 0F                  		rrca
(1)  211/     983 : E6 20               		and	00100000b
(1)  212/     985 : 47                  		ld	b,a
(1)  213/     986 : 79                  		ld	a,c
(1)  214/     987 : 0F                  		rrca
(1)  215/     988 : 0F                  		rrca
(1)  216/     989 : 0F                  		rrca
(1)  217/     98A : E6 1F               		and	00011111b
(1)  218/     98C : B0                  		or	b
(1)  219/     98D : F6 40               		or	40h		; VRAM write mode
(1)  220/     98F : 47                  		ld	b,a
(1)  221/     990 : 79                  		ld	a,c
(1)  222/     991 : E6 07               		and	00000111b
(1)  223/     993 : 0F                  		rrca
(1)  224/     994 : 0F                  		rrca
(1)  225/     995 : 0F                  		rrca
(1)  226/     996 : 0E BF               		ld	c,vdp_ctrl
(1)  227/     998 : ED 79               		out	(c),a		; a - 00xx
(1)  228/     99A : ED 41               		out	(c),b		; b - xx00
(1)  229/     99C :                     
(1)  230/     99C :                     	; start
(1)  231/     99C : 0E BE               		ld	c,vdp_data
(1)  232/     99E :                     .loop:
(1)  233/     99E : ED A3               		outi
(1)  234/     9A0 :                     ; 		ld	a,(hl)
(1)  235/     9A0 :                     ; 		out 	(c),a
(1)  236/     9A0 :                     ; 		inc 	hl
(1)  237/     9A0 :                     
(1)  238/     9A0 : 1B                  		dec 	de
(1)  239/     9A1 : 7B                  		ld	a,e
(1)  240/     9A2 : B2                  		or	d
(1)  241/     9A3 : C2 9E 09            		jp	nz,.loop
(1)  242/     9A6 : C9                  		ret
(1)  243/     9A7 :                     
(1)  244/     9A7 :                     ; --------------------------------------------------------
(1)  245/     9A7 :                     ; Video_Print
(1)  246/     9A7 :                     ; 
(1)  247/     9A7 :                     ; Print text on screen
(1)  248/     9A7 :                     ; Note: doesn't check for OOB
(1)  249/     9A7 :                     ; 
(1)  250/     9A7 :                     ; Input:
(1)  251/     9A7 :                     ; ix - String data
(1)  252/     9A7 :                     ; bc - X pos | Y pos
(1)  253/     9A7 :                     ; 
(1)  254/     9A7 :                     ; Uses
(1)  255/     9A7 :                     ; de,hl,iy
(1)  256/     9A7 :                     ; --------------------------------------------------------
(1)  257/     9A7 :                     
(1)  258/     9A7 :                     Video_Print:
(1)  259/     9A7 : C5                  		push	bc
(1)  260/     9A8 : D5                  		push	de
(1)  261/     9A9 : E5                  		push	hl
(1)  262/     9AA : FD E5               		push	iy
(1)  263/     9AC :                     
(1)  264/     9AC : FD 21 56 C1         		ld	iy,RAM_VidPrntList
(1)  265/     9B0 : 21 00 38            		ld	hl,3800h
(1)  266/     9B3 : DB 00               		in	a,(gg_info)
(1)  267/     9B5 : E6 1F               		and	1Fh
(1)  268/     9B7 : C2 BC 09            		jp	nz,.nocent
(1)  269/     9BA : 2E CC               		ld	l,0CCh
(1)  270/     9BC :                     .nocent:
(1)  271/     9BC : 11 00 00            		ld	de,0
(1)  272/     9BF : 79                  		ld	a,c		; Y pos left
(1)  273/     9C0 : 0F                  		rrca	
(1)  274/     9C1 : 0F                  		rrca
(1)  275/     9C2 : E6 07               		and	07h
(1)  276/     9C4 : 57                  		ld	d,a
(1)  277/     9C5 : 78                  		ld	a,b		; X pos + Y pos right YYXXXXXXb
(1)  278/     9C6 : E6 1F               		and	1Fh
(1)  279/     9C8 : 87                  		add 	a,a
(1)  280/     9C9 : 5F                  		ld	e,a
(1)  281/     9CA : 79                  		ld	a,c
(1)  282/     9CB : E6 03               		and	11b
(1)  283/     9CD : 0F                  		rrca
(1)  284/     9CE : 0F                  		rrca
(1)  285/     9CF : B3                  		or	e
(1)  286/     9D0 : 5F                  		ld	e,a
(1)  287/     9D1 : 19                  		add 	hl,de
(1)  288/     9D2 :                     
(1)  289/     9D2 :                     	; X/Y pos goes here
(1)  290/     9D2 : 0E BF               		ld	c,vdp_ctrl
(1)  291/     9D4 : 7C                  		ld	a,h
(1)  292/     9D5 : F6 40               		or	40h
(1)  293/     9D7 : 67                  		ld	h,a
(1)  294/     9D8 : ED 69               		out	(c),l
(1)  295/     9DA : ED 61               		out	(c),h
(1)  296/     9DC : 11 00 00            		ld	de,0
(1)  297/     9DF : 44                  		ld	b,h
(1)  298/     9E0 : 4D                  		ld	c,l
(1)  299/     9E1 :                     
(1)  300/     9E1 :                     	; bc - curr position for values
(1)  301/     9E1 :                     	; hl - curr position for jump
(1)  302/     9E1 :                     .loop:
(1)  303/     9E1 : DD 7E 00            		ld	a,(ix)
(1)  304/     9E4 : DD 23               		inc	ix
(1)  305/     9E6 : FE 0A               		cp	00Ah		; 00Ah - next line?
(1)  306/     9E8 : CA 05 0A            		jp	z,.next
(1)  307/     9EB : FE 5C               		cp	05Ch		; 05Ch ("\") special?
(1)  308/     9ED : CA 13 0A            		jp	z,.special		
(1)  309/     9F0 : B7                  		or	a		; Zero?
(1)  310/     9F1 : CA 5E 0A            		jp	z,.exit
(1)  311/     9F4 : E5                  		push	hl
(1)  312/     9F5 : 2A 86 C1            		ld	hl,(RAM_VidPrntVram)
(1)  313/     9F8 : 5F                  		ld	e,a
(1)  314/     9F9 : 19                  		add	hl,de
(1)  315/     9FA : 7D                  		ld	a,l
(1)  316/     9FB : D3 BE               		out	(vdp_data),a
(1)  317/     9FD : 7C                  		ld	a,h
(1)  318/     9FE : D3 BE               		out	(vdp_data),a
(1)  319/     A00 : E1                  		pop	hl
(1)  320/     A01 : 03                  		inc 	bc		; Next pos for values
(1)  321/     A02 : 03                  		inc 	bc
(1)  322/     A03 : 18 DC               		jr	.loop
(1)  323/     A05 :                     
(1)  324/     A05 :                     ; Next line
(1)  325/     A05 :                     .next:
(1)  326/     A05 : 11 40 00            		ld	de,40h		; TL add line
(1)  327/     A08 : 19                  		add 	hl,de
(1)  328/     A09 : 44                  		ld	b,h		; Save pos to value beam
(1)  329/     A0A : 4D                  		ld	c,l
(1)  330/     A0B : 7D                  		ld	a,l		; Reset position with new
(1)  331/     A0C : D3 BF               		out	(vdp_ctrl),a
(1)  332/     A0E : 7C                  		ld	a,h
(1)  333/     A0F : D3 BF               		out	(vdp_ctrl),a
(1)  334/     A11 : 18 CE               		jr	.loop
(1)  335/     A13 :                     ; Special
(1)  336/     A13 :                     .special:
(1)  337/     A13 : DD 7E 00            		ld	a,(ix)
(1)  338/     A16 : DD 23               		inc	ix
(1)  339/     A18 : FE 62               		cp	"b"		; Byte?
(1)  340/     A1A : CA 42 0A            		jp	z,.breq
(1)  341/     A1D : FE 77               		cp	"w"		; Word?
(1)  342/     A1F : C2 E1 09            		jp	nz,.loop
(1)  343/     A22 :                     ; word
(1)  344/     A22 : FD 71 00            		ld	(iy),c		; Set address
(1)  345/     A25 : FD 70 01            		ld	(iy+1),b
(1)  346/     A28 : FD 36 02 02         		ld	(iy+2),2	; Set request
(1)  347/     A2C : FD 23               		inc 	iy		; Next entry
(1)  348/     A2E : FD 23               		inc 	iy
(1)  349/     A30 : FD 23               		inc 	iy
(1)  350/     A32 : 03                  		inc 	bc		; Four cells
(1)  351/     A33 : 03                  		inc 	bc
(1)  352/     A34 : 03                  		inc 	bc
(1)  353/     A35 : 03                  		inc 	bc
(1)  354/     A36 : 03                  		inc 	bc
(1)  355/     A37 : 03                  		inc 	bc
(1)  356/     A38 : 03                  		inc 	bc
(1)  357/     A39 : 03                  		inc 	bc
(1)  358/     A3A : 79                  		ld	a,c
(1)  359/     A3B : D3 BF               		out	(vdp_ctrl),a
(1)  360/     A3D : 78                  		ld	a,b
(1)  361/     A3E : D3 BF               		out	(vdp_ctrl),a
(1)  362/     A40 : 18 9F               		jr	.loop
(1)  363/     A42 :                     ; byte
(1)  364/     A42 :                     .breq:
(1)  365/     A42 : FD 71 00            		ld	(iy),c		; Set address
(1)  366/     A45 : FD 70 01            		ld	(iy+1),b
(1)  367/     A48 : FD 36 02 01         		ld	(iy+2),1	; Set request
(1)  368/     A4C : FD 23               		inc 	iy		; Next entry
(1)  369/     A4E : FD 23               		inc 	iy
(1)  370/     A50 : FD 23               		inc 	iy
(1)  371/     A52 : 03                  		inc 	bc		; Two cells
(1)  372/     A53 : 03                  		inc 	bc
(1)  373/     A54 : 03                  		inc 	bc
(1)  374/     A55 : 03                  		inc 	bc
(1)  375/     A56 : 79                  		ld	a,c
(1)  376/     A57 : D3 BF               		out	(vdp_ctrl),a
(1)  377/     A59 : 78                  		ld	a,b
(1)  378/     A5A : D3 BF               		out	(vdp_ctrl),a
(1)  379/     A5C : 18 83               		jr	.loop
(1)  380/     A5E :                     .exit:
(1)  381/     A5E :                     
(1)  382/     A5E :                     ; ------------------------------------------------
(1)  383/     A5E :                     ; Print values
(1)  384/     A5E :                     ; check MAX_PRNTLIST for maximum values
(1)  385/     A5E :                     ; 
(1)  386/     A5E :                     ; vvvv tt
(1)  387/     A5E :                     ; v - vdp pos
(1)  388/     A5E :                     ; t - value type
(1)  389/     A5E :                     ; ------------------------------------------------
(1)  390/     A5E :                     
(1)  391/     A5E : FD 21 56 C1         		ld	iy,RAM_VidPrntList
(1)  392/     A62 :                     .loopval:
(1)  393/     A62 : FD 7E 00            		ld	a,(iy)
(1)  394/     A65 : FD 46 01            		ld	b,(iy+1)
(1)  395/     A68 : B7                  		or	a
(1)  396/     A69 : CA A6 0A            		jp	z,.endval
(1)  397/     A6C : 4F                  		ld	c,a
(1)  398/     A6D :                     
(1)  399/     A6D :                     	; Check byte
(1)  400/     A6D : FD 7E 02            		ld	a,(iy+2)
(1)  401/     A70 : FE 01               		cp	1
(1)  402/     A72 : C2 7E 0A            		jp	nz,.nobyte
(1)  403/     A75 : DD 6E 00            		ld	l,(ix)
(1)  404/     A78 : DD 66 01            		ld	h,(ix+1)
(1)  405/     A7B : CD AC 0A            		call	.put_byte
(1)  406/     A7E :                     .nobyte:
(1)  407/     A7E : FD 7E 02            		ld	a,(iy+2)
(1)  408/     A81 : FE 02               		cp	2
(1)  409/     A83 : C2 93 0A            		jp	nz,.noword
(1)  410/     A86 : DD 6E 00            		ld	l,(ix)
(1)  411/     A89 : DD 66 01            		ld	h,(ix+1)
(1)  412/     A8C : CD AC 0A            		call	.put_byte
(1)  413/     A8F : 23                  		inc 	hl
(1)  414/     A90 : CD AC 0A            		call	.put_byte
(1)  415/     A93 :                     .noword:
(1)  416/     A93 :                     
(1)  417/     A93 : AF                  		xor	a		; Clear current entry 
(1)  418/     A94 : FD 77 00            		ld	(iy),a		; and move to next
(1)  419/     A97 : FD 77 01            		ld	(iy+1),a
(1)  420/     A9A : FD 77 02            		ld	(iy+2),a
(1)  421/     A9D : FD 23               		inc 	iy
(1)  422/     A9F : FD 23               		inc 	iy
(1)  423/     AA1 : FD 23               		inc 	iy
(1)  424/     AA3 : C3 62 0A            		jp	.loopval
(1)  425/     AA6 :                     .endval:	
(1)  426/     AA6 : FD E1               		pop	iy
(1)  427/     AA8 : E1                  		pop	hl
(1)  428/     AA9 : D1                  		pop	de
(1)  429/     AAA : C1                  		pop	bc
(1)  430/     AAB : C9                  		ret
(1)  431/     AAC :                     
(1)  432/     AAC :                     ; draw nibble
(1)  433/     AAC :                     .put_byte:
(1)  434/     AAC : 7E                  		ld	a,(hl)
(1)  435/     AAD : 0F                  		rrca
(1)  436/     AAE : 0F                  		rrca
(1)  437/     AAF : 0F                  		rrca
(1)  438/     AB0 : 0F                  		rrca
(1)  439/     AB1 : CD B5 0A            		call	.do_nibbl
(1)  440/     AB4 : 7E                  		ld	a,(hl)
(1)  441/     AB5 :                     .do_nibbl:
(1)  442/     AB5 : E5                  		push	hl
(1)  443/     AB6 : 21 00 00            		ld	hl,0
(1)  444/     AB9 : E6 0F               		and 	0Fh
(1)  445/     ABB : FE 0A               		cp	0Ah
(1)  446/     ABD : DA C2 0A            		jp	c,.noadd
(1)  447/     AC0 : C6 07               		add 	a,7
(1)  448/     AC2 :                     .noadd:
(1)  449/     AC2 : 6F                  		ld	l,a
(1)  450/     AC3 : ED 5B 86 C1         		ld	de,(RAM_VidPrntVram)	; Start at font VRAM
(1)  451/     AC7 : 19                  		add 	hl,de
(1)  452/     AC8 : 11 30 00            		ld	de,30h			; at char 0
(1)  453/     ACB : 19                  		add 	hl,de
(1)  454/     ACC : 79                  		ld	a,c			; mark vdp pos
(1)  455/     ACD : D3 BF               		out	(vdp_ctrl),a
(1)  456/     ACF : 78                  		ld	a,b
(1)  457/     AD0 : D3 BF               		out	(vdp_ctrl),a
(1)  458/     AD2 : 03                  		inc 	bc			; next layer cell
(1)  459/     AD3 : 03                  		inc 	bc
(1)  460/     AD4 : 7D                  		ld	a,l			; put vram value
(1)  461/     AD5 : D3 BE               		out 	(vdp_data),a
(1)  462/     AD7 : 7C                  		ld	a,h
(1)  463/     AD8 : D3 BE               		out	(vdp_data),a
(1)  464/     ADA : E1                  		pop	hl
(1)  465/     ADB : C9                  		ret
(1)  466/     ADC :                     		
(1)  467/     ADC :                     ; ====================================================================
(1)  468/     ADC :                     ; --------------------------------------------------------
(1)  469/     ADC :                     ; Video data
(1)  470/     ADC :                     ; --------------------------------------------------------
(1)  471/     ADC :                     
(1)  472/     ADC :                     list_vdpregs:
(1)  473/     ADC : 06                  		db      00000110b       ; ---H---- | H-Hint
(1)  474/     ADD : E2                  		db      11100010b       ; -DV---W- | D-Display ON / V-Vint / W-8x16 sprites
(1)  475/     ADE : FF                  		db      11111111b       ;
(1)  476/     ADF : FF                  		db      11111111b       ;
(1)  477/     AE0 : FF                  		db      11111111b       ;
(1)  478/     AE1 : FF                  		db      11111111b       ;
(1)  479/     AE2 : 04                  		db      00000100b       ; -----S-- | S-Sprite VRAM Add ($100)
(1)  480/     AE3 : 00                  		db      00000000b       ;
(1)  481/     AE4 : 00                  		db      00000000b       ;
(1)  482/     AE5 : 00                  		db      00000000b       ;
(1)  483/     AE6 : 00                  		db      00000000b       ;
(1)  484/     AE7 :                     
(1)  485/     AE7 :                     Art_PrintFont:	binclude "system/data/art_prntfont.bin"
(1)  486/    16E7 :                     Art_PrintFont_e:
(1)  487/    16E7 :                     Pal_PrintFont:;	binclude "system/data/pal_prntfont.bin"
(1)  488/    16E7 : 00 00 EE 0E CC 0C   		dw 0000h,0EEEh,0CCCh,0AAAh,0888h,0444h,000Eh,0008h
                    AA 0A 88 08 44 04 
                    0E 00 08 00 
(1)  489/    16F7 : EE 00 88 00 E0 00   		dw 00EEh,0088h,00E0h,0080h,0E00h,0800h,0000h,0000h
                    80 00 00 0E 00 08 
                    00 00 00 00 
(1)  490/    1707 :                     
     119/    1707 :                     		include "system/setup.asm"	; System
(1)    1/    1707 :                     ; ====================================================================
(1)    2/    1707 :                     ; ----------------------------------------------------------------
(1)    3/    1707 :                     ; System
(1)    4/    1707 :                     ; ----------------------------------------------------------------
(1)    5/    1707 :                     
(1)    6/    1707 :                     ; --------------------------------------------------------
(1)    7/    1707 :                     ; Init System
(1)    8/    1707 :                     ; --------------------------------------------------------
(1)    9/    1707 :                     
(1)   10/    1707 :                     System_Init:
(1)   11/    1707 :                     	;Clear a work ram ($C001 to $DFEF)
(1)   12/    1707 : 21 00 C0            		ld      hl,0C000h  		; hl - System RAM
(1)   13/    170A : 11 01 C0            		ld      de,0C001h  		; de - (System RAM + 1)
(1)   14/    170D : 01 00 10            		ld      bc,01000h  		; bc - Bytes to copy
(1)   15/    1710 : 36 00               		ld      (hl),0			; Set $00 at first byte of RAM before copying bytes
(1)   16/    1712 : ED B0               		ldir				; read (RAM), write to (RAM+1), increment de, hl and decrement bc
(1)   17/    1714 :                     
(1)   18/    1714 : DB 00               		in	a,(gg_info)		; Read Game Gear extra bits
(1)   19/    1716 : E6 1F               		and	1Fh			; only grab 5 bits
(1)   20/    1718 : C2 26 17            		jp	nz,.not_gg		; If not Zero, don't set extra gg regs
(1)   21/    171B : 3E FF               		ld      a,11111111b   		; all ones
(1)   22/    171D : D3 02               		out     (gg_ext_bitdir),a   	; set i/o port 2h (read/write) to all ones
(1)   23/    171F : D3 06                               out 	(gg_stereo),a		; gg psg stereo full
(1)   24/    1721 : AF                  		xor     a         		; set a to zero
(1)   25/    1722 : D3 01               		out     (gg_ext_comm),a   	; set i/o port 1h to zero
(1)   26/    1724 : D3 05               		out     (gg_serial),a   	; set i/o port 5h to zero
(1)   27/    1726 :                     .not_gg:
(1)   28/    1726 : AF                  		xor     a         		; set a to zero
(1)   29/    1727 : 32 FC FF            		ld      (bank_ctrl),a		; set bank control register to all zeros
(1)   30/    172A : 32 FD FF            		ld      (bank_0),a		; set bank reg #0 to all zeros
(1)   31/    172D : 3C                  		inc	a
(1)   32/    172E : 32 FE FF            		ld      (bank_1),a		; set bank reg #1 to 0001
(1)   33/    1731 : 3C                  		inc	a
(1)   34/    1732 : 32 FF FF            		ld      (bank_2),a		; set bank reg #2 to 0010
(1)   35/    1735 :                     		
(1)   36/    1735 : 3E C3               		ld	a,0C3h
(1)   37/    1737 : 32 5B C2            		ld	(RAM_VBlank),a
(1)   38/    173A : 32 5E C2            		ld	(RAM_HBlank),a
(1)   39/    173D : 01 67 00            		ld	bc,MS_VInt
(1)   40/    1740 : 11 83 00            		ld	de,MS_HInt
(1)   41/    1743 : ED 43 5C C2         		ld	(RAM_VBlank+1),bc
(1)   42/    1747 : ED 53 5F C2         		ld	(RAM_HBlank+1),de
(1)   43/    174B : C9                  		ret
(1)   44/    174C :                     
(1)   45/    174C :                     ; ====================================================================
(1)   46/    174C :                     ; ----------------------------------------------------------------
(1)   47/    174C :                     ; System subroutines
(1)   48/    174C :                     ; ----------------------------------------------------------------
(1)   49/    174C :                     
(1)   50/    174C :                     ; --------------------------------------------------------
(1)   51/    174C :                     ; System_VSync
(1)   52/    174C :                     ; 
(1)   53/    174C :                     ; Wait for VBlank
(1)   54/    174C :                     ; --------------------------------------------------------
(1)   55/    174C :                     
(1)   56/    174C :                     System_VSync:
(1)   57/    174C : DB BF               		in	a,(vdp_ctrl)		; Read VDP Control
(1)   58/    174E : E6 80               		and	10000000b		; Get VBlank bit
(1)   59/    1750 : CA 4C 17            		jp	z,System_VSync		; if Zero, keep waiting
(1)   60/    1753 : C9                  		ret
(1)   61/    1754 :                     		
(1)   62/    1754 :                     ; --------------------------------------------------------
(1)   63/    1754 :                     ; System_Input
(1)   64/    1754 :                     ; 
(1)   65/    1754 :                     ; WARNING: Don't call this outside of VBLANK
(1)   66/    1754 :                     ; (call System_VSync first)
(1)   67/    1754 :                     ; 
(1)   68/    1754 :                     ; Uses:
(1)   69/    1754 :                     ; hl,bc
(1)   70/    1754 :                     ; --------------------------------------------------------
(1)   71/    1754 :                     
(1)   72/    1754 :                     System_Input:
(1)   73/    1754 :                      
(1)   74/    1754 :                     ; ---------------------------
(1)   75/    1754 :                     ; Read current controllers
(1)   76/    1754 :                     ; ---------------------------
(1)   77/    1754 :                     
(1)   78/    1754 : 21 57 C2            		ld	hl,RAM_InputData	; hl - Input data stored in RAM
(1)   79/    1757 :                     
(1)   80/    1757 :                     	; Controller 1
(1)   81/    1757 : 06 00               		ld	b,0			; b = 0
(1)   82/    1759 : DB 00               		in	a,(gg_info)		; Read GG port 00h (START button and region)
(1)   83/    175B : 4F                  		ld	c,a			; Copy result to c
(1)   84/    175C : E6 1F               		and	1Fh			; only read right 5 bits
(1)   85/    175E : C2 66 17            		jp	nz,.no_ggstrt		; if != 0, skip this
(1)   86/    1761 : 79                  		ld	a,c			; move our copy to a
(1)   87/    1762 : 2F                  		cpl				; reverse bits
(1)   88/    1763 : E6 80               		and	80h			; only read the MSB
(1)   89/    1765 : 47                  		ld	b,a			; b = Start button bit press
(1)   90/    1766 :                     .no_ggstrt:
(1)   91/    1766 : DB DC               		in      a,(joypad_1)		; Read controller 1 port
(1)   92/    1768 : 2F                  		cpl				; Reverse bits
(1)   93/    1769 : E6 3F               		and	00111111b		; Only grab 0012RLDU 
(1)   94/    176B : B0                  		or	b			; Merge GG start button if available S012RLDU
(1)   95/    176C : 47                  		ld	b,a			; Copy input from a to b
(1)   96/    176D : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)   97/    176E : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)   98/    176F : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)   99/    1770 : 23                  		inc	hl			; Next RAM byte
(1)  100/    1771 : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  101/    1772 : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  102/    1773 : 23                  		inc 	hl			; Next controller
(1)  103/    1774 :                      
(1)  104/    1774 :                     	; Controller 2
(1)  105/    1774 : DB DC               		in      a,(joypad_1)		; Read controller 1 port (for Down/Up)
(1)  106/    1776 : 2F                  		cpl				; Reverse bits, DU??????
(1)  107/    1777 : 07                  		rlca				; U?????D
(1)  108/    1778 : 07                  		rlca				; ?????DU
(1)  109/    1779 : E6 03               		and	11b			; 00000DU
(1)  110/    177B : 47                  		ld	b,a			; Save copy to b
(1)  111/    177C : DB DD               		in      a,(joypad_2)		; Read controller 2 port (for 2/1/Right/Left)
(1)  112/    177E : 2F                  		cpl				; Reverse bits, ????21RL
(1)  113/    177F : 07                  		rlca				; ???21RL?
(1)  114/    1780 : 07                  		rlca				; ??21RL??
(1)  115/    1781 : E6 3C               		and	00111100b		; 0021RL00
(1)  116/    1783 : B0                  		or	b			; Combine results: 0021RLDU
(1)  117/    1784 : 47                  		ld	b,a			; Copy input from a to b
(1)  118/    1785 : 7E                   		ld	a,(hl)			; Read OLD holding bits from RAM
(1)  119/    1786 : A8                   		xor	b			; XOR with NEW holding bits, now a contains pressed bits
(1)  120/    1787 : 70                  		ld	(hl),b			; Save NEW holding press to RAM
(1)  121/    1788 : 23                  		inc	hl			; Next RAM byte
(1)  122/    1789 : A0                  		and	b			; Only allow holding bits to pass on pressed bits
(1)  123/    178A : 77                  		ld	(hl),a			; Save pressed bits to RAM
(1)  124/    178B : C9                  		ret
(1)  125/    178C :                     		
(1)  126/    178C :                     ; ====================================================================
(1)  127/    178C :                     ; ----------------------------------------------------------------
(1)  128/    178C :                     ; System data
(1)  129/    178C :                     ; ----------------------------------------------------------------
(1)  130/    178C :                     
     120/    178C :                     
     121/    178C :                     ; ====================================================================
     122/    178C :                     ; ----------------------------------------------------------------
     123/    178C :                     ; MS Start
     124/    178C :                     ; ----------------------------------------------------------------
     125/    178C :                     
     126/    178C :                     		align 400h
     127/    1800 :                     MS_Init:
     128/    1800 : 31 F0 DF            		ld	sp,0DFF0h		; Stacks starts at 0DFF0h, goes backwards
     129/    1803 : CD 07 17            		call	System_Init		; Init System
     130/    1806 : CD 86 00            		call	Sound_Init		; Init Sound
     131/    1809 : CD BC 08            		call	Video_Init		; Init Video
     132/    180C :                     
     133/    180C :                     ; ================================================================
     134/    180C :                     ; ------------------------------------------------------------
     135/    180C :                     ; Your code starts here
     136/    180C :                     ; ------------------------------------------------------------
     137/    180C :                     
     138/    180C :                     		align 400h
     139/    1C00 :                     CodeBank0:
     140/    1C00 :                     		include	"game/code.asm"
(1)    1/    1C00 :                     ; ====================================================================
(1)    2/    1C00 :                     ; ----------------------------------------------------------------
(1)    3/    1C00 :                     ; Structs
(1)    4/    1C00 :                     ; ----------------------------------------------------------------
(1)    5/    1C00 :                     
(1)    6/    1C00 : (MACRO)             		struct 0
(1)    6/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)    6/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)    6/    1C00 :                                     dephase
(1)    6/       0 :                                     phase 0
(1)    7/       0 :                     plyr_x		ds 2
(1)    8/       2 :                     plyr_y		ds 2
(1)    9/       4 :                     plyr_frame	ds 1
(1)   10/       5 :                     plyr_ani_timer	ds 1
(1)   11/       6 :                     plyr_ani_cntr 	ds 1
(1)   12/       7 : (MACRO)             		finish
(1)   12/       0 :                                     !org GLBL_LASTORG
(1)   12/    1C00 :                                     phase GLBL_LASTPC
(1)   13/    1C00 :                     
(1)   14/    1C00 : (MACRO)             		struct RAM_Local
(1)   14/    1C00 : =1C00H              GLBL_LASTPC     eval $
(1)   14/    1C00 : =1C00H              GLBL_LASTORG    eval $
(1)   14/    1C00 :                                     dephase
(1)   14/    C261 :                                     phase RAM_LOCAL
(1)   15/    C261 :                     RAM_Player	ds 32
(1)   16/    C281 :                     RAM_VdpReg1	ds 1
(1)   17/    C282 :                     RAM_FrameCntr	ds 2
(1)   18/    C284 : (MACRO)             		finish
(1)   18/    C261 :                                     !org GLBL_LASTORG
(1)   18/    1C00 :                                     phase GLBL_LASTPC
(1)   19/    1C00 :                     
(1)   20/    1C00 :                     ; ====================================================================
(1)   21/    1C00 :                     ; ----------------------------------------------------------------
(1)   22/    1C00 :                     ; Main
(1)   23/    1C00 :                     ; ----------------------------------------------------------------
(1)   24/    1C00 :                     
(1)   25/    1C00 : CD D6 08            		call	Video_InitPrint
(1)   26/    1C03 :                     
(1)   27/    1C03 : 21 21 1C            		ld	hl,trackData_test
(1)   28/    1C06 : 06 01               		ld	b,DataBank0>>14
(1)   29/    1C08 : 0E 00               		ld	c,0
(1)   30/    1C0A : 16 00               		ld	d,0
(1)   31/    1C0C : 1E 02               		ld	e,2
(1)   32/    1C0E : 3E 01               		ld	a,1
(1)   33/    1C10 : CD CF 00            		call	Sound_SetTrack
(1)   34/    1C13 :                     	
(1)   35/    1C13 : DD 21 27 1C         		ld	ix,str_Test
(1)   36/    1C17 : 01 01 01            		ld	bc,0101h
(1)   37/    1C1A : CD A7 09            		call	Video_Print
(1)   38/    1C1D : FB                  		ei
(1)   39/    1C1E :                     
(1)   40/    1C1E :                     .loop:
(1)   41/    1C1E :                     ; .waitvint:	in	a,(vdp_ctrl)
(1)   42/    1C1E :                     ; 		and	80h
(1)   43/    1C1E :                     ; 		jp	z,.waitvint
(1)   44/    1C1E :                     ; 		call	Sound_Run
(1)   45/    1C1E :                     
(1)   46/    1C1E : C3 1E 1C            		jp	.loop
(1)   47/    1C21 :                     
(1)   48/    1C21 :                     trackData_test:
(1)   49/    1C21 : 21 41               		dw MusicBlk_Gigalo
(1)   50/    1C23 : 2E 41               		dw MusicPat_Gigalo
(1)   51/    1C25 : 88 60               		dw MusicIns_Gigalo
(1)   52/    1C27 :                     
(1)   53/    1C27 :                     ; 		dw MusicBlk_TestMe
(1)   54/    1C27 :                     ; 		dw MusicPat_TestMe
(1)   55/    1C27 :                     ; 		dw MusicIns_TestMe
(1)   56/    1C27 :                     
(1)   57/    1C27 :                     ; ====================================================================
(1)   58/    1C27 :                     ; ----------------------------------------------------------------
(1)   59/    1C27 :                     ; Subs
(1)   60/    1C27 :                     ; ----------------------------------------------------------------
(1)   61/    1C27 :                     
(1)   62/    1C27 :                     ; ====================================================================
(1)   63/    1C27 :                     ; ----------------------------------------------------------------
(1)   64/    1C27 :                     ; Small data
(1)   65/    1C27 :                     ; ----------------------------------------------------------------
(1)   66/    1C27 :                     
(1)   67/    1C27 : 50 75 6C 73 65 4D   str_Test:	db "PulseMini MERCURY",0Ah
                    69 6E 69 20 4D 45 
                    52 43 55 52 59 0A 
(1)   68/    1C39 : 54 65 73 74 65 72   		db "Tester",0Ah
                    0A 
(1)   69/    1C40 : 0A                  		db 0Ah
(1)   70/    1C41 : 56 65 72 20 30 38   		db "Ver 08/2019",0Ah
                    2F 32 30 31 39 0A 
(1)   71/    1C4D : 0A                  		db 0Ah
(1)   72/    1C4E : 2D 2D 2D 20 54 72   		db "--- Trk / Vol",0Ah
                    6B 20 2F 20 56 6F 
                    6C 0A 
(1)   73/    1C5C : 0A                  		db 0Ah
(1)   74/    1C5D : 53 46 58 20 20 3F   		db "SFX  ??    ??",0Ah
                    3F 20 20 20 20 3F 
                    3F 0A 
(1)   75/    1C6B : 0A                  		db 0Ah
(1)   76/    1C6C : 42 47 4D 20 20 3F   		db "BGM  ??    ??",0Ah
                    3F 20 20 20 20 3F 
                    3F 0A 
(1)   77/    1C7A :                     
     141/    1C7A :                     CodeBank0_e:
     145/    1C7A :                     	
     146/    1C7A :                     ; ====================================================================
     147/    1C7A :                     ; DEFAULT BANK 1
     148/    1C7A :                     ; 4000-7FFFh
     149/    1C7A :                     ; ====================================================================
     150/    1C7A :                     		
     151/    1C7A :                     		align 4000h
     152/    4000 :                     DataBank0:
     153/    4000 :                     		include	"game/data.asm"
(1)    1/    4000 :                     ; ====================================================================
(1)    2/    4000 :                     ; ----------------------------------------------------------------
(1)    3/    4000 :                     ; 
(1)    4/    4000 :                     ; ----------------------------------------------------------------
(1)    5/    4000 :                     
(1)    6/    4000 : 47 41 4D 45 20 44   		db "GAME DATA GOES HERE"
                    41 54 41 20 47 4F 
                    45 53 20 48 45 52 
                    45 
(1)    7/    4013 :                     
(1)    8/    4013 :                     
(1)    9/    4013 :                     
     154/    4013 :                     		include	"game/sound/data.asm"
(1)    1/    4013 :                     ; ================================================================
(1)    2/    4013 :                     ; ------------------------------------------------------------
(1)    3/    4013 :                     ; DATA SECTION
(1)    4/    4013 :                     ; 
(1)    5/    4013 :                     ; SOUND
(1)    6/    4013 :                     ; ------------------------------------------------------------
(1)    7/    4013 :                     
(1)    8/    4013 :                     ; TYPES:
(1)    9/    4013 :                     ;  -1 - ignore
(1)   10/    4013 :                     ;   0 - FM normal
(1)   11/    4013 :                     ;   1 - FM special
(1)   12/    4013 :                     ;   2 - FM sample
(1)   13/    4013 :                     ; $80 - PSG
(1)   14/    4013 :                     ; $E0 - PSG noise
(1)   15/    4013 :                     
(1)   16/    4013 : =0H                 insFM		equ 0
(1)   17/    4013 : =1H                 insFM3		equ 1
(1)   18/    4013 : =2H                 insFM6		equ 2
(1)   19/    4013 : =80H                insPSG		equ 80h
(1)   20/    4013 : =E0H                insPBass0	equ 0E0h
(1)   21/    4013 : =E1H                insPBass1	equ 0E1h
(1)   22/    4013 : =E2H                insPBass2	equ 0E2h
(1)   23/    4013 : =E3H                insPBass3	equ 0E3h		; Grabs PSG3 frequency
(1)   24/    4013 : =E4H                insPNoise0	equ 0E4h
(1)   25/    4013 : =E5H                insPNoise1	equ 0E5h
(1)   26/    4013 : =E6H                insPNoise2	equ 0E6h
(1)   27/    4013 : =E7H                insPNoise3	equ 0E7h		; Grabs PSG3 frequency
(1)   28/    4013 :                     
(1)   29/    4013 :                     instrSlot	macro TYPE,OPT,LABEL
(1)   30/    4013 :                     	if TYPE=-1
(1)   31/    4013 :                     		db -1,-1,-1,-1
(1)   32/    4013 :                     	else
(1)   33/    4013 :                     		db TYPE,OPT
(1)   34/    4013 :                     		dw LABEL
(1)   35/    4013 :                     	endif
(1)   36/    4013 :                     		endm
(1)   37/    4013 :                     
(1)   38/    4013 :                     ; ----------------------------------------------------
(1)   39/    4013 :                     ; Sound bank
(1)   40/    4013 :                     ; ----------------------------------------------------
(1)   41/    4013 :                     		
(1)   42/    4013 :                     ; MusicBlk_Sample:
(1)   43/    4013 :                     ; 		binclude "game/sound/music/musictrck_blk.bin"		; BLOCKS data
(1)   44/    4013 :                     ; MusicPat_Sample:
(1)   45/    4013 :                     ; 		binclude "game/sound/music/musictrck_patt.bin"		; PATTERN data
(1)   46/    4013 :                     ; Instruments staring from number 01
(1)   47/    4013 :                     ; MusicIns_Sample:
(1)   48/    4013 :                     ; 		instrSlot      insFM,0,FmIns_Piano_Small		; FM normal: type,pitch,regdata
(1)   49/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_OpenHat		; FM special (channel 3): type,pitch,regdata+exfreq
(1)   50/    4013 :                     ; 		instrSlot     insFM3,0,FmIns_Fm3_ClosedHat
(1)   51/    4013 :                     ; 		instrSlot     insFM6,0,.kick				; FM sample (channel 6): type,pitch,custompointer (see below)
(1)   52/    4013 :                     ; 		instrSlot     insFM6,0,.snare
(1)   53/    4013 :                     ; 		instrSlot     insPSG,0,PsgIns_00			; PSG (channels 1-3): type,pitch,envelope data
(1)   54/    4013 :                     ; 		instrSlot insPBass0,0,PsgIns_00				; PSG Noise (channels 1-3): type,pitch,envelope data
(1)   55/    4013 :                     ; 		instrSlot insPBass1,0,PsgIns_00
(1)   56/    4013 :                     ; 		instrSlot insPBass2,0,PsgIns_00
(1)   57/    4013 :                     ; 		instrSlot insPBass3,0,PsgIns_00				; If using bass/noise type 3, NOISE will grab the frequency from chnl 3
(1)   58/    4013 :                     ; 		instrSlot insPNoise0,0,PsgIns_00
(1)   59/    4013 :                     ; 		instrSlot insPNoise1,0,PsgIns_00
(1)   60/    4013 :                     ; 		instrSlot insPNoise2,0,PsgIns_00
(1)   61/    4013 :                     ; 		instrSlot insPNoise3,0,PsgIns_00
(1)   62/    4013 :                     ; if using insFM6 instruments:
(1)   63/    4013 :                     ; .kick:	instrSmpl 0,WavIns_Kick,WavIns_Kick_e,WavIns_Kick	; sample flags (ex. loop), START, END, LOOP
(1)   64/    4013 :                     ; .snare:	instrSmpl 0,WavIns_Snare,WavIns_Snare_e,WavIns_Snare
(1)   65/    4013 :                     
(1)   66/    4013 :                     ; ------------------------------------
(1)   67/    4013 :                     ; Track TESTME
(1)   68/    4013 :                     ; ------------------------------------
(1)   69/    4013 :                     
(1)   70/    4013 :                     MusicBlk_TestMe:
(1)   71/    4013 :                     		binclude "game/sound/music/lasttest_blk.bin"		; BLOCKS data
(1)   72/    4015 :                     MusicPat_TestMe:
(1)   73/    4015 :                     		binclude "game/sound/music/lasttest_patt.bin"		; PATTERN data
(1)   74/    40E9 :                     MusicIns_TestMe:
(1)   75/    40E9 : (MACRO)             		instrSlot -1
(1)   75/    40E9 : FF FF FF FF                         db -1,-1,-1,-1
(1)   76/    40ED : (MACRO)             		instrSlot -1
(1)   76/    40ED : FF FF FF FF                         db -1,-1,-1,-1
(1)   77/    40F1 : (MACRO)             		instrSlot -1
(1)   77/    40F1 : FF FF FF FF                         db -1,-1,-1,-1
(1)   78/    40F5 : (MACRO)             		instrSlot -1
(1)   78/    40F5 : FF FF FF FF                         db -1,-1,-1,-1
(1)   79/    40F9 : (MACRO)             		instrSlot -1
(1)   79/    40F9 : FF FF FF FF                         db -1,-1,-1,-1
(1)   80/    40FD : (MACRO)             		instrSlot     insPSG,0,PsgIns_00
(1)   80/    40FD : 80 00                               db INSPSG,0
(1)   80/    40FF : 9F 08                               dw PSGINS_00
(1)   81/    4101 : (MACRO)             		instrSlot insPBass0,0,PsgIns_00
(1)   81/    4101 : E0 00                               db INSPBASS0,0
(1)   81/    4103 : 9F 08                               dw PSGINS_00
(1)   82/    4105 : (MACRO)             		instrSlot insPBass1,0,PsgIns_00
(1)   82/    4105 : E1 00                               db INSPBASS1,0
(1)   82/    4107 : 9F 08                               dw PSGINS_00
(1)   83/    4109 : (MACRO)             		instrSlot insPBass2,0,PsgIns_00
(1)   83/    4109 : E2 00                               db INSPBASS2,0
(1)   83/    410B : 9F 08                               dw PSGINS_00
(1)   84/    410D : (MACRO)             		instrSlot insPBass3,0,PsgIns_00
(1)   84/    410D : E3 00                               db INSPBASS3,0
(1)   84/    410F : 9F 08                               dw PSGINS_00
(1)   85/    4111 : (MACRO)             		instrSlot insPNoise0,0,PsgIns_00
(1)   85/    4111 : E4 00                               db INSPNOISE0,0
(1)   85/    4113 : 9F 08                               dw PSGINS_00
(1)   86/    4115 : (MACRO)             		instrSlot insPNoise1,0,PsgIns_00
(1)   86/    4115 : E5 00                               db INSPNOISE1,0
(1)   86/    4117 : 9F 08                               dw PSGINS_00
(1)   87/    4119 : (MACRO)             		instrSlot insPNoise2,0,PsgIns_00
(1)   87/    4119 : E6 00                               db INSPNOISE2,0
(1)   87/    411B : 9F 08                               dw PSGINS_00
(1)   88/    411D : (MACRO)             		instrSlot insPNoise3,0,PsgIns_00
(1)   88/    411D : E7 00                               db INSPNOISE3,0
(1)   88/    411F : 9F 08                               dw PSGINS_00
(1)   89/    4121 :                     
(1)   90/    4121 :                     ; ------------------------------------
(1)   91/    4121 :                     ; Track Gigalo
(1)   92/    4121 :                     ; ------------------------------------
(1)   93/    4121 :                     
(1)   94/    4121 :                     MusicBlk_Gigalo:
(1)   95/    4121 :                     		binclude "game/sound/music/gigalo_psg_blk.bin"
(1)   96/    412E :                     MusicPat_Gigalo:
(1)   97/    412E :                     		binclude "game/sound/music/gigalo_psg_patt.bin"
(1)   98/    6088 :                     MusicIns_Gigalo:
(1)   99/    6088 : (MACRO)             		instrSlot     insPSG,0,PsgIns_01
(1)   99/    6088 : 80 00                               db INSPSG,0
(1)   99/    608A : A1 08                               dw PSGINS_01
(1)  100/    608C : (MACRO)             		instrSlot insPNoise0,0,PsgIns_01
(1)  100/    608C : E4 00                               db INSPNOISE0,0
(1)  100/    608E : A1 08                               dw PSGINS_01
(1)  101/    6090 : (MACRO)             		instrSlot insPNoise1,0,PsgIns_01
(1)  101/    6090 : E5 00                               db INSPNOISE1,0
(1)  101/    6092 : A1 08                               dw PSGINS_01
(1)  102/    6094 : (MACRO)             		instrSlot insPNoise2,0,PsgIns_01
(1)  102/    6094 : E6 00                               db INSPNOISE2,0
(1)  102/    6096 : A1 08                               dw PSGINS_01
(1)  103/    6098 :                     
     155/    6098 :                     DataBank0_e:
     159/    6098 :                     		
     160/    6098 :                     		align 7FF0h		; Align up to 7FF0h (almost at the end of BANK 1)
     161/    7FF0 : 54 4D 52 20 53 45   		db "TMR SEGA  "		; TMR SEGA
                    47 41 20 20 
     162/    7FFA : 00 00               		dw 0			; Checksum (externally calculated)
     163/    7FFC : 00 00               		dw 0			; Serial
     164/    7FFE : 00                  		db 0			; Version
     165/    7FFF : 4C                  		db 4Ch			; ROM size: 32k
     166/    8000 :                     
     167/    8000 :                     ; ====================================================================
     168/    8000 :                     		
     169/    8000 :                     ROM_END:	align 8000h
     170/    8000 :                     
 AS V1.42 Beta [Bld 118] - source file main.asm - page 2 - 8/13/2019 21:02:05


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :                                        x86_64-unknown-linux - |
 ART_PRINTFONT :                AE7 C |  ART_PRINTFONT_E :             16E7 C |
 BANK_0 :                      FFFD - |  BANK_1 :                      FFFE - |
 BANK_2 :                      FFFF - |  BANK_CTRL :                   FFFC - |
*BIGENDIAN :                      0 - | *BITJOY1 :                        4 - |
*BITJOY2 :                        5 - | *BITJOYDOWN :                     1 - |
*BITJOYLEFT :                     2 - | *BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - | *BITJOYUP :                       0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
 CHNL_CHIP :                      0 - |  CHNL_EFFARG :                    6 - |
 CHNL_EFFID :                     5 - |  CHNL_EFNEWFREQ :                1A - |
 CHNL_EFNEWVOL :                 17 - |  CHNL_EFPORTAM :                 18 - |
 CHNL_EFVOLSLIDE :               16 - |  CHNL_FMPAN :                     D - |
*CHNL_FMREGB0 :                   E - | *CHNL_FMREGB4 :                   F - |
*CHNL_FMREGKEYS :                10 - | *CHNL_FMVOLBASE :                11 - |
 CHNL_FREQ :                      9 - |  CHNL_INS :                       3 - |
 CHNL_INSADDR :                   7 - |  CHNL_INSOPT :                    C - |
 CHNL_INSTYPE :                   B - |  CHNL_NOTE :                      2 - |
 CHNL_PSGINDX :                  14 - |  CHNL_PSGOUTFREQ :               1C - |
 CHNL_PSGVOLBASE :               12 - |  CHNL_PSGVOLENV :                13 - |
*CHNL_SMPLFLAGS :                15 - |  CHNL_TYPE :                      1 - |
 CHNL_VOL :                       4 - | *CODEBANK0 :                   1C00 C |
*CODEBANK0_E :                 1C7A C | *CONSTPI :        3.141592653589793 - |
*CONTROLLER_1 :                C257 - | *CONTROLLER_2 :                C259 - |
 CURR_NOISEMODE :              C154 C |  CURR_SNDBANK :                C155 C |
 DATABANK0 :                   4000 C | *DATABANK0_E :                 6098 C |
*DATE :                   8/13/2019 - | *FALSE :                          0 - |
*FULLPMMU :                       1 - |  GG_EXT_BITDIR :                  2 - |
 GG_EXT_COMM :                    1 - |  GG_INFO :                        0 - |
 GG_SERIAL :                      5 - | *GG_SERIAL_IN :                   4 - |
*GG_SERIAL_OUT :                  3 - |  GG_STEREO :                      6 - |
 GLBL_LASTORG :                1C00 - |  GLBL_LASTPC :                 1C00 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSFM :                          0 - |
*INSFM3 :                         1 - | *INSFM6 :                         2 - |
 INSPBASS0 :                     E0 - |  INSPBASS1 :                     E1 - |
 INSPBASS2 :                     E2 - |  INSPBASS3 :                     E3 - |
 INSPNOISE0 :                    E4 - |  INSPNOISE1 :                    E5 - |
 INSPNOISE2 :                    E6 - |  INSPNOISE3 :                    E7 - |
 INSPSG :                        80 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - | *JOY1 :                          10 - |
*JOY2 :                          20 - | *JOYDOWN :                        2 - |
*JOYLEFT :                        4 - |  JOYPAD_1 :                      DC - |
 JOYPAD_2 :                      DD - | *JOYPAD_CTRL :                   3F - |
*JOYRIGHT :                       8 - | *JOYUP :                          1 - |
*LISTON :                         3 - |  LIST_VDPREGS :                 ADC C |
*MACEXP :                         7 - |  MAX_CHNLS :                      4 - |
 MAX_MSERAM :                  1000 - |  MAX_PRNTLIST :                  10 - |
*MAX_TRACKS :                     2 - | *MEMORY_CTRL :                   3E - |
*MERCURY :                        1 - | *MOMCPU :                        80 - |
*MOMCPUNAME :                   Z80 - |  MSRAM_START :                 C000 - |
 MS_HINT :                       83 C |  MS_INIT :                     1800 C |
 MS_VINT :                       67 C |  MUSICBLK_GIGALO :             4121 C |
*MUSICBLK_TESTME :             4013 C |  MUSICINS_GIGALO :             6088 C |
*MUSICINS_TESTME :             40E9 C |  MUSICPAT_GIGALO :             412E C |
*MUSICPAT_TESTME :             4015 C | *NESTMAX :                      100 - |
*ON_HOLD :                        0 C | *ON_PRESS :                       1 C |
*PACKING :                        0 - | *PADDING :                        1 - |
 PAL_PRINTFONT :               16E7 C | *PLYR_ANI_CNTR :                  6 C |
*PLYR_ANI_TIMER :                 5 C | *PLYR_FRAME :                     4 C |
*PLYR_X :                         0 C | *PLYR_Y :                         2 C |
 PSGFREQ_LIST :                 7AD C |  PSGINS_00 :                    89F C |
 PSGINS_01 :                    8A1 C | *PSGINS_02 :                    8A7 C |
*PSGINS_03 :                    8AA C | *PSGINS_04 :                    8B6 C |
 PSG_CTRL :                      7F - | *RAM_CURRSPRX :                C255 C |
*RAM_CURRSPRY :                C253 C | *RAM_FRAMECNTR :               C282 C |
 RAM_FRAMECNTR.LOOP :          1C1E C | *RAM_GLBL_NULL :               D261 C |
 RAM_GLOBAL :                  D261 C |  RAM_HBLANK :                  C25E C |
 RAM_INPUTDATA :               C257 C |  RAM_LOCAL :                   C261 C |
 RAM_MSSOUND :                 C000 C |  RAM_MSSYSTEM :                C257 C |
 RAM_MSVIDEO :                 C156 C | *RAM_PLAYER :                  C261 C |
*RAM_SPRTX :                   C1D3 C | *RAM_SPRTY :                   C193 C |
 RAM_VBLANK :                  C25B C |  RAM_VDPCACHE :                C188 C |
*RAM_VDPREG1 :                 C281 C |  RAM_VIDPRNTLIST :             C156 C |
 RAM_VIDPRNTVRAM :             C186 C | *RELAXED :                        0 - |
*ROM_END :                     8000 C |  SIZEOF_GLOBAL :               D262 C |
 SIZEOF_GLOBAL.VINT :            48 C |  SIZEOF_INPUT :                   2 C |
*SIZEOF_MDRAM :                C005 C | *SIZEOF_MSRAM :                D262 C |
 SIZEOF_MSSND :                C156 C |  SIZEOF_MSSYS :                C261 C |
 SIZEOF_MSVID :                C257 C |  SNDBUFF_CHNLBUFF_1 :          C040 C |
 SNDBUFF_CHNLBUFF_2 :          C0C0 C |  SNDBUFF_TRACK_1 :             C000 C |
 SNDBUFF_TRACK_2 :             C020 C |  SNDBUFF_USEDCHNLS :           C140 C |
 SNDBUFF_USEDCHNLS_2 :         C14A C |  SNDDRV_READTRACK :             11A C |
 SNDDRV_READTRACK.CHIP_SETUP :  2C8 C |
 SNDDRV_READTRACK.DONTUPD_TRCK :                                        19C C |
 SNDDRV_READTRACK.DWN_EXFINE :  501 C |  SNDDRV_READTRACK.DWN_FINE :    511 C |
 SNDDRV_READTRACK.EFF_A :       4B1 C |  SNDDRV_READTRACK.EFF_B :       4B9 C |
 SNDDRV_READTRACK.EFF_D :       4C9 C |  SNDDRV_READTRACK.EFF_E :       4E3 C |
 SNDDRV_READTRACK.EFF_F :       523 C |  SNDDRV_READTRACK.EFF_LIST :    47B C |
 SNDDRV_READTRACK.EFF_NULL :    47A C |  SNDDRV_READTRACK.EFF_X :       55C C |
*SNDDRV_READTRACK.EXIT_BUSY :   213 C |  SNDDRV_READTRACK.EXIT_NOTES :  212 C |
 SNDDRV_READTRACK.FMPAN_LIST :  56B C |
 SNDDRV_READTRACK.FM_NORMALCHNL :                                       3F5 C |
*SNDDRV_READTRACK.FM_TURNOFF :  5B2 C |  SNDDRV_READTRACK.FORCE_ON :    13E C |
 SNDDRV_READTRACK.FREQRN_FM :   5A1 C |  SNDDRV_READTRACK.FREQRN_NOT3 : 595 C |
 SNDDRV_READTRACK.FREQRN_PSG :  5A3 C |  SNDDRV_READTRACK.FREQRN_SMPL : 5A2 C |
 SNDDRV_READTRACK.GOSRCH :      3BD C | *SNDDRV_READTRACK.GO_DOWN :     4D3 C |
 SNDDRV_READTRACK.GO_UP :       4D9 C |
 SNDDRV_READTRACK.GRAB_INSTSLOT :                                       56F C |
 SNDDRV_READTRACK.KEEP_CTRL :   1CA C |  SNDDRV_READTRACK.LAST_ENV :    2B3 C |
 SNDDRV_READTRACK.LEFTFM :      395 C |  SNDDRV_READTRACK.LIST_DOEFF :  631 C |
 SNDDRV_READTRACK.LOOP_ME :     1A7 C |  SNDDRV_READTRACK.LOWPRIOSET :  37E C |
 SNDDRV_READTRACK.LOWUNLKSET :  403 C | *SNDDRV_READTRACK.NEXT_PSG :    2C7 C |
 SNDDRV_READTRACK.NOTYPE3 :     3E9 C |  SNDDRV_READTRACK.NOT_NOISE :   26F C |
 SNDDRV_READTRACK.NOT_NSE :     5F8 C |  SNDDRV_READTRACK.NOT_NSE3 :    5E8 C |
 SNDDRV_READTRACK.NO_EFF :      1F6 C |  SNDDRV_READTRACK.NO_INST :     1DF C |
 SNDDRV_READTRACK.NO_MAX :      2BF C |  SNDDRV_READTRACK.NO_NEWEFF :   332 C |
 SNDDRV_READTRACK.NO_NEWINST :  319 C |  SNDDRV_READTRACK.NO_NEWVOL :   371 C |
 SNDDRV_READTRACK.NO_NOTE :     1D6 C |  SNDDRV_READTRACK.NO_NOTEREQ :  355 C |
 SNDDRV_READTRACK.NO_UPD_FREQ : 297 C |  SNDDRV_READTRACK.NO_VOL :      1E8 C |
 SNDDRV_READTRACK.PLUSFM :      38F C |  SNDDRV_READTRACK.PNTOO_LOW :   5C5 C |
 SNDDRV_READTRACK.PNTOO_MUCH :  5C0 C |  SNDDRV_READTRACK.PNTOPPSGV :   5D1 C |
 SNDDRV_READTRACK.PRTDWN_CONT : 522 C |  SNDDRV_READTRACK.PRTUP_CONT :  55B C |
 SNDDRV_READTRACK.PSG_EF :      69E C |  SNDDRV_READTRACK.PSG_ENVLOPE : 24D C |
 SNDDRV_READTRACK.PSG_INSTR :   306 C |
 SNDDRV_READTRACK.ROW_COUNTDWN :                                        219 C |
 SNDDRV_READTRACK.RUN_EFFECT :  618 C |
 SNDDRV_READTRACK.RUN_FREQUENCY :                                       585 C |
 SNDDRV_READTRACK.SEARCH_SLOT : 3A0 C |
 SNDDRV_READTRACK.SETFM_SAMPLE :                                        426 C |
 SNDDRV_READTRACK.SETFREQ_PSG : 427 C |  SNDDRV_READTRACK.SETPSG_VOL :  67B C |
 SNDDRV_READTRACK.SET_D :       667 C |  SNDDRV_READTRACK.SET_EFFECT :  461 C |
 SNDDRV_READTRACK.SET_E_F :     681 C |  SNDDRV_READTRACK.SET_FM_FREQ : 5B4 C |
 SNDDRV_READTRACK.SET_FM_INS :  5B3 C |  SNDDRV_READTRACK.SET_FM_VOL :  5B5 C |
 SNDDRV_READTRACK.SET_FREQUENCY :                                       3D9 C |
 SNDDRV_READTRACK.SET_PORTAM :  51C C |
 SNDDRV_READTRACK.SET_PSG_FREQ :                                        5D5 C |
 SNDDRV_READTRACK.SET_PSG_VOL : 5B7 C | *SNDDRV_READTRACK.SET_SAMPL :   5B6 C |
 SNDDRV_READTRACK.SET_TIMER :   20F C |  SNDDRV_READTRACK.SET_VOL :     2C4 C |
 SNDDRV_READTRACK.SET_VOLUME :  3CB C |  SNDDRV_READTRACK.SET_X :       6BC C |
 SNDDRV_READTRACK.SKIP_BLOCK :  203 C |  SNDDRV_READTRACK.SRCHFM :      3B7 C |
 SNDDRV_READTRACK.STOP_TRACK :  207 C |  SNDDRV_READTRACK.TOOLOW :      6B3 C |
*SNDDRV_READTRACK.TRCK_RESTART :                                        157 C |
 SNDDRV_READTRACK.ULEFTFM :     41A C |  SNDDRV_READTRACK.UNLOCK_CHNL : 3F6 C |
 SNDDRV_READTRACK.UPLUSFM :     414 C |  SNDDRV_READTRACK.UP_EXFINE :   544 C |
 SNDDRV_READTRACK.UP_FINE :     550 C |  SNDDRV_READTRACK.USE_NEWEFF :  326 C |
 SNDDRV_READTRACK.USE_NEWINST : 2DE C |  SNDDRV_READTRACK.USE_NEWVOL :  362 C |
 SNDDRV_READTRACK.USE_NOTEREQ : 340 C |  SNDDRV_READTRACK.VOL_ISPSG :   3D5 C |
 SNDDRV_REQTRACK :              6BD C |  SNDDRV_REQTRACK.REQ01 :        6DE C |
 SNDDRV_REQTRACK.REQ02 :        737 C |  SNDDRV_REQTRACK.REQ_LIST :     6D8 C |
 SNDDRV_RESETCHAN :             73B C |  SNDDRV_RESETCHAN.DONTVOLFM :   7A0 C |
 SNDDRV_RESETCHAN.FM_SHUT :     7A0 C |  SNDDRV_RESETCHAN.INITCHNLS :   757 C |
 SNDDRV_RESETCHAN.LOWPRIO :     748 C |  SNDDRV_RESETCHAN.NEXTTYPE :    74B C |
 SNDDRV_RESETCHAN.NXTFMCHNL :   78A C |  SOUND_INIT :                    86 C |
 SOUND_INIT.NXTCHNL :            AA C |  SOUND_RUN :                     B9 C |
 SOUND_SETTRACK :                CF C |  SOUND_SETTRACK.SFX_PRIO :       DB C |
*SOUND_STOPTRACK :              109 C |  SOUND_STOPTRACK.SFX_PRIO :     115 C |
 STR_TEST :                    1C27 C |  SYSTEM_INIT :                 1707 C |
 SYSTEM_INIT.NOT_GG :          1726 C | *SYSTEM_INPUT :                1754 C |
 SYSTEM_INPUT.NO_GGSTRT :      1766 C |  SYSTEM_VSYNC :                174C C |
*TIME :                    21:02:04 - |  TRACKDATA_TEST :              1C21 C |
 TRCK_ACTIVE :                   11 - |  TRCK_BLOCKCURR :                 E - |
 TRCK_BLOCKS :                   12 - |  TRCK_INSTR :                    16 - |
*TRCK_MASTERVOL :                 F - |  TRCK_PATTBASE :                 14 - |
 TRCK_PATTREAD :                 18 - |  TRCK_PRIORITY :                 10 - |
 TRCK_PSGNOISE :                  C - |  TRCK_REQBLK :                    0 - |
*TRCK_REQCHNLS :                  B - |  TRCK_REQCURRBLK :                8 - |
 TRCK_REQFLAG :                   A - |  TRCK_REQINS :                    4 - |
 TRCK_REQPATT :                   2 - |  TRCK_REQSNDBNK :                 9 - |
 TRCK_REQTEMPO :                  7 - |  TRCK_REQTICKS :                  6 - |
 TRCK_ROWSTEPS :                 1A - |  TRCK_ROWWAIT :                  1E - |
 TRCK_TEMPOBITS :                1D - |  TRCK_TICKSCURR :                1F - |
 TRCK_TICKSMAIN :                1C - |  TRCK_TICKSREAD :                 D - |
*TRUE :                           1 - | *VARNULLVRAM :                  1FF - |
 VDP_CTRL :                      BF - |  VDP_DATA :                      BE - |
*VDP_PALETTE :                 C000 - | *VERSION :                     142F - |
 VIDEO_CLEAR :                  90F C |  VIDEO_CLEAR.CLRSCRN :          938 C |
 VIDEO_CLEAR.MARK_MS :          91A C |  VIDEO_CLEAR.PAL_CLR :          926 C |
 VIDEO_INIT :                   8BC C |  VIDEO_INIT.LOOP :              8C9 C |
 VIDEO_INITPRINT :              8D6 C |  VIDEO_LOADART :                97F C |
 VIDEO_LOADART.LOOP :           99E C |  VIDEO_LOADPAL :                942 C |
 VIDEO_LOADPAL.LOOPMS :         961 C |  VIDEO_LOADPAL.MARK_MS :        959 C |
 VIDEO_PRINT :                  9A7 C |  VIDEO_PRINT.BREQ :             A42 C |
 VIDEO_PRINT.DO_NIBBL :         AB5 C |  VIDEO_PRINT.ENDVAL :           AA6 C |
 VIDEO_PRINT.EXIT :             A5E C |  VIDEO_PRINT.LOOP :             9E1 C |
 VIDEO_PRINT.LOOPVAL :          A62 C |  VIDEO_PRINT.NEXT :             A05 C |
 VIDEO_PRINT.NOADD :            AC2 C |  VIDEO_PRINT.NOBYTE :           A7E C |
 VIDEO_PRINT.NOCENT :           9BC C |  VIDEO_PRINT.NOWORD :           A93 C |
 VIDEO_PRINT.PUT_BYTE :         AAC C |  VIDEO_PRINT.SPECIAL :          A13 C |
*VIDEO_UPDATE :                 8FD C |  VIDEO_UPDATE.LOOP :            904 C |
*V_COUNTER :                     7E - |

    348 symbols
     98 unused symbols

 AS V1.42 Beta [Bld 118] - source file main.asm - page 3 - 8/13/2019 21:02:05


  defined macros:
  ---------------

FINISH                                | INSTRSLOT                            
ROMPAD                                | STRUCT                               

      4 macros

 AS V1.42 Beta [Bld 118] - source file main.asm - page 4 - 8/13/2019 21:02:05


  defined functions:
  ------------------

LOCATE                                |

 AS V1.42 Beta [Bld 118] - source file main.asm - page 5 - 8/13/2019 21:02:05


  codepages:
  ----------

STANDARD (0 changed characters)


0.24 seconds assembly time

   3513 lines source file
   3669 lines incl. macro expansions
      6 passes
      0 errors
      0 warnings
